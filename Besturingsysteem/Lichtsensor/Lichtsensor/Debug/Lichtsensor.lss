
Lichtsensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000008b6  0000094a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800152  00800152  0000099c  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  0000099c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001620  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000017d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001209  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000823  00000000  00000000  00002b41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b90  00000000  00000000  00003364  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00003ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000039b  00000000  00000000  00004170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009a6  00000000  00000000  0000450b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00004eb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 81 00 	jmp	0x102	; 0x102 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 eb       	ldi	r30, 0xB6	; 182
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 35       	cpi	r26, 0x52	; 82
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a2 e5       	ldi	r26, 0x52	; 82
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 35       	cpi	r26, 0x5B	; 91
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 67 00 	call	0xce	; 0xce <main>
  9e:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:

void ADC_init()
{
	//ref = vcc, left adjust the result (8 bit resolution)
	// select channel 0 (PC0 = input)
	ADMUX = (1 << REFS0) | (1 << MUX1)| (1<<ADLAR); // port A2
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 7c 00 	sts	0x007C, r24
	//ADMUX |= (1<<REFS0)| (1<<ADLAR);
	// enable the ADC & prescale = 128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
  ac:	87 e8       	ldi	r24, 0x87	; 135
  ae:	80 93 7a 00 	sts	0x007A, r24
	DIDR0 = (1<<ADC5D); //!!Disables pin 5? not sure what it does atm
  b2:	80 e2       	ldi	r24, 0x20	; 32
  b4:	80 93 7e 00 	sts	0x007E, r24
	
}
  b8:	08 95       	ret

000000ba <init_timer>:
	return ADCH; // 8bit resolution, left adjusted
}

void init_timer (void){
	//8bittimer
	TCCR0A = (1<< WGM01); // set CTC Bit
  ba:	82 e0       	ldi	r24, 0x02	; 2
  bc:	84 bd       	out	0x24, r24	; 36
	OCR0A = 312.5; // Dit geeft 1/10 miliseconde
  be:	9f ef       	ldi	r25, 0xFF	; 255
  c0:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = (1<< OCIE0A);
  c2:	80 93 6e 00 	sts	0x006E, r24
	
	
	TCCR0B |= (1 << CS02) | (1 <<CS00); // start at 1024 prescaler
  c6:	85 b5       	in	r24, 0x25	; 37
  c8:	85 60       	ori	r24, 0x05	; 5
  ca:	85 bd       	out	0x25, r24	; 37
		
}
  cc:	08 95       	ret

000000ce <main>:
volatile int extraTime = 0;


int main()
{
	init_timer();
  ce:	0e 94 5d 00 	call	0xba	; 0xba <init_timer>
	ser_init();
  d2:	0e 94 df 00 	call	0x1be	; 0x1be <ser_init>
	ADC_init();
  d6:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	sei(); // set external interrupt
  da:	78 94       	sei
	

	//int a = 0;
	printf("An interrupt should be occuring every 5 seconds\n");
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	91 e0       	ldi	r25, 0x01	; 1
  e0:	0e 94 76 01 	call	0x2ec	; 0x2ec <puts>
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <main+0x16>

000000e6 <get_adc_value>:
	
}

uint8_t get_adc_value()
{
	ADCSRA |= (1<<ADSC); // start conversion
  e6:	ea e7       	ldi	r30, 0x7A	; 122
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	80 64       	ori	r24, 0x40	; 64
  ee:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
  f0:	80 81       	ld	r24, Z
  f2:	86 fd       	sbrc	r24, 6
  f4:	fd cf       	rjmp	.-6      	; 0xf0 <get_adc_value+0xa>
	return ADCH; // 8bit resolution, left adjusted
  f6:	80 91 79 00 	lds	r24, 0x0079
}
  fa:	08 95       	ret

000000fc <getLight>:
/*
	Dit werdt gebruikt om de lichtintensiteit aan te roepen.
	Het werkte niet optimaal dus is het niet in gebruik
*/
uint8_t getLight(){
	uint8_t temp = get_adc_value();
  fc:	0e 94 73 00 	call	0xe6	; 0xe6 <get_adc_value>
	return temp;
}
 100:	08 95       	ret

00000102 <__vector_14>:
Work in progress.

Timerinterrupt geeft om de 30/(of2) seconden een interrupt
https://eleccelerator.com/avr-timer-calculator/
*/
ISR(TIMER0_COMPA_vect){
 102:	1f 92       	push	r1
 104:	0f 92       	push	r0
 106:	0f b6       	in	r0, 0x3f	; 63
 108:	0f 92       	push	r0
 10a:	11 24       	eor	r1, r1
 10c:	2f 93       	push	r18
 10e:	3f 93       	push	r19
 110:	4f 93       	push	r20
 112:	5f 93       	push	r21
 114:	6f 93       	push	r22
 116:	7f 93       	push	r23
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	af 93       	push	r26
 11e:	bf 93       	push	r27
 120:	cf 93       	push	r28
 122:	ef 93       	push	r30
 124:	ff 93       	push	r31
	
	extraTime++;
 126:	80 91 52 01 	lds	r24, 0x0152
 12a:	90 91 53 01 	lds	r25, 0x0153
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	90 93 53 01 	sts	0x0153, r25
 134:	80 93 52 01 	sts	0x0152, r24
	
	if(extraTime>1000){
 138:	80 91 52 01 	lds	r24, 0x0152
 13c:	90 91 53 01 	lds	r25, 0x0153
 140:	23 e0       	ldi	r18, 0x03	; 3
 142:	89 3e       	cpi	r24, 0xE9	; 233
 144:	92 07       	cpc	r25, r18
 146:	4c f1       	brlt	.+82     	; 0x19a <__vector_14+0x98>
		printf("%i intensiteit=%d\n", i, getLight());
 148:	c0 91 54 01 	lds	r28, 0x0154
 14c:	0e 94 7e 00 	call	0xfc	; 0xfc <getLight>
 150:	00 d0       	rcall	.+0      	; 0x152 <__vector_14+0x50>
 152:	00 d0       	rcall	.+0      	; 0x154 <__vector_14+0x52>
 154:	00 d0       	rcall	.+0      	; 0x156 <__vector_14+0x54>
 156:	ed b7       	in	r30, 0x3d	; 61
 158:	fe b7       	in	r31, 0x3e	; 62
 15a:	31 96       	adiw	r30, 0x01	; 1
 15c:	20 e3       	ldi	r18, 0x30	; 48
 15e:	31 e0       	ldi	r19, 0x01	; 1
 160:	ad b7       	in	r26, 0x3d	; 61
 162:	be b7       	in	r27, 0x3e	; 62
 164:	12 96       	adiw	r26, 0x02	; 2
 166:	3c 93       	st	X, r19
 168:	2e 93       	st	-X, r18
 16a:	11 97       	sbiw	r26, 0x01	; 1
 16c:	c2 83       	std	Z+2, r28	; 0x02
 16e:	13 82       	std	Z+3, r1	; 0x03
 170:	84 83       	std	Z+4, r24	; 0x04
 172:	15 82       	std	Z+5, r1	; 0x05
 174:	0e 94 61 01 	call	0x2c2	; 0x2c2 <printf>
		i++;
 178:	80 91 54 01 	lds	r24, 0x0154
 17c:	8f 5f       	subi	r24, 0xFF	; 255
 17e:	80 93 54 01 	sts	0x0154, r24
		
		// Resets de timer en de Totale timer ticks
		extraTime = 0;
 182:	10 92 53 01 	sts	0x0153, r1
 186:	10 92 52 01 	sts	0x0152, r1
 18a:	8d b7       	in	r24, 0x3d	; 61
 18c:	9e b7       	in	r25, 0x3e	; 62
 18e:	06 96       	adiw	r24, 0x06	; 6
 190:	0f b6       	in	r0, 0x3f	; 63
 192:	f8 94       	cli
 194:	9e bf       	out	0x3e, r25	; 62
 196:	0f be       	out	0x3f, r0	; 63
 198:	8d bf       	out	0x3d, r24	; 61
		
		
		//OCR1A = 468750;
		//TCNT1 = 468750; // Dit was bij het testen van 8bitclock
	}
}
 19a:	ff 91       	pop	r31
 19c:	ef 91       	pop	r30
 19e:	cf 91       	pop	r28
 1a0:	bf 91       	pop	r27
 1a2:	af 91       	pop	r26
 1a4:	9f 91       	pop	r25
 1a6:	8f 91       	pop	r24
 1a8:	7f 91       	pop	r23
 1aa:	6f 91       	pop	r22
 1ac:	5f 91       	pop	r21
 1ae:	4f 91       	pop	r20
 1b0:	3f 91       	pop	r19
 1b2:	2f 91       	pop	r18
 1b4:	0f 90       	pop	r0
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	0f 90       	pop	r0
 1ba:	1f 90       	pop	r1
 1bc:	18 95       	reti

000001be <ser_init>:

FILE uart_output = FDEV_SETUP_STREAM(ser_stdio_putchar, NULL, _FDEV_SETUP_WRITE);

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
 1be:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
 1c2:	83 e3       	ldi	r24, 0x33	; 51
 1c4:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
 1c8:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
 1cc:	88 e1       	ldi	r24, 0x18	; 24
 1ce:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
 1d2:	86 e0       	ldi	r24, 0x06	; 6
 1d4:	80 93 c2 00 	sts	0x00C2, r24
	// Setup stdout
	stdout=&uart_output;
 1d8:	83 e4       	ldi	r24, 0x43	; 67
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	90 93 58 01 	sts	0x0158, r25
 1e0:	80 93 57 01 	sts	0x0157, r24
}
 1e4:	08 95       	ret

000001e6 <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
 1e6:	e0 ec       	ldi	r30, 0xC0	; 192
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	90 81       	ld	r25, Z
 1ec:	95 ff       	sbrs	r25, 5
 1ee:	fd cf       	rjmp	.-6      	; 0x1ea <ser_transmit+0x4>
	// send the data
	UDR0 = data;
 1f0:	80 93 c6 00 	sts	0x00C6, r24
}
 1f4:	08 95       	ret

000001f6 <ser_stdio_putchar>:
// output on USB = PD1 = board pin 1
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

// Getchar en putchar tbv. stdio.h
void ser_stdio_putchar(char c, FILE *stream) {
 1f6:	cf 93       	push	r28
 1f8:	c8 2f       	mov	r28, r24
	if (c=='\n') {
 1fa:	8a 30       	cpi	r24, 0x0A	; 10
 1fc:	19 f4       	brne	.+6      	; 0x204 <ser_stdio_putchar+0xe>
		ser_transmit('\r');
 1fe:	8d e0       	ldi	r24, 0x0D	; 13
 200:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>
	}
	ser_transmit(c);
 204:	8c 2f       	mov	r24, r28
 206:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>
}
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <ser_receive>:
	UDR0 = data;
}

// Low level receive
uint8_t ser_receive() {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
 20e:	e0 ec       	ldi	r30, 0xC0	; 192
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	88 23       	and	r24, r24
 216:	ec f7       	brge	.-6      	; 0x212 <ser_receive+0x4>
	return UDR0;
 218:	80 91 c6 00 	lds	r24, 0x00C6
}
 21c:	08 95       	ret

0000021e <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
 224:	88 81       	ld	r24, Y
 226:	88 23       	and	r24, r24
 228:	31 f0       	breq	.+12     	; 0x236 <ser_write+0x18>
	return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
 22a:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
 22c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
 230:	89 91       	ld	r24, Y+
 232:	88 23       	and	r24, r24
 234:	d9 f7       	brne	.-10     	; 0x22c <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	08 95       	ret

0000023c <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
 23c:	0e 94 0f 01 	call	0x21e	; 0x21e <ser_write>
	ser_transmit('\r');
 240:	8d e0       	ldi	r24, 0x0D	; 13
 242:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>
	ser_transmit('\n');
 246:	8a e0       	ldi	r24, 0x0A	; 10
 248:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>
}
 24c:	08 95       	ret

0000024e <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
 24e:	af 92       	push	r10
 250:	bf 92       	push	r11
 252:	cf 92       	push	r12
 254:	df 92       	push	r13
 256:	ef 92       	push	r14
 258:	ff 92       	push	r15
 25a:	0f 93       	push	r16
 25c:	1f 93       	push	r17
 25e:	cf 93       	push	r28
 260:	df 93       	push	r29
 262:	5c 01       	movw	r10, r24
 264:	d4 2f       	mov	r29, r20
	int i=0;
 266:	6c 01       	movw	r12, r24
 268:	ee 24       	eor	r14, r14
 26a:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 26c:	8b 01       	movw	r16, r22
 26e:	01 50       	subi	r16, 0x01	; 1
 270:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
 272:	0e 94 07 01 	call	0x20e	; 0x20e <ser_receive>
 276:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
 278:	dd 23       	and	r29, r29
 27a:	11 f0       	breq	.+4      	; 0x280 <ser_readln+0x32>
 27c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>
		if (c=='\r') {
 280:	cd 30       	cpi	r28, 0x0D	; 13
 282:	31 f4       	brne	.+12     	; 0x290 <ser_readln+0x42>
			if (echo) ser_transmit('\n');
 284:	dd 23       	and	r29, r29
 286:	71 f0       	breq	.+28     	; 0x2a4 <ser_readln+0x56>
 288:	8a e0       	ldi	r24, 0x0A	; 10
 28a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ser_transmit>
 28e:	0a c0       	rjmp	.+20     	; 0x2a4 <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 290:	e0 16       	cp	r14, r16
 292:	f1 06       	cpc	r15, r17
 294:	74 f7       	brge	.-36     	; 0x272 <ser_readln+0x24>
			buf[i++]=c;
 296:	f6 01       	movw	r30, r12
 298:	c1 93       	st	Z+, r28
 29a:	6f 01       	movw	r12, r30
 29c:	08 94       	sec
 29e:	e1 1c       	adc	r14, r1
 2a0:	f1 1c       	adc	r15, r1
 2a2:	e7 cf       	rjmp	.-50     	; 0x272 <ser_readln+0x24>
		}
	}
	buf[i]='\0';
 2a4:	ea 0c       	add	r14, r10
 2a6:	fb 1c       	adc	r15, r11
 2a8:	f7 01       	movw	r30, r14
 2aa:	10 82       	st	Z, r1
}
 2ac:	df 91       	pop	r29
 2ae:	cf 91       	pop	r28
 2b0:	1f 91       	pop	r17
 2b2:	0f 91       	pop	r16
 2b4:	ff 90       	pop	r15
 2b6:	ef 90       	pop	r14
 2b8:	df 90       	pop	r13
 2ba:	cf 90       	pop	r12
 2bc:	bf 90       	pop	r11
 2be:	af 90       	pop	r10
 2c0:	08 95       	ret

000002c2 <printf>:
 2c2:	a0 e0       	ldi	r26, 0x00	; 0
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	e7 e6       	ldi	r30, 0x67	; 103
 2c8:	f1 e0       	ldi	r31, 0x01	; 1
 2ca:	0c 94 32 04 	jmp	0x864	; 0x864 <__prologue_saves__+0x20>
 2ce:	fe 01       	movw	r30, r28
 2d0:	35 96       	adiw	r30, 0x05	; 5
 2d2:	61 91       	ld	r22, Z+
 2d4:	71 91       	ld	r23, Z+
 2d6:	80 91 57 01 	lds	r24, 0x0157
 2da:	90 91 58 01 	lds	r25, 0x0158
 2de:	af 01       	movw	r20, r30
 2e0:	0e 94 a4 01 	call	0x348	; 0x348 <vfprintf>
 2e4:	20 96       	adiw	r28, 0x00	; 0
 2e6:	e2 e0       	ldi	r30, 0x02	; 2
 2e8:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__epilogue_restores__+0x20>

000002ec <puts>:
 2ec:	0f 93       	push	r16
 2ee:	1f 93       	push	r17
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	8c 01       	movw	r16, r24
 2f6:	e0 91 57 01 	lds	r30, 0x0157
 2fa:	f0 91 58 01 	lds	r31, 0x0158
 2fe:	83 81       	ldd	r24, Z+3	; 0x03
 300:	81 ff       	sbrs	r24, 1
 302:	1a c0       	rjmp	.+52     	; 0x338 <puts+0x4c>
 304:	c0 e0       	ldi	r28, 0x00	; 0
 306:	d0 e0       	ldi	r29, 0x00	; 0
 308:	05 c0       	rjmp	.+10     	; 0x314 <puts+0x28>
 30a:	09 95       	icall
 30c:	00 97       	sbiw	r24, 0x00	; 0
 30e:	11 f0       	breq	.+4      	; 0x314 <puts+0x28>
 310:	cf ef       	ldi	r28, 0xFF	; 255
 312:	df ef       	ldi	r29, 0xFF	; 255
 314:	f8 01       	movw	r30, r16
 316:	81 91       	ld	r24, Z+
 318:	8f 01       	movw	r16, r30
 31a:	60 91 57 01 	lds	r22, 0x0157
 31e:	70 91 58 01 	lds	r23, 0x0158
 322:	db 01       	movw	r26, r22
 324:	18 96       	adiw	r26, 0x08	; 8
 326:	ed 91       	ld	r30, X+
 328:	fc 91       	ld	r31, X
 32a:	19 97       	sbiw	r26, 0x09	; 9
 32c:	88 23       	and	r24, r24
 32e:	69 f7       	brne	.-38     	; 0x30a <puts+0x1e>
 330:	8a e0       	ldi	r24, 0x0A	; 10
 332:	09 95       	icall
 334:	00 97       	sbiw	r24, 0x00	; 0
 336:	11 f0       	breq	.+4      	; 0x33c <puts+0x50>
 338:	cf ef       	ldi	r28, 0xFF	; 255
 33a:	df ef       	ldi	r29, 0xFF	; 255
 33c:	ce 01       	movw	r24, r28
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	0f 91       	pop	r16
 346:	08 95       	ret

00000348 <vfprintf>:
 348:	ad e0       	ldi	r26, 0x0D	; 13
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	ea ea       	ldi	r30, 0xAA	; 170
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	0c 94 22 04 	jmp	0x844	; 0x844 <__prologue_saves__>
 354:	3c 01       	movw	r6, r24
 356:	7d 87       	std	Y+13, r23	; 0x0d
 358:	6c 87       	std	Y+12, r22	; 0x0c
 35a:	5a 01       	movw	r10, r20
 35c:	fc 01       	movw	r30, r24
 35e:	17 82       	std	Z+7, r1	; 0x07
 360:	16 82       	std	Z+6, r1	; 0x06
 362:	83 81       	ldd	r24, Z+3	; 0x03
 364:	81 ff       	sbrs	r24, 1
 366:	c8 c1       	rjmp	.+912    	; 0x6f8 <vfprintf+0x3b0>
 368:	2e 01       	movw	r4, r28
 36a:	08 94       	sec
 36c:	41 1c       	adc	r4, r1
 36e:	51 1c       	adc	r5, r1
 370:	f3 01       	movw	r30, r6
 372:	93 81       	ldd	r25, Z+3	; 0x03
 374:	ec 85       	ldd	r30, Y+12	; 0x0c
 376:	fd 85       	ldd	r31, Y+13	; 0x0d
 378:	93 fd       	sbrc	r25, 3
 37a:	85 91       	lpm	r24, Z+
 37c:	93 ff       	sbrs	r25, 3
 37e:	81 91       	ld	r24, Z+
 380:	fd 87       	std	Y+13, r31	; 0x0d
 382:	ec 87       	std	Y+12, r30	; 0x0c
 384:	88 23       	and	r24, r24
 386:	09 f4       	brne	.+2      	; 0x38a <vfprintf+0x42>
 388:	b3 c1       	rjmp	.+870    	; 0x6f0 <vfprintf+0x3a8>
 38a:	85 32       	cpi	r24, 0x25	; 37
 38c:	41 f4       	brne	.+16     	; 0x39e <vfprintf+0x56>
 38e:	93 fd       	sbrc	r25, 3
 390:	85 91       	lpm	r24, Z+
 392:	93 ff       	sbrs	r25, 3
 394:	81 91       	ld	r24, Z+
 396:	fd 87       	std	Y+13, r31	; 0x0d
 398:	ec 87       	std	Y+12, r30	; 0x0c
 39a:	85 32       	cpi	r24, 0x25	; 37
 39c:	29 f4       	brne	.+10     	; 0x3a8 <vfprintf+0x60>
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	b3 01       	movw	r22, r6
 3a2:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 3a6:	e4 cf       	rjmp	.-56     	; 0x370 <vfprintf+0x28>
 3a8:	ff 24       	eor	r15, r15
 3aa:	ee 24       	eor	r14, r14
 3ac:	10 e0       	ldi	r17, 0x00	; 0
 3ae:	10 32       	cpi	r17, 0x20	; 32
 3b0:	b0 f4       	brcc	.+44     	; 0x3de <vfprintf+0x96>
 3b2:	8b 32       	cpi	r24, 0x2B	; 43
 3b4:	69 f0       	breq	.+26     	; 0x3d0 <vfprintf+0x88>
 3b6:	8c 32       	cpi	r24, 0x2C	; 44
 3b8:	28 f4       	brcc	.+10     	; 0x3c4 <vfprintf+0x7c>
 3ba:	80 32       	cpi	r24, 0x20	; 32
 3bc:	51 f0       	breq	.+20     	; 0x3d2 <vfprintf+0x8a>
 3be:	83 32       	cpi	r24, 0x23	; 35
 3c0:	71 f4       	brne	.+28     	; 0x3de <vfprintf+0x96>
 3c2:	0b c0       	rjmp	.+22     	; 0x3da <vfprintf+0x92>
 3c4:	8d 32       	cpi	r24, 0x2D	; 45
 3c6:	39 f0       	breq	.+14     	; 0x3d6 <vfprintf+0x8e>
 3c8:	80 33       	cpi	r24, 0x30	; 48
 3ca:	49 f4       	brne	.+18     	; 0x3de <vfprintf+0x96>
 3cc:	11 60       	ori	r17, 0x01	; 1
 3ce:	2c c0       	rjmp	.+88     	; 0x428 <vfprintf+0xe0>
 3d0:	12 60       	ori	r17, 0x02	; 2
 3d2:	14 60       	ori	r17, 0x04	; 4
 3d4:	29 c0       	rjmp	.+82     	; 0x428 <vfprintf+0xe0>
 3d6:	18 60       	ori	r17, 0x08	; 8
 3d8:	27 c0       	rjmp	.+78     	; 0x428 <vfprintf+0xe0>
 3da:	10 61       	ori	r17, 0x10	; 16
 3dc:	25 c0       	rjmp	.+74     	; 0x428 <vfprintf+0xe0>
 3de:	17 fd       	sbrc	r17, 7
 3e0:	2e c0       	rjmp	.+92     	; 0x43e <vfprintf+0xf6>
 3e2:	28 2f       	mov	r18, r24
 3e4:	20 53       	subi	r18, 0x30	; 48
 3e6:	2a 30       	cpi	r18, 0x0A	; 10
 3e8:	98 f4       	brcc	.+38     	; 0x410 <vfprintf+0xc8>
 3ea:	16 ff       	sbrs	r17, 6
 3ec:	08 c0       	rjmp	.+16     	; 0x3fe <vfprintf+0xb6>
 3ee:	8f 2d       	mov	r24, r15
 3f0:	88 0f       	add	r24, r24
 3f2:	f8 2e       	mov	r15, r24
 3f4:	ff 0c       	add	r15, r15
 3f6:	ff 0c       	add	r15, r15
 3f8:	f8 0e       	add	r15, r24
 3fa:	f2 0e       	add	r15, r18
 3fc:	15 c0       	rjmp	.+42     	; 0x428 <vfprintf+0xe0>
 3fe:	8e 2d       	mov	r24, r14
 400:	88 0f       	add	r24, r24
 402:	e8 2e       	mov	r14, r24
 404:	ee 0c       	add	r14, r14
 406:	ee 0c       	add	r14, r14
 408:	e8 0e       	add	r14, r24
 40a:	e2 0e       	add	r14, r18
 40c:	10 62       	ori	r17, 0x20	; 32
 40e:	0c c0       	rjmp	.+24     	; 0x428 <vfprintf+0xe0>
 410:	8e 32       	cpi	r24, 0x2E	; 46
 412:	21 f4       	brne	.+8      	; 0x41c <vfprintf+0xd4>
 414:	16 fd       	sbrc	r17, 6
 416:	6c c1       	rjmp	.+728    	; 0x6f0 <vfprintf+0x3a8>
 418:	10 64       	ori	r17, 0x40	; 64
 41a:	06 c0       	rjmp	.+12     	; 0x428 <vfprintf+0xe0>
 41c:	8c 36       	cpi	r24, 0x6C	; 108
 41e:	11 f4       	brne	.+4      	; 0x424 <vfprintf+0xdc>
 420:	10 68       	ori	r17, 0x80	; 128
 422:	02 c0       	rjmp	.+4      	; 0x428 <vfprintf+0xe0>
 424:	88 36       	cpi	r24, 0x68	; 104
 426:	59 f4       	brne	.+22     	; 0x43e <vfprintf+0xf6>
 428:	ec 85       	ldd	r30, Y+12	; 0x0c
 42a:	fd 85       	ldd	r31, Y+13	; 0x0d
 42c:	93 fd       	sbrc	r25, 3
 42e:	85 91       	lpm	r24, Z+
 430:	93 ff       	sbrs	r25, 3
 432:	81 91       	ld	r24, Z+
 434:	fd 87       	std	Y+13, r31	; 0x0d
 436:	ec 87       	std	Y+12, r30	; 0x0c
 438:	88 23       	and	r24, r24
 43a:	09 f0       	breq	.+2      	; 0x43e <vfprintf+0xf6>
 43c:	b8 cf       	rjmp	.-144    	; 0x3ae <vfprintf+0x66>
 43e:	98 2f       	mov	r25, r24
 440:	95 54       	subi	r25, 0x45	; 69
 442:	93 30       	cpi	r25, 0x03	; 3
 444:	18 f0       	brcs	.+6      	; 0x44c <vfprintf+0x104>
 446:	90 52       	subi	r25, 0x20	; 32
 448:	93 30       	cpi	r25, 0x03	; 3
 44a:	38 f4       	brcc	.+14     	; 0x45a <vfprintf+0x112>
 44c:	24 e0       	ldi	r18, 0x04	; 4
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	a2 0e       	add	r10, r18
 452:	b3 1e       	adc	r11, r19
 454:	3f e3       	ldi	r19, 0x3F	; 63
 456:	39 83       	std	Y+1, r19	; 0x01
 458:	0f c0       	rjmp	.+30     	; 0x478 <vfprintf+0x130>
 45a:	83 36       	cpi	r24, 0x63	; 99
 45c:	31 f0       	breq	.+12     	; 0x46a <vfprintf+0x122>
 45e:	83 37       	cpi	r24, 0x73	; 115
 460:	81 f0       	breq	.+32     	; 0x482 <vfprintf+0x13a>
 462:	83 35       	cpi	r24, 0x53	; 83
 464:	09 f0       	breq	.+2      	; 0x468 <vfprintf+0x120>
 466:	5a c0       	rjmp	.+180    	; 0x51c <vfprintf+0x1d4>
 468:	22 c0       	rjmp	.+68     	; 0x4ae <vfprintf+0x166>
 46a:	f5 01       	movw	r30, r10
 46c:	80 81       	ld	r24, Z
 46e:	89 83       	std	Y+1, r24	; 0x01
 470:	22 e0       	ldi	r18, 0x02	; 2
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	a2 0e       	add	r10, r18
 476:	b3 1e       	adc	r11, r19
 478:	21 e0       	ldi	r18, 0x01	; 1
 47a:	c2 2e       	mov	r12, r18
 47c:	d1 2c       	mov	r13, r1
 47e:	42 01       	movw	r8, r4
 480:	14 c0       	rjmp	.+40     	; 0x4aa <vfprintf+0x162>
 482:	92 e0       	ldi	r25, 0x02	; 2
 484:	29 2e       	mov	r2, r25
 486:	31 2c       	mov	r3, r1
 488:	2a 0c       	add	r2, r10
 48a:	3b 1c       	adc	r3, r11
 48c:	f5 01       	movw	r30, r10
 48e:	80 80       	ld	r8, Z
 490:	91 80       	ldd	r9, Z+1	; 0x01
 492:	16 ff       	sbrs	r17, 6
 494:	03 c0       	rjmp	.+6      	; 0x49c <vfprintf+0x154>
 496:	6f 2d       	mov	r22, r15
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <vfprintf+0x158>
 49c:	6f ef       	ldi	r22, 0xFF	; 255
 49e:	7f ef       	ldi	r23, 0xFF	; 255
 4a0:	c4 01       	movw	r24, r8
 4a2:	0e 94 8d 03 	call	0x71a	; 0x71a <strnlen>
 4a6:	6c 01       	movw	r12, r24
 4a8:	51 01       	movw	r10, r2
 4aa:	1f 77       	andi	r17, 0x7F	; 127
 4ac:	15 c0       	rjmp	.+42     	; 0x4d8 <vfprintf+0x190>
 4ae:	82 e0       	ldi	r24, 0x02	; 2
 4b0:	28 2e       	mov	r2, r24
 4b2:	31 2c       	mov	r3, r1
 4b4:	2a 0c       	add	r2, r10
 4b6:	3b 1c       	adc	r3, r11
 4b8:	f5 01       	movw	r30, r10
 4ba:	80 80       	ld	r8, Z
 4bc:	91 80       	ldd	r9, Z+1	; 0x01
 4be:	16 ff       	sbrs	r17, 6
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <vfprintf+0x180>
 4c2:	6f 2d       	mov	r22, r15
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <vfprintf+0x184>
 4c8:	6f ef       	ldi	r22, 0xFF	; 255
 4ca:	7f ef       	ldi	r23, 0xFF	; 255
 4cc:	c4 01       	movw	r24, r8
 4ce:	0e 94 82 03 	call	0x704	; 0x704 <strnlen_P>
 4d2:	6c 01       	movw	r12, r24
 4d4:	10 68       	ori	r17, 0x80	; 128
 4d6:	51 01       	movw	r10, r2
 4d8:	13 fd       	sbrc	r17, 3
 4da:	1c c0       	rjmp	.+56     	; 0x514 <vfprintf+0x1cc>
 4dc:	06 c0       	rjmp	.+12     	; 0x4ea <vfprintf+0x1a2>
 4de:	80 e2       	ldi	r24, 0x20	; 32
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	b3 01       	movw	r22, r6
 4e4:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 4e8:	ea 94       	dec	r14
 4ea:	8e 2d       	mov	r24, r14
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	c8 16       	cp	r12, r24
 4f0:	d9 06       	cpc	r13, r25
 4f2:	a8 f3       	brcs	.-22     	; 0x4de <vfprintf+0x196>
 4f4:	0f c0       	rjmp	.+30     	; 0x514 <vfprintf+0x1cc>
 4f6:	f4 01       	movw	r30, r8
 4f8:	17 fd       	sbrc	r17, 7
 4fa:	85 91       	lpm	r24, Z+
 4fc:	17 ff       	sbrs	r17, 7
 4fe:	81 91       	ld	r24, Z+
 500:	4f 01       	movw	r8, r30
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	b3 01       	movw	r22, r6
 506:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 50a:	e1 10       	cpse	r14, r1
 50c:	ea 94       	dec	r14
 50e:	08 94       	sec
 510:	c1 08       	sbc	r12, r1
 512:	d1 08       	sbc	r13, r1
 514:	c1 14       	cp	r12, r1
 516:	d1 04       	cpc	r13, r1
 518:	71 f7       	brne	.-36     	; 0x4f6 <vfprintf+0x1ae>
 51a:	e7 c0       	rjmp	.+462    	; 0x6ea <vfprintf+0x3a2>
 51c:	84 36       	cpi	r24, 0x64	; 100
 51e:	11 f0       	breq	.+4      	; 0x524 <vfprintf+0x1dc>
 520:	89 36       	cpi	r24, 0x69	; 105
 522:	51 f5       	brne	.+84     	; 0x578 <vfprintf+0x230>
 524:	f5 01       	movw	r30, r10
 526:	17 ff       	sbrs	r17, 7
 528:	07 c0       	rjmp	.+14     	; 0x538 <vfprintf+0x1f0>
 52a:	80 81       	ld	r24, Z
 52c:	91 81       	ldd	r25, Z+1	; 0x01
 52e:	a2 81       	ldd	r26, Z+2	; 0x02
 530:	b3 81       	ldd	r27, Z+3	; 0x03
 532:	24 e0       	ldi	r18, 0x04	; 4
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	08 c0       	rjmp	.+16     	; 0x548 <vfprintf+0x200>
 538:	80 81       	ld	r24, Z
 53a:	91 81       	ldd	r25, Z+1	; 0x01
 53c:	aa 27       	eor	r26, r26
 53e:	97 fd       	sbrc	r25, 7
 540:	a0 95       	com	r26
 542:	ba 2f       	mov	r27, r26
 544:	22 e0       	ldi	r18, 0x02	; 2
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	a2 0e       	add	r10, r18
 54a:	b3 1e       	adc	r11, r19
 54c:	01 2f       	mov	r16, r17
 54e:	0f 76       	andi	r16, 0x6F	; 111
 550:	b7 ff       	sbrs	r27, 7
 552:	08 c0       	rjmp	.+16     	; 0x564 <vfprintf+0x21c>
 554:	b0 95       	com	r27
 556:	a0 95       	com	r26
 558:	90 95       	com	r25
 55a:	81 95       	neg	r24
 55c:	9f 4f       	sbci	r25, 0xFF	; 255
 55e:	af 4f       	sbci	r26, 0xFF	; 255
 560:	bf 4f       	sbci	r27, 0xFF	; 255
 562:	00 68       	ori	r16, 0x80	; 128
 564:	bc 01       	movw	r22, r24
 566:	cd 01       	movw	r24, r26
 568:	a2 01       	movw	r20, r4
 56a:	2a e0       	ldi	r18, 0x0A	; 10
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	0e 94 c4 03 	call	0x788	; 0x788 <__ultoa_invert>
 572:	d8 2e       	mov	r13, r24
 574:	d4 18       	sub	r13, r4
 576:	3f c0       	rjmp	.+126    	; 0x5f6 <vfprintf+0x2ae>
 578:	85 37       	cpi	r24, 0x75	; 117
 57a:	21 f4       	brne	.+8      	; 0x584 <vfprintf+0x23c>
 57c:	1f 7e       	andi	r17, 0xEF	; 239
 57e:	2a e0       	ldi	r18, 0x0A	; 10
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	20 c0       	rjmp	.+64     	; 0x5c4 <vfprintf+0x27c>
 584:	19 7f       	andi	r17, 0xF9	; 249
 586:	8f 36       	cpi	r24, 0x6F	; 111
 588:	a9 f0       	breq	.+42     	; 0x5b4 <vfprintf+0x26c>
 58a:	80 37       	cpi	r24, 0x70	; 112
 58c:	20 f4       	brcc	.+8      	; 0x596 <vfprintf+0x24e>
 58e:	88 35       	cpi	r24, 0x58	; 88
 590:	09 f0       	breq	.+2      	; 0x594 <vfprintf+0x24c>
 592:	ae c0       	rjmp	.+348    	; 0x6f0 <vfprintf+0x3a8>
 594:	0b c0       	rjmp	.+22     	; 0x5ac <vfprintf+0x264>
 596:	80 37       	cpi	r24, 0x70	; 112
 598:	21 f0       	breq	.+8      	; 0x5a2 <vfprintf+0x25a>
 59a:	88 37       	cpi	r24, 0x78	; 120
 59c:	09 f0       	breq	.+2      	; 0x5a0 <vfprintf+0x258>
 59e:	a8 c0       	rjmp	.+336    	; 0x6f0 <vfprintf+0x3a8>
 5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <vfprintf+0x25c>
 5a2:	10 61       	ori	r17, 0x10	; 16
 5a4:	14 ff       	sbrs	r17, 4
 5a6:	09 c0       	rjmp	.+18     	; 0x5ba <vfprintf+0x272>
 5a8:	14 60       	ori	r17, 0x04	; 4
 5aa:	07 c0       	rjmp	.+14     	; 0x5ba <vfprintf+0x272>
 5ac:	14 ff       	sbrs	r17, 4
 5ae:	08 c0       	rjmp	.+16     	; 0x5c0 <vfprintf+0x278>
 5b0:	16 60       	ori	r17, 0x06	; 6
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <vfprintf+0x278>
 5b4:	28 e0       	ldi	r18, 0x08	; 8
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <vfprintf+0x27c>
 5ba:	20 e1       	ldi	r18, 0x10	; 16
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <vfprintf+0x27c>
 5c0:	20 e1       	ldi	r18, 0x10	; 16
 5c2:	32 e0       	ldi	r19, 0x02	; 2
 5c4:	f5 01       	movw	r30, r10
 5c6:	17 ff       	sbrs	r17, 7
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <vfprintf+0x290>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	82 81       	ldd	r24, Z+2	; 0x02
 5d0:	93 81       	ldd	r25, Z+3	; 0x03
 5d2:	44 e0       	ldi	r20, 0x04	; 4
 5d4:	50 e0       	ldi	r21, 0x00	; 0
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <vfprintf+0x29c>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	42 e0       	ldi	r20, 0x02	; 2
 5e2:	50 e0       	ldi	r21, 0x00	; 0
 5e4:	a4 0e       	add	r10, r20
 5e6:	b5 1e       	adc	r11, r21
 5e8:	a2 01       	movw	r20, r4
 5ea:	0e 94 c4 03 	call	0x788	; 0x788 <__ultoa_invert>
 5ee:	d8 2e       	mov	r13, r24
 5f0:	d4 18       	sub	r13, r4
 5f2:	01 2f       	mov	r16, r17
 5f4:	0f 77       	andi	r16, 0x7F	; 127
 5f6:	06 ff       	sbrs	r16, 6
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <vfprintf+0x2c4>
 5fa:	0e 7f       	andi	r16, 0xFE	; 254
 5fc:	df 14       	cp	r13, r15
 5fe:	30 f4       	brcc	.+12     	; 0x60c <vfprintf+0x2c4>
 600:	04 ff       	sbrs	r16, 4
 602:	06 c0       	rjmp	.+12     	; 0x610 <vfprintf+0x2c8>
 604:	02 fd       	sbrc	r16, 2
 606:	04 c0       	rjmp	.+8      	; 0x610 <vfprintf+0x2c8>
 608:	0f 7e       	andi	r16, 0xEF	; 239
 60a:	02 c0       	rjmp	.+4      	; 0x610 <vfprintf+0x2c8>
 60c:	1d 2d       	mov	r17, r13
 60e:	01 c0       	rjmp	.+2      	; 0x612 <vfprintf+0x2ca>
 610:	1f 2d       	mov	r17, r15
 612:	80 2f       	mov	r24, r16
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	04 ff       	sbrs	r16, 4
 618:	0c c0       	rjmp	.+24     	; 0x632 <vfprintf+0x2ea>
 61a:	fe 01       	movw	r30, r28
 61c:	ed 0d       	add	r30, r13
 61e:	f1 1d       	adc	r31, r1
 620:	20 81       	ld	r18, Z
 622:	20 33       	cpi	r18, 0x30	; 48
 624:	11 f4       	brne	.+4      	; 0x62a <vfprintf+0x2e2>
 626:	09 7e       	andi	r16, 0xE9	; 233
 628:	09 c0       	rjmp	.+18     	; 0x63c <vfprintf+0x2f4>
 62a:	02 ff       	sbrs	r16, 2
 62c:	06 c0       	rjmp	.+12     	; 0x63a <vfprintf+0x2f2>
 62e:	1e 5f       	subi	r17, 0xFE	; 254
 630:	05 c0       	rjmp	.+10     	; 0x63c <vfprintf+0x2f4>
 632:	86 78       	andi	r24, 0x86	; 134
 634:	90 70       	andi	r25, 0x00	; 0
 636:	00 97       	sbiw	r24, 0x00	; 0
 638:	09 f0       	breq	.+2      	; 0x63c <vfprintf+0x2f4>
 63a:	1f 5f       	subi	r17, 0xFF	; 255
 63c:	80 2e       	mov	r8, r16
 63e:	99 24       	eor	r9, r9
 640:	03 fd       	sbrc	r16, 3
 642:	12 c0       	rjmp	.+36     	; 0x668 <vfprintf+0x320>
 644:	00 ff       	sbrs	r16, 0
 646:	0d c0       	rjmp	.+26     	; 0x662 <vfprintf+0x31a>
 648:	fd 2c       	mov	r15, r13
 64a:	1e 15       	cp	r17, r14
 64c:	50 f4       	brcc	.+20     	; 0x662 <vfprintf+0x31a>
 64e:	fe 0c       	add	r15, r14
 650:	f1 1a       	sub	r15, r17
 652:	1e 2d       	mov	r17, r14
 654:	06 c0       	rjmp	.+12     	; 0x662 <vfprintf+0x31a>
 656:	80 e2       	ldi	r24, 0x20	; 32
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	b3 01       	movw	r22, r6
 65c:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 660:	1f 5f       	subi	r17, 0xFF	; 255
 662:	1e 15       	cp	r17, r14
 664:	c0 f3       	brcs	.-16     	; 0x656 <vfprintf+0x30e>
 666:	04 c0       	rjmp	.+8      	; 0x670 <vfprintf+0x328>
 668:	1e 15       	cp	r17, r14
 66a:	10 f4       	brcc	.+4      	; 0x670 <vfprintf+0x328>
 66c:	e1 1a       	sub	r14, r17
 66e:	01 c0       	rjmp	.+2      	; 0x672 <vfprintf+0x32a>
 670:	ee 24       	eor	r14, r14
 672:	84 fe       	sbrs	r8, 4
 674:	0f c0       	rjmp	.+30     	; 0x694 <vfprintf+0x34c>
 676:	80 e3       	ldi	r24, 0x30	; 48
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	b3 01       	movw	r22, r6
 67c:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 680:	82 fe       	sbrs	r8, 2
 682:	1f c0       	rjmp	.+62     	; 0x6c2 <vfprintf+0x37a>
 684:	81 fe       	sbrs	r8, 1
 686:	03 c0       	rjmp	.+6      	; 0x68e <vfprintf+0x346>
 688:	88 e5       	ldi	r24, 0x58	; 88
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	10 c0       	rjmp	.+32     	; 0x6ae <vfprintf+0x366>
 68e:	88 e7       	ldi	r24, 0x78	; 120
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0d c0       	rjmp	.+26     	; 0x6ae <vfprintf+0x366>
 694:	c4 01       	movw	r24, r8
 696:	86 78       	andi	r24, 0x86	; 134
 698:	90 70       	andi	r25, 0x00	; 0
 69a:	00 97       	sbiw	r24, 0x00	; 0
 69c:	91 f0       	breq	.+36     	; 0x6c2 <vfprintf+0x37a>
 69e:	81 fc       	sbrc	r8, 1
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <vfprintf+0x35e>
 6a2:	80 e2       	ldi	r24, 0x20	; 32
 6a4:	01 c0       	rjmp	.+2      	; 0x6a8 <vfprintf+0x360>
 6a6:	8b e2       	ldi	r24, 0x2B	; 43
 6a8:	07 fd       	sbrc	r16, 7
 6aa:	8d e2       	ldi	r24, 0x2D	; 45
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	b3 01       	movw	r22, r6
 6b0:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <vfprintf+0x37a>
 6b6:	80 e3       	ldi	r24, 0x30	; 48
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	b3 01       	movw	r22, r6
 6bc:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 6c0:	fa 94       	dec	r15
 6c2:	df 14       	cp	r13, r15
 6c4:	c0 f3       	brcs	.-16     	; 0x6b6 <vfprintf+0x36e>
 6c6:	da 94       	dec	r13
 6c8:	f2 01       	movw	r30, r4
 6ca:	ed 0d       	add	r30, r13
 6cc:	f1 1d       	adc	r31, r1
 6ce:	80 81       	ld	r24, Z
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	b3 01       	movw	r22, r6
 6d4:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 6d8:	dd 20       	and	r13, r13
 6da:	a9 f7       	brne	.-22     	; 0x6c6 <vfprintf+0x37e>
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <vfprintf+0x3a2>
 6de:	80 e2       	ldi	r24, 0x20	; 32
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	b3 01       	movw	r22, r6
 6e4:	0e 94 98 03 	call	0x730	; 0x730 <fputc>
 6e8:	ea 94       	dec	r14
 6ea:	ee 20       	and	r14, r14
 6ec:	c1 f7       	brne	.-16     	; 0x6de <vfprintf+0x396>
 6ee:	40 ce       	rjmp	.-896    	; 0x370 <vfprintf+0x28>
 6f0:	f3 01       	movw	r30, r6
 6f2:	86 81       	ldd	r24, Z+6	; 0x06
 6f4:	97 81       	ldd	r25, Z+7	; 0x07
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <vfprintf+0x3b4>
 6f8:	8f ef       	ldi	r24, 0xFF	; 255
 6fa:	9f ef       	ldi	r25, 0xFF	; 255
 6fc:	2d 96       	adiw	r28, 0x0d	; 13
 6fe:	e2 e1       	ldi	r30, 0x12	; 18
 700:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__epilogue_restores__>

00000704 <strnlen_P>:
 704:	fc 01       	movw	r30, r24
 706:	05 90       	lpm	r0, Z+
 708:	61 50       	subi	r22, 0x01	; 1
 70a:	70 40       	sbci	r23, 0x00	; 0
 70c:	01 10       	cpse	r0, r1
 70e:	d8 f7       	brcc	.-10     	; 0x706 <strnlen_P+0x2>
 710:	80 95       	com	r24
 712:	90 95       	com	r25
 714:	8e 0f       	add	r24, r30
 716:	9f 1f       	adc	r25, r31
 718:	08 95       	ret

0000071a <strnlen>:
 71a:	fc 01       	movw	r30, r24
 71c:	61 50       	subi	r22, 0x01	; 1
 71e:	70 40       	sbci	r23, 0x00	; 0
 720:	01 90       	ld	r0, Z+
 722:	01 10       	cpse	r0, r1
 724:	d8 f7       	brcc	.-10     	; 0x71c <strnlen+0x2>
 726:	80 95       	com	r24
 728:	90 95       	com	r25
 72a:	8e 0f       	add	r24, r30
 72c:	9f 1f       	adc	r25, r31
 72e:	08 95       	ret

00000730 <fputc>:
 730:	0f 93       	push	r16
 732:	1f 93       	push	r17
 734:	cf 93       	push	r28
 736:	df 93       	push	r29
 738:	8c 01       	movw	r16, r24
 73a:	eb 01       	movw	r28, r22
 73c:	8b 81       	ldd	r24, Y+3	; 0x03
 73e:	81 ff       	sbrs	r24, 1
 740:	1b c0       	rjmp	.+54     	; 0x778 <fputc+0x48>
 742:	82 ff       	sbrs	r24, 2
 744:	0d c0       	rjmp	.+26     	; 0x760 <fputc+0x30>
 746:	2e 81       	ldd	r18, Y+6	; 0x06
 748:	3f 81       	ldd	r19, Y+7	; 0x07
 74a:	8c 81       	ldd	r24, Y+4	; 0x04
 74c:	9d 81       	ldd	r25, Y+5	; 0x05
 74e:	28 17       	cp	r18, r24
 750:	39 07       	cpc	r19, r25
 752:	64 f4       	brge	.+24     	; 0x76c <fputc+0x3c>
 754:	e8 81       	ld	r30, Y
 756:	f9 81       	ldd	r31, Y+1	; 0x01
 758:	01 93       	st	Z+, r16
 75a:	f9 83       	std	Y+1, r31	; 0x01
 75c:	e8 83       	st	Y, r30
 75e:	06 c0       	rjmp	.+12     	; 0x76c <fputc+0x3c>
 760:	e8 85       	ldd	r30, Y+8	; 0x08
 762:	f9 85       	ldd	r31, Y+9	; 0x09
 764:	80 2f       	mov	r24, r16
 766:	09 95       	icall
 768:	00 97       	sbiw	r24, 0x00	; 0
 76a:	31 f4       	brne	.+12     	; 0x778 <fputc+0x48>
 76c:	8e 81       	ldd	r24, Y+6	; 0x06
 76e:	9f 81       	ldd	r25, Y+7	; 0x07
 770:	01 96       	adiw	r24, 0x01	; 1
 772:	9f 83       	std	Y+7, r25	; 0x07
 774:	8e 83       	std	Y+6, r24	; 0x06
 776:	02 c0       	rjmp	.+4      	; 0x77c <fputc+0x4c>
 778:	0f ef       	ldi	r16, 0xFF	; 255
 77a:	1f ef       	ldi	r17, 0xFF	; 255
 77c:	c8 01       	movw	r24, r16
 77e:	df 91       	pop	r29
 780:	cf 91       	pop	r28
 782:	1f 91       	pop	r17
 784:	0f 91       	pop	r16
 786:	08 95       	ret

00000788 <__ultoa_invert>:
 788:	fa 01       	movw	r30, r20
 78a:	aa 27       	eor	r26, r26
 78c:	28 30       	cpi	r18, 0x08	; 8
 78e:	51 f1       	breq	.+84     	; 0x7e4 <__ultoa_invert+0x5c>
 790:	20 31       	cpi	r18, 0x10	; 16
 792:	81 f1       	breq	.+96     	; 0x7f4 <__ultoa_invert+0x6c>
 794:	e8 94       	clt
 796:	6f 93       	push	r22
 798:	6e 7f       	andi	r22, 0xFE	; 254
 79a:	6e 5f       	subi	r22, 0xFE	; 254
 79c:	7f 4f       	sbci	r23, 0xFF	; 255
 79e:	8f 4f       	sbci	r24, 0xFF	; 255
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	af 4f       	sbci	r26, 0xFF	; 255
 7a4:	b1 e0       	ldi	r27, 0x01	; 1
 7a6:	3e d0       	rcall	.+124    	; 0x824 <__ultoa_invert+0x9c>
 7a8:	b4 e0       	ldi	r27, 0x04	; 4
 7aa:	3c d0       	rcall	.+120    	; 0x824 <__ultoa_invert+0x9c>
 7ac:	67 0f       	add	r22, r23
 7ae:	78 1f       	adc	r23, r24
 7b0:	89 1f       	adc	r24, r25
 7b2:	9a 1f       	adc	r25, r26
 7b4:	a1 1d       	adc	r26, r1
 7b6:	68 0f       	add	r22, r24
 7b8:	79 1f       	adc	r23, r25
 7ba:	8a 1f       	adc	r24, r26
 7bc:	91 1d       	adc	r25, r1
 7be:	a1 1d       	adc	r26, r1
 7c0:	6a 0f       	add	r22, r26
 7c2:	71 1d       	adc	r23, r1
 7c4:	81 1d       	adc	r24, r1
 7c6:	91 1d       	adc	r25, r1
 7c8:	a1 1d       	adc	r26, r1
 7ca:	20 d0       	rcall	.+64     	; 0x80c <__ultoa_invert+0x84>
 7cc:	09 f4       	brne	.+2      	; 0x7d0 <__ultoa_invert+0x48>
 7ce:	68 94       	set
 7d0:	3f 91       	pop	r19
 7d2:	2a e0       	ldi	r18, 0x0A	; 10
 7d4:	26 9f       	mul	r18, r22
 7d6:	11 24       	eor	r1, r1
 7d8:	30 19       	sub	r19, r0
 7da:	30 5d       	subi	r19, 0xD0	; 208
 7dc:	31 93       	st	Z+, r19
 7de:	de f6       	brtc	.-74     	; 0x796 <__ultoa_invert+0xe>
 7e0:	cf 01       	movw	r24, r30
 7e2:	08 95       	ret
 7e4:	46 2f       	mov	r20, r22
 7e6:	47 70       	andi	r20, 0x07	; 7
 7e8:	40 5d       	subi	r20, 0xD0	; 208
 7ea:	41 93       	st	Z+, r20
 7ec:	b3 e0       	ldi	r27, 0x03	; 3
 7ee:	0f d0       	rcall	.+30     	; 0x80e <__ultoa_invert+0x86>
 7f0:	c9 f7       	brne	.-14     	; 0x7e4 <__ultoa_invert+0x5c>
 7f2:	f6 cf       	rjmp	.-20     	; 0x7e0 <__ultoa_invert+0x58>
 7f4:	46 2f       	mov	r20, r22
 7f6:	4f 70       	andi	r20, 0x0F	; 15
 7f8:	40 5d       	subi	r20, 0xD0	; 208
 7fa:	4a 33       	cpi	r20, 0x3A	; 58
 7fc:	18 f0       	brcs	.+6      	; 0x804 <__ultoa_invert+0x7c>
 7fe:	49 5d       	subi	r20, 0xD9	; 217
 800:	31 fd       	sbrc	r19, 1
 802:	40 52       	subi	r20, 0x20	; 32
 804:	41 93       	st	Z+, r20
 806:	02 d0       	rcall	.+4      	; 0x80c <__ultoa_invert+0x84>
 808:	a9 f7       	brne	.-22     	; 0x7f4 <__ultoa_invert+0x6c>
 80a:	ea cf       	rjmp	.-44     	; 0x7e0 <__ultoa_invert+0x58>
 80c:	b4 e0       	ldi	r27, 0x04	; 4
 80e:	a6 95       	lsr	r26
 810:	97 95       	ror	r25
 812:	87 95       	ror	r24
 814:	77 95       	ror	r23
 816:	67 95       	ror	r22
 818:	ba 95       	dec	r27
 81a:	c9 f7       	brne	.-14     	; 0x80e <__ultoa_invert+0x86>
 81c:	00 97       	sbiw	r24, 0x00	; 0
 81e:	61 05       	cpc	r22, r1
 820:	71 05       	cpc	r23, r1
 822:	08 95       	ret
 824:	9b 01       	movw	r18, r22
 826:	ac 01       	movw	r20, r24
 828:	0a 2e       	mov	r0, r26
 82a:	06 94       	lsr	r0
 82c:	57 95       	ror	r21
 82e:	47 95       	ror	r20
 830:	37 95       	ror	r19
 832:	27 95       	ror	r18
 834:	ba 95       	dec	r27
 836:	c9 f7       	brne	.-14     	; 0x82a <__ultoa_invert+0xa2>
 838:	62 0f       	add	r22, r18
 83a:	73 1f       	adc	r23, r19
 83c:	84 1f       	adc	r24, r20
 83e:	95 1f       	adc	r25, r21
 840:	a0 1d       	adc	r26, r0
 842:	08 95       	ret

00000844 <__prologue_saves__>:
 844:	2f 92       	push	r2
 846:	3f 92       	push	r3
 848:	4f 92       	push	r4
 84a:	5f 92       	push	r5
 84c:	6f 92       	push	r6
 84e:	7f 92       	push	r7
 850:	8f 92       	push	r8
 852:	9f 92       	push	r9
 854:	af 92       	push	r10
 856:	bf 92       	push	r11
 858:	cf 92       	push	r12
 85a:	df 92       	push	r13
 85c:	ef 92       	push	r14
 85e:	ff 92       	push	r15
 860:	0f 93       	push	r16
 862:	1f 93       	push	r17
 864:	cf 93       	push	r28
 866:	df 93       	push	r29
 868:	cd b7       	in	r28, 0x3d	; 61
 86a:	de b7       	in	r29, 0x3e	; 62
 86c:	ca 1b       	sub	r28, r26
 86e:	db 0b       	sbc	r29, r27
 870:	0f b6       	in	r0, 0x3f	; 63
 872:	f8 94       	cli
 874:	de bf       	out	0x3e, r29	; 62
 876:	0f be       	out	0x3f, r0	; 63
 878:	cd bf       	out	0x3d, r28	; 61
 87a:	09 94       	ijmp

0000087c <__epilogue_restores__>:
 87c:	2a 88       	ldd	r2, Y+18	; 0x12
 87e:	39 88       	ldd	r3, Y+17	; 0x11
 880:	48 88       	ldd	r4, Y+16	; 0x10
 882:	5f 84       	ldd	r5, Y+15	; 0x0f
 884:	6e 84       	ldd	r6, Y+14	; 0x0e
 886:	7d 84       	ldd	r7, Y+13	; 0x0d
 888:	8c 84       	ldd	r8, Y+12	; 0x0c
 88a:	9b 84       	ldd	r9, Y+11	; 0x0b
 88c:	aa 84       	ldd	r10, Y+10	; 0x0a
 88e:	b9 84       	ldd	r11, Y+9	; 0x09
 890:	c8 84       	ldd	r12, Y+8	; 0x08
 892:	df 80       	ldd	r13, Y+7	; 0x07
 894:	ee 80       	ldd	r14, Y+6	; 0x06
 896:	fd 80       	ldd	r15, Y+5	; 0x05
 898:	0c 81       	ldd	r16, Y+4	; 0x04
 89a:	1b 81       	ldd	r17, Y+3	; 0x03
 89c:	aa 81       	ldd	r26, Y+2	; 0x02
 89e:	b9 81       	ldd	r27, Y+1	; 0x01
 8a0:	ce 0f       	add	r28, r30
 8a2:	d1 1d       	adc	r29, r1
 8a4:	0f b6       	in	r0, 0x3f	; 63
 8a6:	f8 94       	cli
 8a8:	de bf       	out	0x3e, r29	; 62
 8aa:	0f be       	out	0x3f, r0	; 63
 8ac:	cd bf       	out	0x3d, r28	; 61
 8ae:	ed 01       	movw	r28, r26
 8b0:	08 95       	ret

000008b2 <_exit>:
 8b2:	f8 94       	cli

000008b4 <__stop_program>:
 8b4:	ff cf       	rjmp	.-2      	; 0x8b4 <__stop_program>
