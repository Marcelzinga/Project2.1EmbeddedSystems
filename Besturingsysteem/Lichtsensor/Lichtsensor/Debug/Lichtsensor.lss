
Lichtsensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000008d8  0000096c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800152  00800152  000009be  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000009c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001644  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00001800  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012a4  00000000  00000000  00001960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a4  00000000  00000000  00002c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c3a  00000000  00000000  000034a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  000040e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ee  00000000  00000000  00004360  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009a6  00000000  00000000  0000474e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000050f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 91 00 	jmp	0x122	; 0x122 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ed       	ldi	r30, 0xD8	; 216
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 35       	cpi	r26, 0x52	; 82
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a2 e5       	ldi	r26, 0x52	; 82
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 35       	cpi	r26, 0x5B	; 91
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6f 00 	call	0xde	; 0xde <main>
  9e:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:

void ADC_init()
{
	//ref = vcc, left adjust the result (8 bit resolution)
	// select channel 0 (PC0 = input)
	ADMUX |= (1<<REFS0) | (1<<ADLAR);
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 66       	ori	r24, 0x60	; 96
  ae:	80 83       	st	Z, r24
	// enable the ADC & prescale = 128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
  b0:	87 e8       	ldi	r24, 0x87	; 135
  b2:	80 93 7a 00 	sts	0x007A, r24
	sei();
  b6:	78 94       	sei
	
}
  b8:	08 95       	ret

000000ba <init_timer>:
	return ADCH; // 8bit resolution, left adjusted
}

void init_timer (void){
	
	TCCR0A = (1<< WGM12); // set CTC Bit
  ba:	88 e0       	ldi	r24, 0x08	; 8
  bc:	84 bd       	out	0x24, r24	; 36
	OCR1A = 468750;
  be:	8e e0       	ldi	r24, 0x0E	; 14
  c0:	97 e2       	ldi	r25, 0x27	; 39
  c2:	90 93 89 00 	sts	0x0089, r25
  c6:	80 93 88 00 	sts	0x0088, r24
	TIMSK1 = (1<< OCIE1A);
  ca:	82 e0       	ldi	r24, 0x02	; 2
  cc:	80 93 6f 00 	sts	0x006F, r24
	
	
	sei(); // set external interrupt
  d0:	78 94       	sei
	
	TCCR1B |= (1 << CS12) | (1 <<CS10); // start at 1024 prescaler
  d2:	e1 e8       	ldi	r30, 0x81	; 129
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	85 60       	ori	r24, 0x05	; 5
  da:	80 83       	st	Z, r24
		
}
  dc:	08 95       	ret

000000de <main>:
	}		
}

int main()
{
	init_timer();
  de:	0e 94 5d 00 	call	0xba	; 0xba <init_timer>
	ser_init();
  e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <ser_init>
	ADC_init();
  e6:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ea:	8f e3       	ldi	r24, 0x3F	; 63
  ec:	9d e0       	ldi	r25, 0x0D	; 13
  ee:	a3 e0       	ldi	r26, 0x03	; 3
  f0:	81 50       	subi	r24, 0x01	; 1
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	a0 40       	sbci	r26, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x12>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x1c>
  fa:	00 00       	nop
	//DDRB = _BV(DDB4); // set pin 4 of PORTB for Output

	
	int a = 0;
	_delay_ms(1000);
	printf("An interrupt should be occuring every 30 seconds\n");
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	0e 94 87 01 	call	0x30e	; 0x30e <puts>
 104:	ff cf       	rjmp	.-2      	; 0x104 <main+0x26>

00000106 <get_adc_value>:
	
}

uint8_t get_adc_value()
{
	ADCSRA |= (1<<ADSC); // start conversion
 106:	ea e7       	ldi	r30, 0x7A	; 122
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	80 64       	ori	r24, 0x40	; 64
 10e:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
 110:	80 81       	ld	r24, Z
 112:	86 fd       	sbrc	r24, 6
 114:	fd cf       	rjmp	.-6      	; 0x110 <get_adc_value+0xa>
	return ADCH; // 8bit resolution, left adjusted
 116:	80 91 79 00 	lds	r24, 0x0079
}
 11a:	08 95       	ret

0000011c <getLight>:
	
	
}

void getLight(){
	uint8_t temp = get_adc_value();
 11c:	0e 94 83 00 	call	0x106	; 0x106 <get_adc_value>
	return temp;
}
 120:	08 95       	ret

00000122 <__vector_11>:
Work in progress.

Op het moment werkt deze timerinterrupt niet correct. 
Hij doet er ~4 keer te lang over.(of ~8 keer tekort
*/
ISR (TIMER1_COMPA_vect){
 122:	1f 92       	push	r1
 124:	0f 92       	push	r0
 126:	0f b6       	in	r0, 0x3f	; 63
 128:	0f 92       	push	r0
 12a:	11 24       	eor	r1, r1
 12c:	2f 93       	push	r18
 12e:	3f 93       	push	r19
 130:	4f 93       	push	r20
 132:	5f 93       	push	r21
 134:	6f 93       	push	r22
 136:	7f 93       	push	r23
 138:	8f 93       	push	r24
 13a:	9f 93       	push	r25
 13c:	af 93       	push	r26
 13e:	bf 93       	push	r27
 140:	cf 93       	push	r28
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
	extraTime++;
 146:	80 91 52 01 	lds	r24, 0x0152
 14a:	90 91 53 01 	lds	r25, 0x0153
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	90 93 53 01 	sts	0x0153, r25
 154:	80 93 52 01 	sts	0x0152, r24
	if(extraTime==8){
 158:	88 30       	cpi	r24, 0x08	; 8
 15a:	91 05       	cpc	r25, r1
 15c:	79 f5       	brne	.+94     	; 0x1bc <__vector_11+0x9a>
	printf("%i intensiteit=%d\n", i, get_adc_value());
 15e:	c0 91 54 01 	lds	r28, 0x0154
 162:	0e 94 83 00 	call	0x106	; 0x106 <get_adc_value>
 166:	00 d0       	rcall	.+0      	; 0x168 <__vector_11+0x46>
 168:	00 d0       	rcall	.+0      	; 0x16a <__vector_11+0x48>
 16a:	00 d0       	rcall	.+0      	; 0x16c <__vector_11+0x4a>
 16c:	ed b7       	in	r30, 0x3d	; 61
 16e:	fe b7       	in	r31, 0x3e	; 62
 170:	31 96       	adiw	r30, 0x01	; 1
 172:	21 e3       	ldi	r18, 0x31	; 49
 174:	31 e0       	ldi	r19, 0x01	; 1
 176:	ad b7       	in	r26, 0x3d	; 61
 178:	be b7       	in	r27, 0x3e	; 62
 17a:	12 96       	adiw	r26, 0x02	; 2
 17c:	3c 93       	st	X, r19
 17e:	2e 93       	st	-X, r18
 180:	11 97       	sbiw	r26, 0x01	; 1
 182:	c2 83       	std	Z+2, r28	; 0x02
 184:	13 82       	std	Z+3, r1	; 0x03
 186:	84 83       	std	Z+4, r24	; 0x04
 188:	15 82       	std	Z+5, r1	; 0x05
 18a:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
	i++;
 18e:	80 91 54 01 	lds	r24, 0x0154
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 54 01 	sts	0x0154, r24
	
	// Resets de timer en de Totale timer ticks
	extraTime = 0;
 198:	10 92 53 01 	sts	0x0153, r1
 19c:	10 92 52 01 	sts	0x0152, r1
	OCR1A = 468750;
 1a0:	8e e0       	ldi	r24, 0x0E	; 14
 1a2:	97 e2       	ldi	r25, 0x27	; 39
 1a4:	90 93 89 00 	sts	0x0089, r25
 1a8:	80 93 88 00 	sts	0x0088, r24
 1ac:	8d b7       	in	r24, 0x3d	; 61
 1ae:	9e b7       	in	r25, 0x3e	; 62
 1b0:	06 96       	adiw	r24, 0x06	; 6
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	f8 94       	cli
 1b6:	9e bf       	out	0x3e, r25	; 62
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	8d bf       	out	0x3d, r24	; 61
	//TCNT1 = 468750; // Dit was bij het testen van 8bitclock
	}		
}
 1bc:	ff 91       	pop	r31
 1be:	ef 91       	pop	r30
 1c0:	cf 91       	pop	r28
 1c2:	bf 91       	pop	r27
 1c4:	af 91       	pop	r26
 1c6:	9f 91       	pop	r25
 1c8:	8f 91       	pop	r24
 1ca:	7f 91       	pop	r23
 1cc:	6f 91       	pop	r22
 1ce:	5f 91       	pop	r21
 1d0:	4f 91       	pop	r20
 1d2:	3f 91       	pop	r19
 1d4:	2f 91       	pop	r18
 1d6:	0f 90       	pop	r0
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	0f 90       	pop	r0
 1dc:	1f 90       	pop	r1
 1de:	18 95       	reti

000001e0 <ser_init>:

FILE uart_output = FDEV_SETUP_STREAM(ser_stdio_putchar, NULL, _FDEV_SETUP_WRITE);

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
 1e0:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
 1e4:	83 e3       	ldi	r24, 0x33	; 51
 1e6:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
 1ea:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
 1ee:	88 e1       	ldi	r24, 0x18	; 24
 1f0:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
 1f4:	86 e0       	ldi	r24, 0x06	; 6
 1f6:	80 93 c2 00 	sts	0x00C2, r24
	// Setup stdout
	stdout=&uart_output;
 1fa:	84 e4       	ldi	r24, 0x44	; 68
 1fc:	91 e0       	ldi	r25, 0x01	; 1
 1fe:	90 93 58 01 	sts	0x0158, r25
 202:	80 93 57 01 	sts	0x0157, r24
}
 206:	08 95       	ret

00000208 <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
 208:	e0 ec       	ldi	r30, 0xC0	; 192
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	90 81       	ld	r25, Z
 20e:	95 ff       	sbrs	r25, 5
 210:	fd cf       	rjmp	.-6      	; 0x20c <ser_transmit+0x4>
	// send the data
	UDR0 = data;
 212:	80 93 c6 00 	sts	0x00C6, r24
}
 216:	08 95       	ret

00000218 <ser_stdio_putchar>:
// output on USB = PD1 = board pin 1
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

// Getchar en putchar tbv. stdio.h
void ser_stdio_putchar(char c, FILE *stream) {
 218:	cf 93       	push	r28
 21a:	c8 2f       	mov	r28, r24
	if (c=='\n') {
 21c:	8a 30       	cpi	r24, 0x0A	; 10
 21e:	19 f4       	brne	.+6      	; 0x226 <ser_stdio_putchar+0xe>
		ser_transmit('\r');
 220:	8d e0       	ldi	r24, 0x0D	; 13
 222:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>
	}
	ser_transmit(c);
 226:	8c 2f       	mov	r24, r28
 228:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>
}
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <ser_receive>:
	UDR0 = data;
}

// Low level receive
uint8_t ser_receive() {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
 230:	e0 ec       	ldi	r30, 0xC0	; 192
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	80 81       	ld	r24, Z
 236:	88 23       	and	r24, r24
 238:	ec f7       	brge	.-6      	; 0x234 <ser_receive+0x4>
	return UDR0;
 23a:	80 91 c6 00 	lds	r24, 0x00C6
}
 23e:	08 95       	ret

00000240 <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
 246:	88 81       	ld	r24, Y
 248:	88 23       	and	r24, r24
 24a:	31 f0       	breq	.+12     	; 0x258 <ser_write+0x18>
	return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
 24c:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
 24e:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
 252:	89 91       	ld	r24, Y+
 254:	88 23       	and	r24, r24
 256:	d9 f7       	brne	.-10     	; 0x24e <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
 25e:	0e 94 20 01 	call	0x240	; 0x240 <ser_write>
	ser_transmit('\r');
 262:	8d e0       	ldi	r24, 0x0D	; 13
 264:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>
	ser_transmit('\n');
 268:	8a e0       	ldi	r24, 0x0A	; 10
 26a:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>
}
 26e:	08 95       	ret

00000270 <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
 270:	af 92       	push	r10
 272:	bf 92       	push	r11
 274:	cf 92       	push	r12
 276:	df 92       	push	r13
 278:	ef 92       	push	r14
 27a:	ff 92       	push	r15
 27c:	0f 93       	push	r16
 27e:	1f 93       	push	r17
 280:	cf 93       	push	r28
 282:	df 93       	push	r29
 284:	5c 01       	movw	r10, r24
 286:	d4 2f       	mov	r29, r20
	int i=0;
 288:	6c 01       	movw	r12, r24
 28a:	ee 24       	eor	r14, r14
 28c:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 28e:	8b 01       	movw	r16, r22
 290:	01 50       	subi	r16, 0x01	; 1
 292:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
 294:	0e 94 18 01 	call	0x230	; 0x230 <ser_receive>
 298:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
 29a:	dd 23       	and	r29, r29
 29c:	11 f0       	breq	.+4      	; 0x2a2 <ser_readln+0x32>
 29e:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>
		if (c=='\r') {
 2a2:	cd 30       	cpi	r28, 0x0D	; 13
 2a4:	31 f4       	brne	.+12     	; 0x2b2 <ser_readln+0x42>
			if (echo) ser_transmit('\n');
 2a6:	dd 23       	and	r29, r29
 2a8:	71 f0       	breq	.+28     	; 0x2c6 <ser_readln+0x56>
 2aa:	8a e0       	ldi	r24, 0x0A	; 10
 2ac:	0e 94 04 01 	call	0x208	; 0x208 <ser_transmit>
 2b0:	0a c0       	rjmp	.+20     	; 0x2c6 <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 2b2:	e0 16       	cp	r14, r16
 2b4:	f1 06       	cpc	r15, r17
 2b6:	74 f7       	brge	.-36     	; 0x294 <ser_readln+0x24>
			buf[i++]=c;
 2b8:	f6 01       	movw	r30, r12
 2ba:	c1 93       	st	Z+, r28
 2bc:	6f 01       	movw	r12, r30
 2be:	08 94       	sec
 2c0:	e1 1c       	adc	r14, r1
 2c2:	f1 1c       	adc	r15, r1
 2c4:	e7 cf       	rjmp	.-50     	; 0x294 <ser_readln+0x24>
		}
	}
	buf[i]='\0';
 2c6:	ea 0c       	add	r14, r10
 2c8:	fb 1c       	adc	r15, r11
 2ca:	f7 01       	movw	r30, r14
 2cc:	10 82       	st	Z, r1
}
 2ce:	df 91       	pop	r29
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	ff 90       	pop	r15
 2d8:	ef 90       	pop	r14
 2da:	df 90       	pop	r13
 2dc:	cf 90       	pop	r12
 2de:	bf 90       	pop	r11
 2e0:	af 90       	pop	r10
 2e2:	08 95       	ret

000002e4 <printf>:
 2e4:	a0 e0       	ldi	r26, 0x00	; 0
 2e6:	b0 e0       	ldi	r27, 0x00	; 0
 2e8:	e8 e7       	ldi	r30, 0x78	; 120
 2ea:	f1 e0       	ldi	r31, 0x01	; 1
 2ec:	0c 94 43 04 	jmp	0x886	; 0x886 <__prologue_saves__+0x20>
 2f0:	fe 01       	movw	r30, r28
 2f2:	35 96       	adiw	r30, 0x05	; 5
 2f4:	61 91       	ld	r22, Z+
 2f6:	71 91       	ld	r23, Z+
 2f8:	80 91 57 01 	lds	r24, 0x0157
 2fc:	90 91 58 01 	lds	r25, 0x0158
 300:	af 01       	movw	r20, r30
 302:	0e 94 b5 01 	call	0x36a	; 0x36a <vfprintf>
 306:	20 96       	adiw	r28, 0x00	; 0
 308:	e2 e0       	ldi	r30, 0x02	; 2
 30a:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__epilogue_restores__+0x20>

0000030e <puts>:
 30e:	0f 93       	push	r16
 310:	1f 93       	push	r17
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	8c 01       	movw	r16, r24
 318:	e0 91 57 01 	lds	r30, 0x0157
 31c:	f0 91 58 01 	lds	r31, 0x0158
 320:	83 81       	ldd	r24, Z+3	; 0x03
 322:	81 ff       	sbrs	r24, 1
 324:	1a c0       	rjmp	.+52     	; 0x35a <puts+0x4c>
 326:	c0 e0       	ldi	r28, 0x00	; 0
 328:	d0 e0       	ldi	r29, 0x00	; 0
 32a:	05 c0       	rjmp	.+10     	; 0x336 <puts+0x28>
 32c:	09 95       	icall
 32e:	00 97       	sbiw	r24, 0x00	; 0
 330:	11 f0       	breq	.+4      	; 0x336 <puts+0x28>
 332:	cf ef       	ldi	r28, 0xFF	; 255
 334:	df ef       	ldi	r29, 0xFF	; 255
 336:	f8 01       	movw	r30, r16
 338:	81 91       	ld	r24, Z+
 33a:	8f 01       	movw	r16, r30
 33c:	60 91 57 01 	lds	r22, 0x0157
 340:	70 91 58 01 	lds	r23, 0x0158
 344:	db 01       	movw	r26, r22
 346:	18 96       	adiw	r26, 0x08	; 8
 348:	ed 91       	ld	r30, X+
 34a:	fc 91       	ld	r31, X
 34c:	19 97       	sbiw	r26, 0x09	; 9
 34e:	88 23       	and	r24, r24
 350:	69 f7       	brne	.-38     	; 0x32c <puts+0x1e>
 352:	8a e0       	ldi	r24, 0x0A	; 10
 354:	09 95       	icall
 356:	00 97       	sbiw	r24, 0x00	; 0
 358:	11 f0       	breq	.+4      	; 0x35e <puts+0x50>
 35a:	cf ef       	ldi	r28, 0xFF	; 255
 35c:	df ef       	ldi	r29, 0xFF	; 255
 35e:	ce 01       	movw	r24, r28
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	1f 91       	pop	r17
 366:	0f 91       	pop	r16
 368:	08 95       	ret

0000036a <vfprintf>:
 36a:	ad e0       	ldi	r26, 0x0D	; 13
 36c:	b0 e0       	ldi	r27, 0x00	; 0
 36e:	eb eb       	ldi	r30, 0xBB	; 187
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	0c 94 33 04 	jmp	0x866	; 0x866 <__prologue_saves__>
 376:	3c 01       	movw	r6, r24
 378:	7d 87       	std	Y+13, r23	; 0x0d
 37a:	6c 87       	std	Y+12, r22	; 0x0c
 37c:	5a 01       	movw	r10, r20
 37e:	fc 01       	movw	r30, r24
 380:	17 82       	std	Z+7, r1	; 0x07
 382:	16 82       	std	Z+6, r1	; 0x06
 384:	83 81       	ldd	r24, Z+3	; 0x03
 386:	81 ff       	sbrs	r24, 1
 388:	c8 c1       	rjmp	.+912    	; 0x71a <vfprintf+0x3b0>
 38a:	2e 01       	movw	r4, r28
 38c:	08 94       	sec
 38e:	41 1c       	adc	r4, r1
 390:	51 1c       	adc	r5, r1
 392:	f3 01       	movw	r30, r6
 394:	93 81       	ldd	r25, Z+3	; 0x03
 396:	ec 85       	ldd	r30, Y+12	; 0x0c
 398:	fd 85       	ldd	r31, Y+13	; 0x0d
 39a:	93 fd       	sbrc	r25, 3
 39c:	85 91       	lpm	r24, Z+
 39e:	93 ff       	sbrs	r25, 3
 3a0:	81 91       	ld	r24, Z+
 3a2:	fd 87       	std	Y+13, r31	; 0x0d
 3a4:	ec 87       	std	Y+12, r30	; 0x0c
 3a6:	88 23       	and	r24, r24
 3a8:	09 f4       	brne	.+2      	; 0x3ac <vfprintf+0x42>
 3aa:	b3 c1       	rjmp	.+870    	; 0x712 <vfprintf+0x3a8>
 3ac:	85 32       	cpi	r24, 0x25	; 37
 3ae:	41 f4       	brne	.+16     	; 0x3c0 <vfprintf+0x56>
 3b0:	93 fd       	sbrc	r25, 3
 3b2:	85 91       	lpm	r24, Z+
 3b4:	93 ff       	sbrs	r25, 3
 3b6:	81 91       	ld	r24, Z+
 3b8:	fd 87       	std	Y+13, r31	; 0x0d
 3ba:	ec 87       	std	Y+12, r30	; 0x0c
 3bc:	85 32       	cpi	r24, 0x25	; 37
 3be:	29 f4       	brne	.+10     	; 0x3ca <vfprintf+0x60>
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	b3 01       	movw	r22, r6
 3c4:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 3c8:	e4 cf       	rjmp	.-56     	; 0x392 <vfprintf+0x28>
 3ca:	ff 24       	eor	r15, r15
 3cc:	ee 24       	eor	r14, r14
 3ce:	10 e0       	ldi	r17, 0x00	; 0
 3d0:	10 32       	cpi	r17, 0x20	; 32
 3d2:	b0 f4       	brcc	.+44     	; 0x400 <vfprintf+0x96>
 3d4:	8b 32       	cpi	r24, 0x2B	; 43
 3d6:	69 f0       	breq	.+26     	; 0x3f2 <vfprintf+0x88>
 3d8:	8c 32       	cpi	r24, 0x2C	; 44
 3da:	28 f4       	brcc	.+10     	; 0x3e6 <vfprintf+0x7c>
 3dc:	80 32       	cpi	r24, 0x20	; 32
 3de:	51 f0       	breq	.+20     	; 0x3f4 <vfprintf+0x8a>
 3e0:	83 32       	cpi	r24, 0x23	; 35
 3e2:	71 f4       	brne	.+28     	; 0x400 <vfprintf+0x96>
 3e4:	0b c0       	rjmp	.+22     	; 0x3fc <vfprintf+0x92>
 3e6:	8d 32       	cpi	r24, 0x2D	; 45
 3e8:	39 f0       	breq	.+14     	; 0x3f8 <vfprintf+0x8e>
 3ea:	80 33       	cpi	r24, 0x30	; 48
 3ec:	49 f4       	brne	.+18     	; 0x400 <vfprintf+0x96>
 3ee:	11 60       	ori	r17, 0x01	; 1
 3f0:	2c c0       	rjmp	.+88     	; 0x44a <vfprintf+0xe0>
 3f2:	12 60       	ori	r17, 0x02	; 2
 3f4:	14 60       	ori	r17, 0x04	; 4
 3f6:	29 c0       	rjmp	.+82     	; 0x44a <vfprintf+0xe0>
 3f8:	18 60       	ori	r17, 0x08	; 8
 3fa:	27 c0       	rjmp	.+78     	; 0x44a <vfprintf+0xe0>
 3fc:	10 61       	ori	r17, 0x10	; 16
 3fe:	25 c0       	rjmp	.+74     	; 0x44a <vfprintf+0xe0>
 400:	17 fd       	sbrc	r17, 7
 402:	2e c0       	rjmp	.+92     	; 0x460 <vfprintf+0xf6>
 404:	28 2f       	mov	r18, r24
 406:	20 53       	subi	r18, 0x30	; 48
 408:	2a 30       	cpi	r18, 0x0A	; 10
 40a:	98 f4       	brcc	.+38     	; 0x432 <vfprintf+0xc8>
 40c:	16 ff       	sbrs	r17, 6
 40e:	08 c0       	rjmp	.+16     	; 0x420 <vfprintf+0xb6>
 410:	8f 2d       	mov	r24, r15
 412:	88 0f       	add	r24, r24
 414:	f8 2e       	mov	r15, r24
 416:	ff 0c       	add	r15, r15
 418:	ff 0c       	add	r15, r15
 41a:	f8 0e       	add	r15, r24
 41c:	f2 0e       	add	r15, r18
 41e:	15 c0       	rjmp	.+42     	; 0x44a <vfprintf+0xe0>
 420:	8e 2d       	mov	r24, r14
 422:	88 0f       	add	r24, r24
 424:	e8 2e       	mov	r14, r24
 426:	ee 0c       	add	r14, r14
 428:	ee 0c       	add	r14, r14
 42a:	e8 0e       	add	r14, r24
 42c:	e2 0e       	add	r14, r18
 42e:	10 62       	ori	r17, 0x20	; 32
 430:	0c c0       	rjmp	.+24     	; 0x44a <vfprintf+0xe0>
 432:	8e 32       	cpi	r24, 0x2E	; 46
 434:	21 f4       	brne	.+8      	; 0x43e <vfprintf+0xd4>
 436:	16 fd       	sbrc	r17, 6
 438:	6c c1       	rjmp	.+728    	; 0x712 <vfprintf+0x3a8>
 43a:	10 64       	ori	r17, 0x40	; 64
 43c:	06 c0       	rjmp	.+12     	; 0x44a <vfprintf+0xe0>
 43e:	8c 36       	cpi	r24, 0x6C	; 108
 440:	11 f4       	brne	.+4      	; 0x446 <vfprintf+0xdc>
 442:	10 68       	ori	r17, 0x80	; 128
 444:	02 c0       	rjmp	.+4      	; 0x44a <vfprintf+0xe0>
 446:	88 36       	cpi	r24, 0x68	; 104
 448:	59 f4       	brne	.+22     	; 0x460 <vfprintf+0xf6>
 44a:	ec 85       	ldd	r30, Y+12	; 0x0c
 44c:	fd 85       	ldd	r31, Y+13	; 0x0d
 44e:	93 fd       	sbrc	r25, 3
 450:	85 91       	lpm	r24, Z+
 452:	93 ff       	sbrs	r25, 3
 454:	81 91       	ld	r24, Z+
 456:	fd 87       	std	Y+13, r31	; 0x0d
 458:	ec 87       	std	Y+12, r30	; 0x0c
 45a:	88 23       	and	r24, r24
 45c:	09 f0       	breq	.+2      	; 0x460 <vfprintf+0xf6>
 45e:	b8 cf       	rjmp	.-144    	; 0x3d0 <vfprintf+0x66>
 460:	98 2f       	mov	r25, r24
 462:	95 54       	subi	r25, 0x45	; 69
 464:	93 30       	cpi	r25, 0x03	; 3
 466:	18 f0       	brcs	.+6      	; 0x46e <vfprintf+0x104>
 468:	90 52       	subi	r25, 0x20	; 32
 46a:	93 30       	cpi	r25, 0x03	; 3
 46c:	38 f4       	brcc	.+14     	; 0x47c <vfprintf+0x112>
 46e:	24 e0       	ldi	r18, 0x04	; 4
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	a2 0e       	add	r10, r18
 474:	b3 1e       	adc	r11, r19
 476:	3f e3       	ldi	r19, 0x3F	; 63
 478:	39 83       	std	Y+1, r19	; 0x01
 47a:	0f c0       	rjmp	.+30     	; 0x49a <vfprintf+0x130>
 47c:	83 36       	cpi	r24, 0x63	; 99
 47e:	31 f0       	breq	.+12     	; 0x48c <vfprintf+0x122>
 480:	83 37       	cpi	r24, 0x73	; 115
 482:	81 f0       	breq	.+32     	; 0x4a4 <vfprintf+0x13a>
 484:	83 35       	cpi	r24, 0x53	; 83
 486:	09 f0       	breq	.+2      	; 0x48a <vfprintf+0x120>
 488:	5a c0       	rjmp	.+180    	; 0x53e <vfprintf+0x1d4>
 48a:	22 c0       	rjmp	.+68     	; 0x4d0 <vfprintf+0x166>
 48c:	f5 01       	movw	r30, r10
 48e:	80 81       	ld	r24, Z
 490:	89 83       	std	Y+1, r24	; 0x01
 492:	22 e0       	ldi	r18, 0x02	; 2
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	a2 0e       	add	r10, r18
 498:	b3 1e       	adc	r11, r19
 49a:	21 e0       	ldi	r18, 0x01	; 1
 49c:	c2 2e       	mov	r12, r18
 49e:	d1 2c       	mov	r13, r1
 4a0:	42 01       	movw	r8, r4
 4a2:	14 c0       	rjmp	.+40     	; 0x4cc <vfprintf+0x162>
 4a4:	92 e0       	ldi	r25, 0x02	; 2
 4a6:	29 2e       	mov	r2, r25
 4a8:	31 2c       	mov	r3, r1
 4aa:	2a 0c       	add	r2, r10
 4ac:	3b 1c       	adc	r3, r11
 4ae:	f5 01       	movw	r30, r10
 4b0:	80 80       	ld	r8, Z
 4b2:	91 80       	ldd	r9, Z+1	; 0x01
 4b4:	16 ff       	sbrs	r17, 6
 4b6:	03 c0       	rjmp	.+6      	; 0x4be <vfprintf+0x154>
 4b8:	6f 2d       	mov	r22, r15
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <vfprintf+0x158>
 4be:	6f ef       	ldi	r22, 0xFF	; 255
 4c0:	7f ef       	ldi	r23, 0xFF	; 255
 4c2:	c4 01       	movw	r24, r8
 4c4:	0e 94 9e 03 	call	0x73c	; 0x73c <strnlen>
 4c8:	6c 01       	movw	r12, r24
 4ca:	51 01       	movw	r10, r2
 4cc:	1f 77       	andi	r17, 0x7F	; 127
 4ce:	15 c0       	rjmp	.+42     	; 0x4fa <vfprintf+0x190>
 4d0:	82 e0       	ldi	r24, 0x02	; 2
 4d2:	28 2e       	mov	r2, r24
 4d4:	31 2c       	mov	r3, r1
 4d6:	2a 0c       	add	r2, r10
 4d8:	3b 1c       	adc	r3, r11
 4da:	f5 01       	movw	r30, r10
 4dc:	80 80       	ld	r8, Z
 4de:	91 80       	ldd	r9, Z+1	; 0x01
 4e0:	16 ff       	sbrs	r17, 6
 4e2:	03 c0       	rjmp	.+6      	; 0x4ea <vfprintf+0x180>
 4e4:	6f 2d       	mov	r22, r15
 4e6:	70 e0       	ldi	r23, 0x00	; 0
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <vfprintf+0x184>
 4ea:	6f ef       	ldi	r22, 0xFF	; 255
 4ec:	7f ef       	ldi	r23, 0xFF	; 255
 4ee:	c4 01       	movw	r24, r8
 4f0:	0e 94 93 03 	call	0x726	; 0x726 <strnlen_P>
 4f4:	6c 01       	movw	r12, r24
 4f6:	10 68       	ori	r17, 0x80	; 128
 4f8:	51 01       	movw	r10, r2
 4fa:	13 fd       	sbrc	r17, 3
 4fc:	1c c0       	rjmp	.+56     	; 0x536 <vfprintf+0x1cc>
 4fe:	06 c0       	rjmp	.+12     	; 0x50c <vfprintf+0x1a2>
 500:	80 e2       	ldi	r24, 0x20	; 32
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	b3 01       	movw	r22, r6
 506:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 50a:	ea 94       	dec	r14
 50c:	8e 2d       	mov	r24, r14
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	c8 16       	cp	r12, r24
 512:	d9 06       	cpc	r13, r25
 514:	a8 f3       	brcs	.-22     	; 0x500 <vfprintf+0x196>
 516:	0f c0       	rjmp	.+30     	; 0x536 <vfprintf+0x1cc>
 518:	f4 01       	movw	r30, r8
 51a:	17 fd       	sbrc	r17, 7
 51c:	85 91       	lpm	r24, Z+
 51e:	17 ff       	sbrs	r17, 7
 520:	81 91       	ld	r24, Z+
 522:	4f 01       	movw	r8, r30
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	b3 01       	movw	r22, r6
 528:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 52c:	e1 10       	cpse	r14, r1
 52e:	ea 94       	dec	r14
 530:	08 94       	sec
 532:	c1 08       	sbc	r12, r1
 534:	d1 08       	sbc	r13, r1
 536:	c1 14       	cp	r12, r1
 538:	d1 04       	cpc	r13, r1
 53a:	71 f7       	brne	.-36     	; 0x518 <vfprintf+0x1ae>
 53c:	e7 c0       	rjmp	.+462    	; 0x70c <vfprintf+0x3a2>
 53e:	84 36       	cpi	r24, 0x64	; 100
 540:	11 f0       	breq	.+4      	; 0x546 <vfprintf+0x1dc>
 542:	89 36       	cpi	r24, 0x69	; 105
 544:	51 f5       	brne	.+84     	; 0x59a <vfprintf+0x230>
 546:	f5 01       	movw	r30, r10
 548:	17 ff       	sbrs	r17, 7
 54a:	07 c0       	rjmp	.+14     	; 0x55a <vfprintf+0x1f0>
 54c:	80 81       	ld	r24, Z
 54e:	91 81       	ldd	r25, Z+1	; 0x01
 550:	a2 81       	ldd	r26, Z+2	; 0x02
 552:	b3 81       	ldd	r27, Z+3	; 0x03
 554:	24 e0       	ldi	r18, 0x04	; 4
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	08 c0       	rjmp	.+16     	; 0x56a <vfprintf+0x200>
 55a:	80 81       	ld	r24, Z
 55c:	91 81       	ldd	r25, Z+1	; 0x01
 55e:	aa 27       	eor	r26, r26
 560:	97 fd       	sbrc	r25, 7
 562:	a0 95       	com	r26
 564:	ba 2f       	mov	r27, r26
 566:	22 e0       	ldi	r18, 0x02	; 2
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	a2 0e       	add	r10, r18
 56c:	b3 1e       	adc	r11, r19
 56e:	01 2f       	mov	r16, r17
 570:	0f 76       	andi	r16, 0x6F	; 111
 572:	b7 ff       	sbrs	r27, 7
 574:	08 c0       	rjmp	.+16     	; 0x586 <vfprintf+0x21c>
 576:	b0 95       	com	r27
 578:	a0 95       	com	r26
 57a:	90 95       	com	r25
 57c:	81 95       	neg	r24
 57e:	9f 4f       	sbci	r25, 0xFF	; 255
 580:	af 4f       	sbci	r26, 0xFF	; 255
 582:	bf 4f       	sbci	r27, 0xFF	; 255
 584:	00 68       	ori	r16, 0x80	; 128
 586:	bc 01       	movw	r22, r24
 588:	cd 01       	movw	r24, r26
 58a:	a2 01       	movw	r20, r4
 58c:	2a e0       	ldi	r18, 0x0A	; 10
 58e:	30 e0       	ldi	r19, 0x00	; 0
 590:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__ultoa_invert>
 594:	d8 2e       	mov	r13, r24
 596:	d4 18       	sub	r13, r4
 598:	3f c0       	rjmp	.+126    	; 0x618 <vfprintf+0x2ae>
 59a:	85 37       	cpi	r24, 0x75	; 117
 59c:	21 f4       	brne	.+8      	; 0x5a6 <vfprintf+0x23c>
 59e:	1f 7e       	andi	r17, 0xEF	; 239
 5a0:	2a e0       	ldi	r18, 0x0A	; 10
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	20 c0       	rjmp	.+64     	; 0x5e6 <vfprintf+0x27c>
 5a6:	19 7f       	andi	r17, 0xF9	; 249
 5a8:	8f 36       	cpi	r24, 0x6F	; 111
 5aa:	a9 f0       	breq	.+42     	; 0x5d6 <vfprintf+0x26c>
 5ac:	80 37       	cpi	r24, 0x70	; 112
 5ae:	20 f4       	brcc	.+8      	; 0x5b8 <vfprintf+0x24e>
 5b0:	88 35       	cpi	r24, 0x58	; 88
 5b2:	09 f0       	breq	.+2      	; 0x5b6 <vfprintf+0x24c>
 5b4:	ae c0       	rjmp	.+348    	; 0x712 <vfprintf+0x3a8>
 5b6:	0b c0       	rjmp	.+22     	; 0x5ce <vfprintf+0x264>
 5b8:	80 37       	cpi	r24, 0x70	; 112
 5ba:	21 f0       	breq	.+8      	; 0x5c4 <vfprintf+0x25a>
 5bc:	88 37       	cpi	r24, 0x78	; 120
 5be:	09 f0       	breq	.+2      	; 0x5c2 <vfprintf+0x258>
 5c0:	a8 c0       	rjmp	.+336    	; 0x712 <vfprintf+0x3a8>
 5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <vfprintf+0x25c>
 5c4:	10 61       	ori	r17, 0x10	; 16
 5c6:	14 ff       	sbrs	r17, 4
 5c8:	09 c0       	rjmp	.+18     	; 0x5dc <vfprintf+0x272>
 5ca:	14 60       	ori	r17, 0x04	; 4
 5cc:	07 c0       	rjmp	.+14     	; 0x5dc <vfprintf+0x272>
 5ce:	14 ff       	sbrs	r17, 4
 5d0:	08 c0       	rjmp	.+16     	; 0x5e2 <vfprintf+0x278>
 5d2:	16 60       	ori	r17, 0x06	; 6
 5d4:	06 c0       	rjmp	.+12     	; 0x5e2 <vfprintf+0x278>
 5d6:	28 e0       	ldi	r18, 0x08	; 8
 5d8:	30 e0       	ldi	r19, 0x00	; 0
 5da:	05 c0       	rjmp	.+10     	; 0x5e6 <vfprintf+0x27c>
 5dc:	20 e1       	ldi	r18, 0x10	; 16
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <vfprintf+0x27c>
 5e2:	20 e1       	ldi	r18, 0x10	; 16
 5e4:	32 e0       	ldi	r19, 0x02	; 2
 5e6:	f5 01       	movw	r30, r10
 5e8:	17 ff       	sbrs	r17, 7
 5ea:	07 c0       	rjmp	.+14     	; 0x5fa <vfprintf+0x290>
 5ec:	60 81       	ld	r22, Z
 5ee:	71 81       	ldd	r23, Z+1	; 0x01
 5f0:	82 81       	ldd	r24, Z+2	; 0x02
 5f2:	93 81       	ldd	r25, Z+3	; 0x03
 5f4:	44 e0       	ldi	r20, 0x04	; 4
 5f6:	50 e0       	ldi	r21, 0x00	; 0
 5f8:	06 c0       	rjmp	.+12     	; 0x606 <vfprintf+0x29c>
 5fa:	60 81       	ld	r22, Z
 5fc:	71 81       	ldd	r23, Z+1	; 0x01
 5fe:	80 e0       	ldi	r24, 0x00	; 0
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	42 e0       	ldi	r20, 0x02	; 2
 604:	50 e0       	ldi	r21, 0x00	; 0
 606:	a4 0e       	add	r10, r20
 608:	b5 1e       	adc	r11, r21
 60a:	a2 01       	movw	r20, r4
 60c:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__ultoa_invert>
 610:	d8 2e       	mov	r13, r24
 612:	d4 18       	sub	r13, r4
 614:	01 2f       	mov	r16, r17
 616:	0f 77       	andi	r16, 0x7F	; 127
 618:	06 ff       	sbrs	r16, 6
 61a:	09 c0       	rjmp	.+18     	; 0x62e <vfprintf+0x2c4>
 61c:	0e 7f       	andi	r16, 0xFE	; 254
 61e:	df 14       	cp	r13, r15
 620:	30 f4       	brcc	.+12     	; 0x62e <vfprintf+0x2c4>
 622:	04 ff       	sbrs	r16, 4
 624:	06 c0       	rjmp	.+12     	; 0x632 <vfprintf+0x2c8>
 626:	02 fd       	sbrc	r16, 2
 628:	04 c0       	rjmp	.+8      	; 0x632 <vfprintf+0x2c8>
 62a:	0f 7e       	andi	r16, 0xEF	; 239
 62c:	02 c0       	rjmp	.+4      	; 0x632 <vfprintf+0x2c8>
 62e:	1d 2d       	mov	r17, r13
 630:	01 c0       	rjmp	.+2      	; 0x634 <vfprintf+0x2ca>
 632:	1f 2d       	mov	r17, r15
 634:	80 2f       	mov	r24, r16
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	04 ff       	sbrs	r16, 4
 63a:	0c c0       	rjmp	.+24     	; 0x654 <vfprintf+0x2ea>
 63c:	fe 01       	movw	r30, r28
 63e:	ed 0d       	add	r30, r13
 640:	f1 1d       	adc	r31, r1
 642:	20 81       	ld	r18, Z
 644:	20 33       	cpi	r18, 0x30	; 48
 646:	11 f4       	brne	.+4      	; 0x64c <vfprintf+0x2e2>
 648:	09 7e       	andi	r16, 0xE9	; 233
 64a:	09 c0       	rjmp	.+18     	; 0x65e <vfprintf+0x2f4>
 64c:	02 ff       	sbrs	r16, 2
 64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0x2f2>
 650:	1e 5f       	subi	r17, 0xFE	; 254
 652:	05 c0       	rjmp	.+10     	; 0x65e <vfprintf+0x2f4>
 654:	86 78       	andi	r24, 0x86	; 134
 656:	90 70       	andi	r25, 0x00	; 0
 658:	00 97       	sbiw	r24, 0x00	; 0
 65a:	09 f0       	breq	.+2      	; 0x65e <vfprintf+0x2f4>
 65c:	1f 5f       	subi	r17, 0xFF	; 255
 65e:	80 2e       	mov	r8, r16
 660:	99 24       	eor	r9, r9
 662:	03 fd       	sbrc	r16, 3
 664:	12 c0       	rjmp	.+36     	; 0x68a <vfprintf+0x320>
 666:	00 ff       	sbrs	r16, 0
 668:	0d c0       	rjmp	.+26     	; 0x684 <vfprintf+0x31a>
 66a:	fd 2c       	mov	r15, r13
 66c:	1e 15       	cp	r17, r14
 66e:	50 f4       	brcc	.+20     	; 0x684 <vfprintf+0x31a>
 670:	fe 0c       	add	r15, r14
 672:	f1 1a       	sub	r15, r17
 674:	1e 2d       	mov	r17, r14
 676:	06 c0       	rjmp	.+12     	; 0x684 <vfprintf+0x31a>
 678:	80 e2       	ldi	r24, 0x20	; 32
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	b3 01       	movw	r22, r6
 67e:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 682:	1f 5f       	subi	r17, 0xFF	; 255
 684:	1e 15       	cp	r17, r14
 686:	c0 f3       	brcs	.-16     	; 0x678 <vfprintf+0x30e>
 688:	04 c0       	rjmp	.+8      	; 0x692 <vfprintf+0x328>
 68a:	1e 15       	cp	r17, r14
 68c:	10 f4       	brcc	.+4      	; 0x692 <vfprintf+0x328>
 68e:	e1 1a       	sub	r14, r17
 690:	01 c0       	rjmp	.+2      	; 0x694 <vfprintf+0x32a>
 692:	ee 24       	eor	r14, r14
 694:	84 fe       	sbrs	r8, 4
 696:	0f c0       	rjmp	.+30     	; 0x6b6 <vfprintf+0x34c>
 698:	80 e3       	ldi	r24, 0x30	; 48
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	b3 01       	movw	r22, r6
 69e:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 6a2:	82 fe       	sbrs	r8, 2
 6a4:	1f c0       	rjmp	.+62     	; 0x6e4 <vfprintf+0x37a>
 6a6:	81 fe       	sbrs	r8, 1
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <vfprintf+0x346>
 6aa:	88 e5       	ldi	r24, 0x58	; 88
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	10 c0       	rjmp	.+32     	; 0x6d0 <vfprintf+0x366>
 6b0:	88 e7       	ldi	r24, 0x78	; 120
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0d c0       	rjmp	.+26     	; 0x6d0 <vfprintf+0x366>
 6b6:	c4 01       	movw	r24, r8
 6b8:	86 78       	andi	r24, 0x86	; 134
 6ba:	90 70       	andi	r25, 0x00	; 0
 6bc:	00 97       	sbiw	r24, 0x00	; 0
 6be:	91 f0       	breq	.+36     	; 0x6e4 <vfprintf+0x37a>
 6c0:	81 fc       	sbrc	r8, 1
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <vfprintf+0x35e>
 6c4:	80 e2       	ldi	r24, 0x20	; 32
 6c6:	01 c0       	rjmp	.+2      	; 0x6ca <vfprintf+0x360>
 6c8:	8b e2       	ldi	r24, 0x2B	; 43
 6ca:	07 fd       	sbrc	r16, 7
 6cc:	8d e2       	ldi	r24, 0x2D	; 45
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	b3 01       	movw	r22, r6
 6d2:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <vfprintf+0x37a>
 6d8:	80 e3       	ldi	r24, 0x30	; 48
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	b3 01       	movw	r22, r6
 6de:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 6e2:	fa 94       	dec	r15
 6e4:	df 14       	cp	r13, r15
 6e6:	c0 f3       	brcs	.-16     	; 0x6d8 <vfprintf+0x36e>
 6e8:	da 94       	dec	r13
 6ea:	f2 01       	movw	r30, r4
 6ec:	ed 0d       	add	r30, r13
 6ee:	f1 1d       	adc	r31, r1
 6f0:	80 81       	ld	r24, Z
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	b3 01       	movw	r22, r6
 6f6:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 6fa:	dd 20       	and	r13, r13
 6fc:	a9 f7       	brne	.-22     	; 0x6e8 <vfprintf+0x37e>
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <vfprintf+0x3a2>
 700:	80 e2       	ldi	r24, 0x20	; 32
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	b3 01       	movw	r22, r6
 706:	0e 94 a9 03 	call	0x752	; 0x752 <fputc>
 70a:	ea 94       	dec	r14
 70c:	ee 20       	and	r14, r14
 70e:	c1 f7       	brne	.-16     	; 0x700 <vfprintf+0x396>
 710:	40 ce       	rjmp	.-896    	; 0x392 <vfprintf+0x28>
 712:	f3 01       	movw	r30, r6
 714:	86 81       	ldd	r24, Z+6	; 0x06
 716:	97 81       	ldd	r25, Z+7	; 0x07
 718:	02 c0       	rjmp	.+4      	; 0x71e <vfprintf+0x3b4>
 71a:	8f ef       	ldi	r24, 0xFF	; 255
 71c:	9f ef       	ldi	r25, 0xFF	; 255
 71e:	2d 96       	adiw	r28, 0x0d	; 13
 720:	e2 e1       	ldi	r30, 0x12	; 18
 722:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__epilogue_restores__>

00000726 <strnlen_P>:
 726:	fc 01       	movw	r30, r24
 728:	05 90       	lpm	r0, Z+
 72a:	61 50       	subi	r22, 0x01	; 1
 72c:	70 40       	sbci	r23, 0x00	; 0
 72e:	01 10       	cpse	r0, r1
 730:	d8 f7       	brcc	.-10     	; 0x728 <strnlen_P+0x2>
 732:	80 95       	com	r24
 734:	90 95       	com	r25
 736:	8e 0f       	add	r24, r30
 738:	9f 1f       	adc	r25, r31
 73a:	08 95       	ret

0000073c <strnlen>:
 73c:	fc 01       	movw	r30, r24
 73e:	61 50       	subi	r22, 0x01	; 1
 740:	70 40       	sbci	r23, 0x00	; 0
 742:	01 90       	ld	r0, Z+
 744:	01 10       	cpse	r0, r1
 746:	d8 f7       	brcc	.-10     	; 0x73e <strnlen+0x2>
 748:	80 95       	com	r24
 74a:	90 95       	com	r25
 74c:	8e 0f       	add	r24, r30
 74e:	9f 1f       	adc	r25, r31
 750:	08 95       	ret

00000752 <fputc>:
 752:	0f 93       	push	r16
 754:	1f 93       	push	r17
 756:	cf 93       	push	r28
 758:	df 93       	push	r29
 75a:	8c 01       	movw	r16, r24
 75c:	eb 01       	movw	r28, r22
 75e:	8b 81       	ldd	r24, Y+3	; 0x03
 760:	81 ff       	sbrs	r24, 1
 762:	1b c0       	rjmp	.+54     	; 0x79a <fputc+0x48>
 764:	82 ff       	sbrs	r24, 2
 766:	0d c0       	rjmp	.+26     	; 0x782 <fputc+0x30>
 768:	2e 81       	ldd	r18, Y+6	; 0x06
 76a:	3f 81       	ldd	r19, Y+7	; 0x07
 76c:	8c 81       	ldd	r24, Y+4	; 0x04
 76e:	9d 81       	ldd	r25, Y+5	; 0x05
 770:	28 17       	cp	r18, r24
 772:	39 07       	cpc	r19, r25
 774:	64 f4       	brge	.+24     	; 0x78e <fputc+0x3c>
 776:	e8 81       	ld	r30, Y
 778:	f9 81       	ldd	r31, Y+1	; 0x01
 77a:	01 93       	st	Z+, r16
 77c:	f9 83       	std	Y+1, r31	; 0x01
 77e:	e8 83       	st	Y, r30
 780:	06 c0       	rjmp	.+12     	; 0x78e <fputc+0x3c>
 782:	e8 85       	ldd	r30, Y+8	; 0x08
 784:	f9 85       	ldd	r31, Y+9	; 0x09
 786:	80 2f       	mov	r24, r16
 788:	09 95       	icall
 78a:	00 97       	sbiw	r24, 0x00	; 0
 78c:	31 f4       	brne	.+12     	; 0x79a <fputc+0x48>
 78e:	8e 81       	ldd	r24, Y+6	; 0x06
 790:	9f 81       	ldd	r25, Y+7	; 0x07
 792:	01 96       	adiw	r24, 0x01	; 1
 794:	9f 83       	std	Y+7, r25	; 0x07
 796:	8e 83       	std	Y+6, r24	; 0x06
 798:	02 c0       	rjmp	.+4      	; 0x79e <fputc+0x4c>
 79a:	0f ef       	ldi	r16, 0xFF	; 255
 79c:	1f ef       	ldi	r17, 0xFF	; 255
 79e:	c8 01       	movw	r24, r16
 7a0:	df 91       	pop	r29
 7a2:	cf 91       	pop	r28
 7a4:	1f 91       	pop	r17
 7a6:	0f 91       	pop	r16
 7a8:	08 95       	ret

000007aa <__ultoa_invert>:
 7aa:	fa 01       	movw	r30, r20
 7ac:	aa 27       	eor	r26, r26
 7ae:	28 30       	cpi	r18, 0x08	; 8
 7b0:	51 f1       	breq	.+84     	; 0x806 <__ultoa_invert+0x5c>
 7b2:	20 31       	cpi	r18, 0x10	; 16
 7b4:	81 f1       	breq	.+96     	; 0x816 <__ultoa_invert+0x6c>
 7b6:	e8 94       	clt
 7b8:	6f 93       	push	r22
 7ba:	6e 7f       	andi	r22, 0xFE	; 254
 7bc:	6e 5f       	subi	r22, 0xFE	; 254
 7be:	7f 4f       	sbci	r23, 0xFF	; 255
 7c0:	8f 4f       	sbci	r24, 0xFF	; 255
 7c2:	9f 4f       	sbci	r25, 0xFF	; 255
 7c4:	af 4f       	sbci	r26, 0xFF	; 255
 7c6:	b1 e0       	ldi	r27, 0x01	; 1
 7c8:	3e d0       	rcall	.+124    	; 0x846 <__ultoa_invert+0x9c>
 7ca:	b4 e0       	ldi	r27, 0x04	; 4
 7cc:	3c d0       	rcall	.+120    	; 0x846 <__ultoa_invert+0x9c>
 7ce:	67 0f       	add	r22, r23
 7d0:	78 1f       	adc	r23, r24
 7d2:	89 1f       	adc	r24, r25
 7d4:	9a 1f       	adc	r25, r26
 7d6:	a1 1d       	adc	r26, r1
 7d8:	68 0f       	add	r22, r24
 7da:	79 1f       	adc	r23, r25
 7dc:	8a 1f       	adc	r24, r26
 7de:	91 1d       	adc	r25, r1
 7e0:	a1 1d       	adc	r26, r1
 7e2:	6a 0f       	add	r22, r26
 7e4:	71 1d       	adc	r23, r1
 7e6:	81 1d       	adc	r24, r1
 7e8:	91 1d       	adc	r25, r1
 7ea:	a1 1d       	adc	r26, r1
 7ec:	20 d0       	rcall	.+64     	; 0x82e <__ultoa_invert+0x84>
 7ee:	09 f4       	brne	.+2      	; 0x7f2 <__ultoa_invert+0x48>
 7f0:	68 94       	set
 7f2:	3f 91       	pop	r19
 7f4:	2a e0       	ldi	r18, 0x0A	; 10
 7f6:	26 9f       	mul	r18, r22
 7f8:	11 24       	eor	r1, r1
 7fa:	30 19       	sub	r19, r0
 7fc:	30 5d       	subi	r19, 0xD0	; 208
 7fe:	31 93       	st	Z+, r19
 800:	de f6       	brtc	.-74     	; 0x7b8 <__ultoa_invert+0xe>
 802:	cf 01       	movw	r24, r30
 804:	08 95       	ret
 806:	46 2f       	mov	r20, r22
 808:	47 70       	andi	r20, 0x07	; 7
 80a:	40 5d       	subi	r20, 0xD0	; 208
 80c:	41 93       	st	Z+, r20
 80e:	b3 e0       	ldi	r27, 0x03	; 3
 810:	0f d0       	rcall	.+30     	; 0x830 <__ultoa_invert+0x86>
 812:	c9 f7       	brne	.-14     	; 0x806 <__ultoa_invert+0x5c>
 814:	f6 cf       	rjmp	.-20     	; 0x802 <__ultoa_invert+0x58>
 816:	46 2f       	mov	r20, r22
 818:	4f 70       	andi	r20, 0x0F	; 15
 81a:	40 5d       	subi	r20, 0xD0	; 208
 81c:	4a 33       	cpi	r20, 0x3A	; 58
 81e:	18 f0       	brcs	.+6      	; 0x826 <__ultoa_invert+0x7c>
 820:	49 5d       	subi	r20, 0xD9	; 217
 822:	31 fd       	sbrc	r19, 1
 824:	40 52       	subi	r20, 0x20	; 32
 826:	41 93       	st	Z+, r20
 828:	02 d0       	rcall	.+4      	; 0x82e <__ultoa_invert+0x84>
 82a:	a9 f7       	brne	.-22     	; 0x816 <__ultoa_invert+0x6c>
 82c:	ea cf       	rjmp	.-44     	; 0x802 <__ultoa_invert+0x58>
 82e:	b4 e0       	ldi	r27, 0x04	; 4
 830:	a6 95       	lsr	r26
 832:	97 95       	ror	r25
 834:	87 95       	ror	r24
 836:	77 95       	ror	r23
 838:	67 95       	ror	r22
 83a:	ba 95       	dec	r27
 83c:	c9 f7       	brne	.-14     	; 0x830 <__ultoa_invert+0x86>
 83e:	00 97       	sbiw	r24, 0x00	; 0
 840:	61 05       	cpc	r22, r1
 842:	71 05       	cpc	r23, r1
 844:	08 95       	ret
 846:	9b 01       	movw	r18, r22
 848:	ac 01       	movw	r20, r24
 84a:	0a 2e       	mov	r0, r26
 84c:	06 94       	lsr	r0
 84e:	57 95       	ror	r21
 850:	47 95       	ror	r20
 852:	37 95       	ror	r19
 854:	27 95       	ror	r18
 856:	ba 95       	dec	r27
 858:	c9 f7       	brne	.-14     	; 0x84c <__ultoa_invert+0xa2>
 85a:	62 0f       	add	r22, r18
 85c:	73 1f       	adc	r23, r19
 85e:	84 1f       	adc	r24, r20
 860:	95 1f       	adc	r25, r21
 862:	a0 1d       	adc	r26, r0
 864:	08 95       	ret

00000866 <__prologue_saves__>:
 866:	2f 92       	push	r2
 868:	3f 92       	push	r3
 86a:	4f 92       	push	r4
 86c:	5f 92       	push	r5
 86e:	6f 92       	push	r6
 870:	7f 92       	push	r7
 872:	8f 92       	push	r8
 874:	9f 92       	push	r9
 876:	af 92       	push	r10
 878:	bf 92       	push	r11
 87a:	cf 92       	push	r12
 87c:	df 92       	push	r13
 87e:	ef 92       	push	r14
 880:	ff 92       	push	r15
 882:	0f 93       	push	r16
 884:	1f 93       	push	r17
 886:	cf 93       	push	r28
 888:	df 93       	push	r29
 88a:	cd b7       	in	r28, 0x3d	; 61
 88c:	de b7       	in	r29, 0x3e	; 62
 88e:	ca 1b       	sub	r28, r26
 890:	db 0b       	sbc	r29, r27
 892:	0f b6       	in	r0, 0x3f	; 63
 894:	f8 94       	cli
 896:	de bf       	out	0x3e, r29	; 62
 898:	0f be       	out	0x3f, r0	; 63
 89a:	cd bf       	out	0x3d, r28	; 61
 89c:	09 94       	ijmp

0000089e <__epilogue_restores__>:
 89e:	2a 88       	ldd	r2, Y+18	; 0x12
 8a0:	39 88       	ldd	r3, Y+17	; 0x11
 8a2:	48 88       	ldd	r4, Y+16	; 0x10
 8a4:	5f 84       	ldd	r5, Y+15	; 0x0f
 8a6:	6e 84       	ldd	r6, Y+14	; 0x0e
 8a8:	7d 84       	ldd	r7, Y+13	; 0x0d
 8aa:	8c 84       	ldd	r8, Y+12	; 0x0c
 8ac:	9b 84       	ldd	r9, Y+11	; 0x0b
 8ae:	aa 84       	ldd	r10, Y+10	; 0x0a
 8b0:	b9 84       	ldd	r11, Y+9	; 0x09
 8b2:	c8 84       	ldd	r12, Y+8	; 0x08
 8b4:	df 80       	ldd	r13, Y+7	; 0x07
 8b6:	ee 80       	ldd	r14, Y+6	; 0x06
 8b8:	fd 80       	ldd	r15, Y+5	; 0x05
 8ba:	0c 81       	ldd	r16, Y+4	; 0x04
 8bc:	1b 81       	ldd	r17, Y+3	; 0x03
 8be:	aa 81       	ldd	r26, Y+2	; 0x02
 8c0:	b9 81       	ldd	r27, Y+1	; 0x01
 8c2:	ce 0f       	add	r28, r30
 8c4:	d1 1d       	adc	r29, r1
 8c6:	0f b6       	in	r0, 0x3f	; 63
 8c8:	f8 94       	cli
 8ca:	de bf       	out	0x3e, r29	; 62
 8cc:	0f be       	out	0x3f, r0	; 63
 8ce:	cd bf       	out	0x3d, r28	; 61
 8d0:	ed 01       	movw	r28, r26
 8d2:	08 95       	ret

000008d4 <_exit>:
 8d4:	f8 94       	cli

000008d6 <__stop_program>:
 8d6:	ff cf       	rjmp	.-2      	; 0x8d6 <__stop_program>
