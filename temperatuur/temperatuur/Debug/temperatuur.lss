
temperatuur.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000620  000006b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000620  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  0080010e  0080010e  000006c2  2**0
                  ALLOC
  3 .stab         00001e9c  00000000  00000000  000006c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000006ad  00000000  00000000  00002560  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000c0  00000000  00000000  00002c10  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ec  00000000  00000000  00002cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000267  00000000  00000000  000033bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004fe  00000000  00000000  00003623  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00003b24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000189  00000000  00000000  00003c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001c7  00000000  00000000  00003da5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e2       	ldi	r30, 0x20	; 32
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <main>
  9e:	0c 94 0e 03 	jmp	0x61c	; 0x61c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ser_init>:
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
  a6:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
  aa:	83 e3       	ldi	r24, 0x33	; 51
  ac:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
  b0:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
  b4:	88 e1       	ldi	r24, 0x18	; 24
  b6:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
  ba:	86 e0       	ldi	r24, 0x06	; 6
  bc:	80 93 c2 00 	sts	0x00C2, r24
}
  c0:	08 95       	ret

000000c2 <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
  c2:	e0 ec       	ldi	r30, 0xC0	; 192
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	95 ff       	sbrs	r25, 5
  ca:	fd cf       	rjmp	.-6      	; 0xc6 <ser_transmit+0x4>
	// send the data
	UDR0 = data;
  cc:	80 93 c6 00 	sts	0x00C6, r24
}
  d0:	08 95       	ret

000000d2 <ser_receive>:

// Low level receive
uint8_t ser_receive() {
    loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  d2:	e0 ec       	ldi	r30, 0xC0	; 192
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	88 23       	and	r24, r24
  da:	ec f7       	brge	.-6      	; 0xd6 <ser_receive+0x4>
    return UDR0;
  dc:	80 91 c6 00 	lds	r24, 0x00C6
}
  e0:	08 95       	ret

000000e2 <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
  e8:	88 81       	ld	r24, Y
  ea:	88 23       	and	r24, r24
  ec:	31 f0       	breq	.+12     	; 0xfa <ser_write+0x18>
    return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
  ee:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
  f0:	0e 94 61 00 	call	0xc2	; 0xc2 <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
  f4:	89 91       	ld	r24, Y+
  f6:	88 23       	and	r24, r24
  f8:	d9 f7       	brne	.-10     	; 0xf0 <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	08 95       	ret

00000100 <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
 100:	0e 94 71 00 	call	0xe2	; 0xe2 <ser_write>
	ser_transmit('\r');
 104:	8d e0       	ldi	r24, 0x0D	; 13
 106:	0e 94 61 00 	call	0xc2	; 0xc2 <ser_transmit>
	ser_transmit('\n');
 10a:	8a e0       	ldi	r24, 0x0A	; 10
 10c:	0e 94 61 00 	call	0xc2	; 0xc2 <ser_transmit>
}
 110:	08 95       	ret

00000112 <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
 112:	af 92       	push	r10
 114:	bf 92       	push	r11
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	5c 01       	movw	r10, r24
 128:	d4 2f       	mov	r29, r20
	int i=0;
 12a:	6c 01       	movw	r12, r24
 12c:	ee 24       	eor	r14, r14
 12e:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 130:	8b 01       	movw	r16, r22
 132:	01 50       	subi	r16, 0x01	; 1
 134:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
 136:	0e 94 69 00 	call	0xd2	; 0xd2 <ser_receive>
 13a:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
 13c:	dd 23       	and	r29, r29
 13e:	11 f0       	breq	.+4      	; 0x144 <ser_readln+0x32>
 140:	0e 94 61 00 	call	0xc2	; 0xc2 <ser_transmit>
		if (c=='\r') {
 144:	cd 30       	cpi	r28, 0x0D	; 13
 146:	31 f4       	brne	.+12     	; 0x154 <ser_readln+0x42>
			if (echo) ser_transmit('\n');
 148:	dd 23       	and	r29, r29
 14a:	71 f0       	breq	.+28     	; 0x168 <ser_readln+0x56>
 14c:	8a e0       	ldi	r24, 0x0A	; 10
 14e:	0e 94 61 00 	call	0xc2	; 0xc2 <ser_transmit>
 152:	0a c0       	rjmp	.+20     	; 0x168 <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 154:	e0 16       	cp	r14, r16
 156:	f1 06       	cpc	r15, r17
 158:	74 f7       	brge	.-36     	; 0x136 <ser_readln+0x24>
			buf[i++]=c;
 15a:	f6 01       	movw	r30, r12
 15c:	c1 93       	st	Z+, r28
 15e:	6f 01       	movw	r12, r30
 160:	08 94       	sec
 162:	e1 1c       	adc	r14, r1
 164:	f1 1c       	adc	r15, r1
 166:	e7 cf       	rjmp	.-50     	; 0x136 <ser_readln+0x24>
		}
	}
	buf[i]='\0';
 168:	ea 0c       	add	r14, r10
 16a:	fb 1c       	adc	r15, r11
 16c:	f7 01       	movw	r30, r14
 16e:	10 82       	st	Z, r1
}
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	1f 91       	pop	r17
 176:	0f 91       	pop	r16
 178:	ff 90       	pop	r15
 17a:	ef 90       	pop	r14
 17c:	df 90       	pop	r13
 17e:	cf 90       	pop	r12
 180:	bf 90       	pop	r11
 182:	af 90       	pop	r10
 184:	08 95       	ret

00000186 <ADC_init>:
		_delay_ms(1000);
	}
}

void ADC_init(){
	ADMUX = (1<<REFS0);
 186:	80 e4       	ldi	r24, 0x40	; 64
 188:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 18c:	87 e8       	ldi	r24, 0x87	; 135
 18e:	80 93 7a 00 	sts	0x007A, r24
	DIDR0 = (1<<ADC5D);
 192:	80 e2       	ldi	r24, 0x20	; 32
 194:	80 93 7e 00 	sts	0x007E, r24
	
}
 198:	08 95       	ret

0000019a <get_adc_value>:

uint8_t get_adc_value()
{
	ADCSRA |= (1<<ADSC); // start conversion
 19a:	ea e7       	ldi	r30, 0x7A	; 122
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	80 64       	ori	r24, 0x40	; 64
 1a2:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
 1a4:	80 81       	ld	r24, Z
 1a6:	86 fd       	sbrc	r24, 6
 1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <get_adc_value+0xa>
	return ADC; 
 1aa:	80 91 78 00 	lds	r24, 0x0078
 1ae:	90 91 79 00 	lds	r25, 0x0079
 1b2:	08 95       	ret

000001b4 <main>:

uint8_t get_adc_value();
void ADC_init();

int main() {
	ser_init();
 1b4:	0e 94 53 00 	call	0xa6	; 0xa6 <ser_init>
	ADC_init();
 1b8:	0e 94 c3 00 	call	0x186	; 0x186 <ADC_init>
	
	DDRC &= ~(1<<5); // set only pin 0 of port C as input
 1bc:	3d 98       	cbi	0x07, 5	; 7
	
	while(1){
		Volt = get_adc_value() * 0.0048828125;
		ADCRes = (Volt - 0.5) * 100;
		itoa(ADCRes, ADCOut, 10);
 1be:	c6 e1       	ldi	r28, 0x16	; 22
 1c0:	d1 e0       	ldi	r29, 0x01	; 1
		ser_write("Temperatuur: "); ser_writeln(ADCOut);
 1c2:	00 e0       	ldi	r16, 0x00	; 0
 1c4:	11 e0       	ldi	r17, 0x01	; 1
	ADC_init();
	
	DDRC &= ~(1<<5); // set only pin 0 of port C as input
	
	while(1){
		Volt = get_adc_value() * 0.0048828125;
 1c6:	0e 94 cd 00 	call	0x19a	; 0x19a <get_adc_value>
 1ca:	68 2f       	mov	r22, r24
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__floatsisf>
 1d6:	20 e0       	ldi	r18, 0x00	; 0
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	40 ea       	ldi	r20, 0xA0	; 160
 1dc:	5b e3       	ldi	r21, 0x3B	; 59
 1de:	0e 94 66 02 	call	0x4cc	; 0x4cc <__mulsf3>
 1e2:	26 2f       	mov	r18, r22
 1e4:	37 2f       	mov	r19, r23
 1e6:	f8 2f       	mov	r31, r24
 1e8:	e9 2f       	mov	r30, r25
 1ea:	46 2f       	mov	r20, r22
 1ec:	57 2f       	mov	r21, r23
 1ee:	68 2f       	mov	r22, r24
 1f0:	79 2f       	mov	r23, r25
 1f2:	40 93 0e 01 	sts	0x010E, r20
 1f6:	50 93 0f 01 	sts	0x010F, r21
 1fa:	60 93 10 01 	sts	0x0110, r22
 1fe:	70 93 11 01 	sts	0x0111, r23
		ADCRes = (Volt - 0.5) * 100;
 202:	82 2f       	mov	r24, r18
 204:	93 2f       	mov	r25, r19
 206:	af 2f       	mov	r26, r31
 208:	be 2f       	mov	r27, r30
 20a:	bc 01       	movw	r22, r24
 20c:	cd 01       	movw	r24, r26
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	40 e0       	ldi	r20, 0x00	; 0
 214:	5f e3       	ldi	r21, 0x3F	; 63
 216:	0e 94 42 01 	call	0x284	; 0x284 <__subsf3>
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	48 ec       	ldi	r20, 0xC8	; 200
 220:	52 e4       	ldi	r21, 0x42	; 66
 222:	0e 94 66 02 	call	0x4cc	; 0x4cc <__mulsf3>
 226:	26 2f       	mov	r18, r22
 228:	37 2f       	mov	r19, r23
 22a:	f8 2f       	mov	r31, r24
 22c:	e9 2f       	mov	r30, r25
 22e:	46 2f       	mov	r20, r22
 230:	57 2f       	mov	r21, r23
 232:	68 2f       	mov	r22, r24
 234:	79 2f       	mov	r23, r25
 236:	40 93 2e 01 	sts	0x012E, r20
 23a:	50 93 2f 01 	sts	0x012F, r21
 23e:	60 93 30 01 	sts	0x0130, r22
 242:	70 93 31 01 	sts	0x0131, r23
		itoa(ADCRes, ADCOut, 10);
 246:	82 2f       	mov	r24, r18
 248:	93 2f       	mov	r25, r19
 24a:	af 2f       	mov	r26, r31
 24c:	be 2f       	mov	r27, r30
 24e:	bc 01       	movw	r22, r24
 250:	cd 01       	movw	r24, r26
 252:	0e 94 a7 01 	call	0x34e	; 0x34e <__fixsfsi>
 256:	dc 01       	movw	r26, r24
 258:	cb 01       	movw	r24, r22
 25a:	be 01       	movw	r22, r28
 25c:	4a e0       	ldi	r20, 0x0A	; 10
 25e:	50 e0       	ldi	r21, 0x00	; 0
 260:	0e 94 c9 02 	call	0x592	; 0x592 <itoa>
		ser_write("Temperatuur: "); ser_writeln(ADCOut);
 264:	c8 01       	movw	r24, r16
 266:	0e 94 71 00 	call	0xe2	; 0xe2 <ser_write>
 26a:	ce 01       	movw	r24, r28
 26c:	0e 94 80 00 	call	0x100	; 0x100 <ser_writeln>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 270:	8f ef       	ldi	r24, 0xFF	; 255
 272:	93 ed       	ldi	r25, 0xD3	; 211
 274:	a0 e3       	ldi	r26, 0x30	; 48
 276:	81 50       	subi	r24, 0x01	; 1
 278:	90 40       	sbci	r25, 0x00	; 0
 27a:	a0 40       	sbci	r26, 0x00	; 0
 27c:	e1 f7       	brne	.-8      	; 0x276 <main+0xc2>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <main+0xcc>
 280:	00 00       	nop
 282:	a1 cf       	rjmp	.-190    	; 0x1c6 <main+0x12>

00000284 <__subsf3>:
 284:	50 58       	subi	r21, 0x80	; 128

00000286 <__addsf3>:
 286:	bb 27       	eor	r27, r27
 288:	aa 27       	eor	r26, r26
 28a:	0e d0       	rcall	.+28     	; 0x2a8 <__addsf3x>
 28c:	e5 c0       	rjmp	.+458    	; 0x458 <__fp_round>
 28e:	d6 d0       	rcall	.+428    	; 0x43c <__fp_pscA>
 290:	30 f0       	brcs	.+12     	; 0x29e <__addsf3+0x18>
 292:	db d0       	rcall	.+438    	; 0x44a <__fp_pscB>
 294:	20 f0       	brcs	.+8      	; 0x29e <__addsf3+0x18>
 296:	31 f4       	brne	.+12     	; 0x2a4 <__addsf3+0x1e>
 298:	9f 3f       	cpi	r25, 0xFF	; 255
 29a:	11 f4       	brne	.+4      	; 0x2a0 <__addsf3+0x1a>
 29c:	1e f4       	brtc	.+6      	; 0x2a4 <__addsf3+0x1e>
 29e:	cb c0       	rjmp	.+406    	; 0x436 <__fp_nan>
 2a0:	0e f4       	brtc	.+2      	; 0x2a4 <__addsf3+0x1e>
 2a2:	e0 95       	com	r30
 2a4:	e7 fb       	bst	r30, 7
 2a6:	c1 c0       	rjmp	.+386    	; 0x42a <__fp_inf>

000002a8 <__addsf3x>:
 2a8:	e9 2f       	mov	r30, r25
 2aa:	e7 d0       	rcall	.+462    	; 0x47a <__fp_split3>
 2ac:	80 f3       	brcs	.-32     	; 0x28e <__addsf3+0x8>
 2ae:	ba 17       	cp	r27, r26
 2b0:	62 07       	cpc	r22, r18
 2b2:	73 07       	cpc	r23, r19
 2b4:	84 07       	cpc	r24, r20
 2b6:	95 07       	cpc	r25, r21
 2b8:	18 f0       	brcs	.+6      	; 0x2c0 <__addsf3x+0x18>
 2ba:	71 f4       	brne	.+28     	; 0x2d8 <__addsf3x+0x30>
 2bc:	9e f5       	brtc	.+102    	; 0x324 <__addsf3x+0x7c>
 2be:	ff c0       	rjmp	.+510    	; 0x4be <__fp_zero>
 2c0:	0e f4       	brtc	.+2      	; 0x2c4 <__addsf3x+0x1c>
 2c2:	e0 95       	com	r30
 2c4:	0b 2e       	mov	r0, r27
 2c6:	ba 2f       	mov	r27, r26
 2c8:	a0 2d       	mov	r26, r0
 2ca:	0b 01       	movw	r0, r22
 2cc:	b9 01       	movw	r22, r18
 2ce:	90 01       	movw	r18, r0
 2d0:	0c 01       	movw	r0, r24
 2d2:	ca 01       	movw	r24, r20
 2d4:	a0 01       	movw	r20, r0
 2d6:	11 24       	eor	r1, r1
 2d8:	ff 27       	eor	r31, r31
 2da:	59 1b       	sub	r21, r25
 2dc:	99 f0       	breq	.+38     	; 0x304 <__addsf3x+0x5c>
 2de:	59 3f       	cpi	r21, 0xF9	; 249
 2e0:	50 f4       	brcc	.+20     	; 0x2f6 <__addsf3x+0x4e>
 2e2:	50 3e       	cpi	r21, 0xE0	; 224
 2e4:	68 f1       	brcs	.+90     	; 0x340 <__addsf3x+0x98>
 2e6:	1a 16       	cp	r1, r26
 2e8:	f0 40       	sbci	r31, 0x00	; 0
 2ea:	a2 2f       	mov	r26, r18
 2ec:	23 2f       	mov	r18, r19
 2ee:	34 2f       	mov	r19, r20
 2f0:	44 27       	eor	r20, r20
 2f2:	58 5f       	subi	r21, 0xF8	; 248
 2f4:	f3 cf       	rjmp	.-26     	; 0x2dc <__addsf3x+0x34>
 2f6:	46 95       	lsr	r20
 2f8:	37 95       	ror	r19
 2fa:	27 95       	ror	r18
 2fc:	a7 95       	ror	r26
 2fe:	f0 40       	sbci	r31, 0x00	; 0
 300:	53 95       	inc	r21
 302:	c9 f7       	brne	.-14     	; 0x2f6 <__addsf3x+0x4e>
 304:	7e f4       	brtc	.+30     	; 0x324 <__addsf3x+0x7c>
 306:	1f 16       	cp	r1, r31
 308:	ba 0b       	sbc	r27, r26
 30a:	62 0b       	sbc	r22, r18
 30c:	73 0b       	sbc	r23, r19
 30e:	84 0b       	sbc	r24, r20
 310:	ba f0       	brmi	.+46     	; 0x340 <__addsf3x+0x98>
 312:	91 50       	subi	r25, 0x01	; 1
 314:	a1 f0       	breq	.+40     	; 0x33e <__addsf3x+0x96>
 316:	ff 0f       	add	r31, r31
 318:	bb 1f       	adc	r27, r27
 31a:	66 1f       	adc	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	88 1f       	adc	r24, r24
 320:	c2 f7       	brpl	.-16     	; 0x312 <__addsf3x+0x6a>
 322:	0e c0       	rjmp	.+28     	; 0x340 <__addsf3x+0x98>
 324:	ba 0f       	add	r27, r26
 326:	62 1f       	adc	r22, r18
 328:	73 1f       	adc	r23, r19
 32a:	84 1f       	adc	r24, r20
 32c:	48 f4       	brcc	.+18     	; 0x340 <__addsf3x+0x98>
 32e:	87 95       	ror	r24
 330:	77 95       	ror	r23
 332:	67 95       	ror	r22
 334:	b7 95       	ror	r27
 336:	f7 95       	ror	r31
 338:	9e 3f       	cpi	r25, 0xFE	; 254
 33a:	08 f0       	brcs	.+2      	; 0x33e <__addsf3x+0x96>
 33c:	b3 cf       	rjmp	.-154    	; 0x2a4 <__addsf3+0x1e>
 33e:	93 95       	inc	r25
 340:	88 0f       	add	r24, r24
 342:	08 f0       	brcs	.+2      	; 0x346 <__addsf3x+0x9e>
 344:	99 27       	eor	r25, r25
 346:	ee 0f       	add	r30, r30
 348:	97 95       	ror	r25
 34a:	87 95       	ror	r24
 34c:	08 95       	ret

0000034e <__fixsfsi>:
 34e:	04 d0       	rcall	.+8      	; 0x358 <__fixunssfsi>
 350:	68 94       	set
 352:	b1 11       	cpse	r27, r1
 354:	b5 c0       	rjmp	.+362    	; 0x4c0 <__fp_szero>
 356:	08 95       	ret

00000358 <__fixunssfsi>:
 358:	98 d0       	rcall	.+304    	; 0x48a <__fp_splitA>
 35a:	88 f0       	brcs	.+34     	; 0x37e <__fixunssfsi+0x26>
 35c:	9f 57       	subi	r25, 0x7F	; 127
 35e:	90 f0       	brcs	.+36     	; 0x384 <__fixunssfsi+0x2c>
 360:	b9 2f       	mov	r27, r25
 362:	99 27       	eor	r25, r25
 364:	b7 51       	subi	r27, 0x17	; 23
 366:	a0 f0       	brcs	.+40     	; 0x390 <__fixunssfsi+0x38>
 368:	d1 f0       	breq	.+52     	; 0x39e <__fixunssfsi+0x46>
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	88 1f       	adc	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	1a f0       	brmi	.+6      	; 0x37a <__fixunssfsi+0x22>
 374:	ba 95       	dec	r27
 376:	c9 f7       	brne	.-14     	; 0x36a <__fixunssfsi+0x12>
 378:	12 c0       	rjmp	.+36     	; 0x39e <__fixunssfsi+0x46>
 37a:	b1 30       	cpi	r27, 0x01	; 1
 37c:	81 f0       	breq	.+32     	; 0x39e <__fixunssfsi+0x46>
 37e:	9f d0       	rcall	.+318    	; 0x4be <__fp_zero>
 380:	b1 e0       	ldi	r27, 0x01	; 1
 382:	08 95       	ret
 384:	9c c0       	rjmp	.+312    	; 0x4be <__fp_zero>
 386:	67 2f       	mov	r22, r23
 388:	78 2f       	mov	r23, r24
 38a:	88 27       	eor	r24, r24
 38c:	b8 5f       	subi	r27, 0xF8	; 248
 38e:	39 f0       	breq	.+14     	; 0x39e <__fixunssfsi+0x46>
 390:	b9 3f       	cpi	r27, 0xF9	; 249
 392:	cc f3       	brlt	.-14     	; 0x386 <__fixunssfsi+0x2e>
 394:	86 95       	lsr	r24
 396:	77 95       	ror	r23
 398:	67 95       	ror	r22
 39a:	b3 95       	inc	r27
 39c:	d9 f7       	brne	.-10     	; 0x394 <__fixunssfsi+0x3c>
 39e:	3e f4       	brtc	.+14     	; 0x3ae <__fixunssfsi+0x56>
 3a0:	90 95       	com	r25
 3a2:	80 95       	com	r24
 3a4:	70 95       	com	r23
 3a6:	61 95       	neg	r22
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	8f 4f       	sbci	r24, 0xFF	; 255
 3ac:	9f 4f       	sbci	r25, 0xFF	; 255
 3ae:	08 95       	ret

000003b0 <__floatunsisf>:
 3b0:	e8 94       	clt
 3b2:	09 c0       	rjmp	.+18     	; 0x3c6 <__floatsisf+0x12>

000003b4 <__floatsisf>:
 3b4:	97 fb       	bst	r25, 7
 3b6:	3e f4       	brtc	.+14     	; 0x3c6 <__floatsisf+0x12>
 3b8:	90 95       	com	r25
 3ba:	80 95       	com	r24
 3bc:	70 95       	com	r23
 3be:	61 95       	neg	r22
 3c0:	7f 4f       	sbci	r23, 0xFF	; 255
 3c2:	8f 4f       	sbci	r24, 0xFF	; 255
 3c4:	9f 4f       	sbci	r25, 0xFF	; 255
 3c6:	99 23       	and	r25, r25
 3c8:	a9 f0       	breq	.+42     	; 0x3f4 <__floatsisf+0x40>
 3ca:	f9 2f       	mov	r31, r25
 3cc:	96 e9       	ldi	r25, 0x96	; 150
 3ce:	bb 27       	eor	r27, r27
 3d0:	93 95       	inc	r25
 3d2:	f6 95       	lsr	r31
 3d4:	87 95       	ror	r24
 3d6:	77 95       	ror	r23
 3d8:	67 95       	ror	r22
 3da:	b7 95       	ror	r27
 3dc:	f1 11       	cpse	r31, r1
 3de:	f8 cf       	rjmp	.-16     	; 0x3d0 <__floatsisf+0x1c>
 3e0:	fa f4       	brpl	.+62     	; 0x420 <__floatsisf+0x6c>
 3e2:	bb 0f       	add	r27, r27
 3e4:	11 f4       	brne	.+4      	; 0x3ea <__floatsisf+0x36>
 3e6:	60 ff       	sbrs	r22, 0
 3e8:	1b c0       	rjmp	.+54     	; 0x420 <__floatsisf+0x6c>
 3ea:	6f 5f       	subi	r22, 0xFF	; 255
 3ec:	7f 4f       	sbci	r23, 0xFF	; 255
 3ee:	8f 4f       	sbci	r24, 0xFF	; 255
 3f0:	9f 4f       	sbci	r25, 0xFF	; 255
 3f2:	16 c0       	rjmp	.+44     	; 0x420 <__floatsisf+0x6c>
 3f4:	88 23       	and	r24, r24
 3f6:	11 f0       	breq	.+4      	; 0x3fc <__floatsisf+0x48>
 3f8:	96 e9       	ldi	r25, 0x96	; 150
 3fa:	11 c0       	rjmp	.+34     	; 0x41e <__floatsisf+0x6a>
 3fc:	77 23       	and	r23, r23
 3fe:	21 f0       	breq	.+8      	; 0x408 <__floatsisf+0x54>
 400:	9e e8       	ldi	r25, 0x8E	; 142
 402:	87 2f       	mov	r24, r23
 404:	76 2f       	mov	r23, r22
 406:	05 c0       	rjmp	.+10     	; 0x412 <__floatsisf+0x5e>
 408:	66 23       	and	r22, r22
 40a:	71 f0       	breq	.+28     	; 0x428 <__floatsisf+0x74>
 40c:	96 e8       	ldi	r25, 0x86	; 134
 40e:	86 2f       	mov	r24, r22
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	2a f0       	brmi	.+10     	; 0x420 <__floatsisf+0x6c>
 416:	9a 95       	dec	r25
 418:	66 0f       	add	r22, r22
 41a:	77 1f       	adc	r23, r23
 41c:	88 1f       	adc	r24, r24
 41e:	da f7       	brpl	.-10     	; 0x416 <__floatsisf+0x62>
 420:	88 0f       	add	r24, r24
 422:	96 95       	lsr	r25
 424:	87 95       	ror	r24
 426:	97 f9       	bld	r25, 7
 428:	08 95       	ret

0000042a <__fp_inf>:
 42a:	97 f9       	bld	r25, 7
 42c:	9f 67       	ori	r25, 0x7F	; 127
 42e:	80 e8       	ldi	r24, 0x80	; 128
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	08 95       	ret

00000436 <__fp_nan>:
 436:	9f ef       	ldi	r25, 0xFF	; 255
 438:	80 ec       	ldi	r24, 0xC0	; 192
 43a:	08 95       	ret

0000043c <__fp_pscA>:
 43c:	00 24       	eor	r0, r0
 43e:	0a 94       	dec	r0
 440:	16 16       	cp	r1, r22
 442:	17 06       	cpc	r1, r23
 444:	18 06       	cpc	r1, r24
 446:	09 06       	cpc	r0, r25
 448:	08 95       	ret

0000044a <__fp_pscB>:
 44a:	00 24       	eor	r0, r0
 44c:	0a 94       	dec	r0
 44e:	12 16       	cp	r1, r18
 450:	13 06       	cpc	r1, r19
 452:	14 06       	cpc	r1, r20
 454:	05 06       	cpc	r0, r21
 456:	08 95       	ret

00000458 <__fp_round>:
 458:	09 2e       	mov	r0, r25
 45a:	03 94       	inc	r0
 45c:	00 0c       	add	r0, r0
 45e:	11 f4       	brne	.+4      	; 0x464 <__fp_round+0xc>
 460:	88 23       	and	r24, r24
 462:	52 f0       	brmi	.+20     	; 0x478 <__fp_round+0x20>
 464:	bb 0f       	add	r27, r27
 466:	40 f4       	brcc	.+16     	; 0x478 <__fp_round+0x20>
 468:	bf 2b       	or	r27, r31
 46a:	11 f4       	brne	.+4      	; 0x470 <__fp_round+0x18>
 46c:	60 ff       	sbrs	r22, 0
 46e:	04 c0       	rjmp	.+8      	; 0x478 <__fp_round+0x20>
 470:	6f 5f       	subi	r22, 0xFF	; 255
 472:	7f 4f       	sbci	r23, 0xFF	; 255
 474:	8f 4f       	sbci	r24, 0xFF	; 255
 476:	9f 4f       	sbci	r25, 0xFF	; 255
 478:	08 95       	ret

0000047a <__fp_split3>:
 47a:	57 fd       	sbrc	r21, 7
 47c:	90 58       	subi	r25, 0x80	; 128
 47e:	44 0f       	add	r20, r20
 480:	55 1f       	adc	r21, r21
 482:	59 f0       	breq	.+22     	; 0x49a <__fp_splitA+0x10>
 484:	5f 3f       	cpi	r21, 0xFF	; 255
 486:	71 f0       	breq	.+28     	; 0x4a4 <__fp_splitA+0x1a>
 488:	47 95       	ror	r20

0000048a <__fp_splitA>:
 48a:	88 0f       	add	r24, r24
 48c:	97 fb       	bst	r25, 7
 48e:	99 1f       	adc	r25, r25
 490:	61 f0       	breq	.+24     	; 0x4aa <__fp_splitA+0x20>
 492:	9f 3f       	cpi	r25, 0xFF	; 255
 494:	79 f0       	breq	.+30     	; 0x4b4 <__fp_splitA+0x2a>
 496:	87 95       	ror	r24
 498:	08 95       	ret
 49a:	12 16       	cp	r1, r18
 49c:	13 06       	cpc	r1, r19
 49e:	14 06       	cpc	r1, r20
 4a0:	55 1f       	adc	r21, r21
 4a2:	f2 cf       	rjmp	.-28     	; 0x488 <__fp_split3+0xe>
 4a4:	46 95       	lsr	r20
 4a6:	f1 df       	rcall	.-30     	; 0x48a <__fp_splitA>
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__fp_splitA+0x30>
 4aa:	16 16       	cp	r1, r22
 4ac:	17 06       	cpc	r1, r23
 4ae:	18 06       	cpc	r1, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	f1 cf       	rjmp	.-30     	; 0x496 <__fp_splitA+0xc>
 4b4:	86 95       	lsr	r24
 4b6:	71 05       	cpc	r23, r1
 4b8:	61 05       	cpc	r22, r1
 4ba:	08 94       	sec
 4bc:	08 95       	ret

000004be <__fp_zero>:
 4be:	e8 94       	clt

000004c0 <__fp_szero>:
 4c0:	bb 27       	eor	r27, r27
 4c2:	66 27       	eor	r22, r22
 4c4:	77 27       	eor	r23, r23
 4c6:	cb 01       	movw	r24, r22
 4c8:	97 f9       	bld	r25, 7
 4ca:	08 95       	ret

000004cc <__mulsf3>:
 4cc:	0b d0       	rcall	.+22     	; 0x4e4 <__mulsf3x>
 4ce:	c4 cf       	rjmp	.-120    	; 0x458 <__fp_round>
 4d0:	b5 df       	rcall	.-150    	; 0x43c <__fp_pscA>
 4d2:	28 f0       	brcs	.+10     	; 0x4de <__mulsf3+0x12>
 4d4:	ba df       	rcall	.-140    	; 0x44a <__fp_pscB>
 4d6:	18 f0       	brcs	.+6      	; 0x4de <__mulsf3+0x12>
 4d8:	95 23       	and	r25, r21
 4da:	09 f0       	breq	.+2      	; 0x4de <__mulsf3+0x12>
 4dc:	a6 cf       	rjmp	.-180    	; 0x42a <__fp_inf>
 4de:	ab cf       	rjmp	.-170    	; 0x436 <__fp_nan>
 4e0:	11 24       	eor	r1, r1
 4e2:	ee cf       	rjmp	.-36     	; 0x4c0 <__fp_szero>

000004e4 <__mulsf3x>:
 4e4:	ca df       	rcall	.-108    	; 0x47a <__fp_split3>
 4e6:	a0 f3       	brcs	.-24     	; 0x4d0 <__mulsf3+0x4>

000004e8 <__mulsf3_pse>:
 4e8:	95 9f       	mul	r25, r21
 4ea:	d1 f3       	breq	.-12     	; 0x4e0 <__mulsf3+0x14>
 4ec:	95 0f       	add	r25, r21
 4ee:	50 e0       	ldi	r21, 0x00	; 0
 4f0:	55 1f       	adc	r21, r21
 4f2:	62 9f       	mul	r22, r18
 4f4:	f0 01       	movw	r30, r0
 4f6:	72 9f       	mul	r23, r18
 4f8:	bb 27       	eor	r27, r27
 4fa:	f0 0d       	add	r31, r0
 4fc:	b1 1d       	adc	r27, r1
 4fe:	63 9f       	mul	r22, r19
 500:	aa 27       	eor	r26, r26
 502:	f0 0d       	add	r31, r0
 504:	b1 1d       	adc	r27, r1
 506:	aa 1f       	adc	r26, r26
 508:	64 9f       	mul	r22, r20
 50a:	66 27       	eor	r22, r22
 50c:	b0 0d       	add	r27, r0
 50e:	a1 1d       	adc	r26, r1
 510:	66 1f       	adc	r22, r22
 512:	82 9f       	mul	r24, r18
 514:	22 27       	eor	r18, r18
 516:	b0 0d       	add	r27, r0
 518:	a1 1d       	adc	r26, r1
 51a:	62 1f       	adc	r22, r18
 51c:	73 9f       	mul	r23, r19
 51e:	b0 0d       	add	r27, r0
 520:	a1 1d       	adc	r26, r1
 522:	62 1f       	adc	r22, r18
 524:	83 9f       	mul	r24, r19
 526:	a0 0d       	add	r26, r0
 528:	61 1d       	adc	r22, r1
 52a:	22 1f       	adc	r18, r18
 52c:	74 9f       	mul	r23, r20
 52e:	33 27       	eor	r19, r19
 530:	a0 0d       	add	r26, r0
 532:	61 1d       	adc	r22, r1
 534:	23 1f       	adc	r18, r19
 536:	84 9f       	mul	r24, r20
 538:	60 0d       	add	r22, r0
 53a:	21 1d       	adc	r18, r1
 53c:	82 2f       	mov	r24, r18
 53e:	76 2f       	mov	r23, r22
 540:	6a 2f       	mov	r22, r26
 542:	11 24       	eor	r1, r1
 544:	9f 57       	subi	r25, 0x7F	; 127
 546:	50 40       	sbci	r21, 0x00	; 0
 548:	8a f0       	brmi	.+34     	; 0x56c <__mulsf3_pse+0x84>
 54a:	e1 f0       	breq	.+56     	; 0x584 <__mulsf3_pse+0x9c>
 54c:	88 23       	and	r24, r24
 54e:	4a f0       	brmi	.+18     	; 0x562 <__mulsf3_pse+0x7a>
 550:	ee 0f       	add	r30, r30
 552:	ff 1f       	adc	r31, r31
 554:	bb 1f       	adc	r27, r27
 556:	66 1f       	adc	r22, r22
 558:	77 1f       	adc	r23, r23
 55a:	88 1f       	adc	r24, r24
 55c:	91 50       	subi	r25, 0x01	; 1
 55e:	50 40       	sbci	r21, 0x00	; 0
 560:	a9 f7       	brne	.-22     	; 0x54c <__mulsf3_pse+0x64>
 562:	9e 3f       	cpi	r25, 0xFE	; 254
 564:	51 05       	cpc	r21, r1
 566:	70 f0       	brcs	.+28     	; 0x584 <__mulsf3_pse+0x9c>
 568:	60 cf       	rjmp	.-320    	; 0x42a <__fp_inf>
 56a:	aa cf       	rjmp	.-172    	; 0x4c0 <__fp_szero>
 56c:	5f 3f       	cpi	r21, 0xFF	; 255
 56e:	ec f3       	brlt	.-6      	; 0x56a <__mulsf3_pse+0x82>
 570:	98 3e       	cpi	r25, 0xE8	; 232
 572:	dc f3       	brlt	.-10     	; 0x56a <__mulsf3_pse+0x82>
 574:	86 95       	lsr	r24
 576:	77 95       	ror	r23
 578:	67 95       	ror	r22
 57a:	b7 95       	ror	r27
 57c:	f7 95       	ror	r31
 57e:	e7 95       	ror	r30
 580:	9f 5f       	subi	r25, 0xFF	; 255
 582:	c1 f7       	brne	.-16     	; 0x574 <__mulsf3_pse+0x8c>
 584:	fe 2b       	or	r31, r30
 586:	88 0f       	add	r24, r24
 588:	91 1d       	adc	r25, r1
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret

00000592 <itoa>:
 592:	fb 01       	movw	r30, r22
 594:	9f 01       	movw	r18, r30
 596:	e8 94       	clt
 598:	42 30       	cpi	r20, 0x02	; 2
 59a:	c4 f0       	brlt	.+48     	; 0x5cc <itoa+0x3a>
 59c:	45 32       	cpi	r20, 0x25	; 37
 59e:	b4 f4       	brge	.+44     	; 0x5cc <itoa+0x3a>
 5a0:	4a 30       	cpi	r20, 0x0A	; 10
 5a2:	29 f4       	brne	.+10     	; 0x5ae <itoa+0x1c>
 5a4:	97 fb       	bst	r25, 7
 5a6:	1e f4       	brtc	.+6      	; 0x5ae <itoa+0x1c>
 5a8:	90 95       	com	r25
 5aa:	81 95       	neg	r24
 5ac:	9f 4f       	sbci	r25, 0xFF	; 255
 5ae:	64 2f       	mov	r22, r20
 5b0:	77 27       	eor	r23, r23
 5b2:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__udivmodhi4>
 5b6:	80 5d       	subi	r24, 0xD0	; 208
 5b8:	8a 33       	cpi	r24, 0x3A	; 58
 5ba:	0c f0       	brlt	.+2      	; 0x5be <itoa+0x2c>
 5bc:	89 5d       	subi	r24, 0xD9	; 217
 5be:	81 93       	st	Z+, r24
 5c0:	cb 01       	movw	r24, r22
 5c2:	00 97       	sbiw	r24, 0x00	; 0
 5c4:	a1 f7       	brne	.-24     	; 0x5ae <itoa+0x1c>
 5c6:	16 f4       	brtc	.+4      	; 0x5cc <itoa+0x3a>
 5c8:	5d e2       	ldi	r21, 0x2D	; 45
 5ca:	51 93       	st	Z+, r21
 5cc:	10 82       	st	Z, r1
 5ce:	c9 01       	movw	r24, r18
 5d0:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <strrev>

000005d4 <strrev>:
 5d4:	dc 01       	movw	r26, r24
 5d6:	fc 01       	movw	r30, r24
 5d8:	67 2f       	mov	r22, r23
 5da:	71 91       	ld	r23, Z+
 5dc:	77 23       	and	r23, r23
 5de:	e1 f7       	brne	.-8      	; 0x5d8 <strrev+0x4>
 5e0:	32 97       	sbiw	r30, 0x02	; 2
 5e2:	04 c0       	rjmp	.+8      	; 0x5ec <strrev+0x18>
 5e4:	7c 91       	ld	r23, X
 5e6:	6d 93       	st	X+, r22
 5e8:	70 83       	st	Z, r23
 5ea:	62 91       	ld	r22, -Z
 5ec:	ae 17       	cp	r26, r30
 5ee:	bf 07       	cpc	r27, r31
 5f0:	c8 f3       	brcs	.-14     	; 0x5e4 <strrev+0x10>
 5f2:	08 95       	ret

000005f4 <__udivmodhi4>:
 5f4:	aa 1b       	sub	r26, r26
 5f6:	bb 1b       	sub	r27, r27
 5f8:	51 e1       	ldi	r21, 0x11	; 17
 5fa:	07 c0       	rjmp	.+14     	; 0x60a <__udivmodhi4_ep>

000005fc <__udivmodhi4_loop>:
 5fc:	aa 1f       	adc	r26, r26
 5fe:	bb 1f       	adc	r27, r27
 600:	a6 17       	cp	r26, r22
 602:	b7 07       	cpc	r27, r23
 604:	10 f0       	brcs	.+4      	; 0x60a <__udivmodhi4_ep>
 606:	a6 1b       	sub	r26, r22
 608:	b7 0b       	sbc	r27, r23

0000060a <__udivmodhi4_ep>:
 60a:	88 1f       	adc	r24, r24
 60c:	99 1f       	adc	r25, r25
 60e:	5a 95       	dec	r21
 610:	a9 f7       	brne	.-22     	; 0x5fc <__udivmodhi4_loop>
 612:	80 95       	com	r24
 614:	90 95       	com	r25
 616:	bc 01       	movw	r22, r24
 618:	cd 01       	movw	r24, r26
 61a:	08 95       	ret

0000061c <_exit>:
 61c:	f8 94       	cli

0000061e <__stop_program>:
 61e:	ff cf       	rjmp	.-2      	; 0x61e <__stop_program>
