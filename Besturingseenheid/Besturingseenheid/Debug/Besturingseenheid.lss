
Besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800100  00000d78  00000e0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800174  00800174  00000e80  2**0
                  ALLOC
  3 .stab         00002454  00000000  00000000  00000e80  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007de  00000000  00000000  000032d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00003ab8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000141f  00000000  00000000  00003c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000895  00000000  00000000  00005077  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d18  00000000  00000000  0000590c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d4  00000000  00000000  00006624  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ec  00000000  00000000  000068f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e0  00000000  00000000  00006ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000076c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e7       	ldi	r30, 0x78	; 120
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 37       	cpi	r26, 0x74	; 116
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a4 e7       	ldi	r26, 0x74	; 116
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 39       	cpi	r26, 0x9D	; 157
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  9e:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:

void ADC_init()
{
	//ref = vcc, left adjust the result (8 bit resolution)
	// select channel 0 (PC0 = input)
	ADMUX |= (1<<REFS0) | (1<<ADLAR);
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 66       	ori	r24, 0x60	; 96
  ae:	80 83       	st	Z, r24
	// enable the ADC & prescale = 128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
  b0:	87 e8       	ldi	r24, 0x87	; 135
  b2:	80 93 7a 00 	sts	0x007A, r24
	DIDR0 = (1<<ADC5D); //!!Disables pin 5? not sure what it does atm
  b6:	80 e2       	ldi	r24, 0x20	; 32
  b8:	80 93 7e 00 	sts	0x007E, r24
	
}
  bc:	08 95       	ret

000000be <get_adc_value>:

uint8_t get_adc_value(uint8_t inputPin)
{
	ADCSRA |= (1<<ADSC); // start conversion
  be:	ea e7       	ldi	r30, 0x7A	; 122
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
  c8:	80 81       	ld	r24, Z
  ca:	86 fd       	sbrc	r24, 6
  cc:	fd cf       	rjmp	.-6      	; 0xc8 <get_adc_value+0xa>
	return ADCH; // 8bit resolution, left adjusted
  ce:	80 91 79 00 	lds	r24, 0x0079
	else{
		ADCSRA |= (1<<ADSC); // start conversion
		loop_until_bit_is_clear(ADCSRA, ADSC);
		return ADCH; // 8bit resolution, left adjusted
	}*/	
}
  d2:	08 95       	ret

000000d4 <get_temp_adc>:

uint8_t get_temp_adc(){
	ADCSRA |= (1<<ADSC); // start conversion
  d4:	ea e7       	ldi	r30, 0x7A	; 122
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
  de:	80 81       	ld	r24, Z
  e0:	86 fd       	sbrc	r24, 6
  e2:	fd cf       	rjmp	.-6      	; 0xde <get_temp_adc+0xa>
	return ADC;
  e4:	80 91 78 00 	lds	r24, 0x0078
  e8:	90 91 79 00 	lds	r25, 0x0079
}
  ec:	08 95       	ret

000000ee <get_licht_adc>:

uint8_t get_licht_adc(){
	ADCSRA |= (1<<ADSC); // start conversion
  ee:	ea e7       	ldi	r30, 0x7A	; 122
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	80 64       	ori	r24, 0x40	; 64
  f6:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
  f8:	80 81       	ld	r24, Z
  fa:	86 fd       	sbrc	r24, 6
  fc:	fd cf       	rjmp	.-6      	; 0xf8 <get_licht_adc+0xa>
	return ADCH; // 8bit resolution, left adjusted
  fe:	80 91 79 00 	lds	r24, 0x0079
 102:	08 95       	ret

00000104 <init_timer>:
	return temp;
}

void init_timer (void){
	//8bittimer
	TCCR0A = (1<< WGM01); // set CTC Bit
 104:	82 e0       	ldi	r24, 0x02	; 2
 106:	84 bd       	out	0x24, r24	; 36
	OCR0A = 156; // Dit geeft 1/10 miliseconde
 108:	9c e9       	ldi	r25, 0x9C	; 156
 10a:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = (1<< OCIE0A);
 10c:	80 93 6e 00 	sts	0x006E, r24
	
	TCCR0B |= (1 << CS02) | (1 <<CS00); // start at 1024 prescaler
 110:	85 b5       	in	r24, 0x25	; 37
 112:	85 60       	ori	r24, 0x05	; 5
 114:	85 bd       	out	0x25, r24	; 37
	
}
 116:	08 95       	ret

00000118 <main>:
volatile uint8_t i = 0;
volatile int extraTime = 0;

int main()
{
	init_timer();
 118:	0e 94 82 00 	call	0x104	; 0x104 <init_timer>
	ser_init();
 11c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <ser_init>
	ADC_init();
 120:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	sei(); // set external interrupt
 124:	78 94       	sei
	  
	printf("An interrupt should be occuring every 1 seconds\n");
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	0e 94 b3 03 	call	0x766	; 0x766 <puts>
 12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0x16>

00000130 <getTemp>:
}

uint8_t getTemp(){
	//uint8_t temp = ADCOut;
	//uint8_t temp = get_adc_value(PC1);
	uint8_t temp = get_temp_adc();
 130:	0e 94 6a 00 	call	0xd4	; 0xd4 <get_temp_adc>
	return temp;
}
 134:	08 95       	ret

00000136 <getLight>:

uint8_t getLight(){
	//uint8_t temp = get_adc_value(PC0);
	uint8_t temp = get_licht_adc();
 136:	0e 94 77 00 	call	0xee	; 0xee <get_licht_adc>
	return temp;
}
 13a:	08 95       	ret

0000013c <__vector_14>:

/*
Timerinterrupt geeft om de 1* seconden een interrupt
https://eleccelerator.com/avr-timer-calculator/
*/
ISR(TIMER0_COMPA_vect){
 13c:	1f 92       	push	r1
 13e:	0f 92       	push	r0
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	0f 92       	push	r0
 144:	11 24       	eor	r1, r1
 146:	2f 93       	push	r18
 148:	3f 93       	push	r19
 14a:	4f 93       	push	r20
 14c:	5f 93       	push	r21
 14e:	6f 93       	push	r22
 150:	7f 93       	push	r23
 152:	8f 93       	push	r24
 154:	9f 93       	push	r25
 156:	af 93       	push	r26
 158:	bf 93       	push	r27
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	ef 93       	push	r30
 160:	ff 93       	push	r31
	
	extraTime++;
 162:	80 91 74 01 	lds	r24, 0x0174
 166:	90 91 75 01 	lds	r25, 0x0175
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	90 93 75 01 	sts	0x0175, r25
 170:	80 93 74 01 	sts	0x0174, r24
	
	if(extraTime>100){
 174:	80 91 74 01 	lds	r24, 0x0174
 178:	90 91 75 01 	lds	r25, 0x0175
 17c:	85 36       	cpi	r24, 0x65	; 101
 17e:	91 05       	cpc	r25, r1
 180:	0c f4       	brge	.+2      	; 0x184 <__vector_14+0x48>
 182:	9f c0       	rjmp	.+318    	; 0x2c2 <__vector_14+0x186>
		Volt = getTemp() * 0.0048828125;
 184:	0e 94 98 00 	call	0x130	; 0x130 <getTemp>
 188:	68 2f       	mov	r22, r24
 18a:	70 e0       	ldi	r23, 0x00	; 0
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 8e 02 	call	0x51c	; 0x51c <__floatsisf>
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	40 ea       	ldi	r20, 0xA0	; 160
 19a:	5b e3       	ldi	r21, 0x3B	; 59
 19c:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 1a0:	26 2f       	mov	r18, r22
 1a2:	37 2f       	mov	r19, r23
 1a4:	f8 2f       	mov	r31, r24
 1a6:	e9 2f       	mov	r30, r25
 1a8:	46 2f       	mov	r20, r22
 1aa:	57 2f       	mov	r21, r23
 1ac:	68 2f       	mov	r22, r24
 1ae:	79 2f       	mov	r23, r25
 1b0:	40 93 77 01 	sts	0x0177, r20
 1b4:	50 93 78 01 	sts	0x0178, r21
 1b8:	60 93 79 01 	sts	0x0179, r22
 1bc:	70 93 7a 01 	sts	0x017A, r23
		ADCRes = (Volt - 0.5) * 100;
 1c0:	82 2f       	mov	r24, r18
 1c2:	93 2f       	mov	r25, r19
 1c4:	af 2f       	mov	r26, r31
 1c6:	be 2f       	mov	r27, r30
 1c8:	bc 01       	movw	r22, r24
 1ca:	cd 01       	movw	r24, r26
 1cc:	20 e0       	ldi	r18, 0x00	; 0
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	40 e0       	ldi	r20, 0x00	; 0
 1d2:	5f e3       	ldi	r21, 0x3F	; 63
 1d4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <__subsf3>
 1d8:	20 e0       	ldi	r18, 0x00	; 0
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	48 ec       	ldi	r20, 0xC8	; 200
 1de:	52 e4       	ldi	r21, 0x42	; 66
 1e0:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 1e4:	26 2f       	mov	r18, r22
 1e6:	37 2f       	mov	r19, r23
 1e8:	f8 2f       	mov	r31, r24
 1ea:	e9 2f       	mov	r30, r25
 1ec:	46 2f       	mov	r20, r22
 1ee:	57 2f       	mov	r21, r23
 1f0:	68 2f       	mov	r22, r24
 1f2:	79 2f       	mov	r23, r25
 1f4:	40 93 93 01 	sts	0x0193, r20
 1f8:	50 93 94 01 	sts	0x0194, r21
 1fc:	60 93 95 01 	sts	0x0195, r22
 200:	70 93 96 01 	sts	0x0196, r23
		itoa(ADCRes, ADCOut, 10);
 204:	82 2f       	mov	r24, r18
 206:	93 2f       	mov	r25, r19
 208:	af 2f       	mov	r26, r31
 20a:	be 2f       	mov	r27, r30
 20c:	bc 01       	movw	r22, r24
 20e:	cd 01       	movw	r24, r26
 210:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__fixsfsi>
 214:	dc 01       	movw	r26, r24
 216:	cb 01       	movw	r24, r22
 218:	cb e7       	ldi	r28, 0x7B	; 123
 21a:	d1 e0       	ldi	r29, 0x01	; 1
 21c:	be 01       	movw	r22, r28
 21e:	4a e0       	ldi	r20, 0x0A	; 10
 220:	50 e0       	ldi	r21, 0x00	; 0
 222:	0e 94 7d 03 	call	0x6fa	; 0x6fa <itoa>
		ser_write("Temperatuur: "); ser_writeln(ADCOut);
 226:	80 e3       	ldi	r24, 0x30	; 48
 228:	91 e0       	ldi	r25, 0x01	; 1
 22a:	0e 94 a4 01 	call	0x348	; 0x348 <ser_write>
 22e:	ce 01       	movw	r24, r28
 230:	0e 94 b3 01 	call	0x366	; 0x366 <ser_writeln>
		printf("%i Temperatuur=%f \n", i, ADCOut);
 234:	20 91 76 01 	lds	r18, 0x0176
 238:	00 d0       	rcall	.+0      	; 0x23a <__vector_14+0xfe>
 23a:	00 d0       	rcall	.+0      	; 0x23c <__vector_14+0x100>
 23c:	00 d0       	rcall	.+0      	; 0x23e <__vector_14+0x102>
 23e:	ed b7       	in	r30, 0x3d	; 61
 240:	fe b7       	in	r31, 0x3e	; 62
 242:	31 96       	adiw	r30, 0x01	; 1
 244:	8e e3       	ldi	r24, 0x3E	; 62
 246:	91 e0       	ldi	r25, 0x01	; 1
 248:	ad b7       	in	r26, 0x3d	; 61
 24a:	be b7       	in	r27, 0x3e	; 62
 24c:	12 96       	adiw	r26, 0x02	; 2
 24e:	9c 93       	st	X, r25
 250:	8e 93       	st	-X, r24
 252:	11 97       	sbiw	r26, 0x01	; 1
 254:	22 83       	std	Z+2, r18	; 0x02
 256:	13 82       	std	Z+3, r1	; 0x03
 258:	d5 83       	std	Z+5, r29	; 0x05
 25a:	c4 83       	std	Z+4, r28	; 0x04
 25c:	0e 94 9e 03 	call	0x73c	; 0x73c <printf>
		printf("%i intensiteit=%d\n", i, getLight());
 260:	c0 91 76 01 	lds	r28, 0x0176
 264:	8d b7       	in	r24, 0x3d	; 61
 266:	9e b7       	in	r25, 0x3e	; 62
 268:	06 96       	adiw	r24, 0x06	; 6
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	9e bf       	out	0x3e, r25	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	8d bf       	out	0x3d, r24	; 61
 274:	0e 94 9b 00 	call	0x136	; 0x136 <getLight>
 278:	00 d0       	rcall	.+0      	; 0x27a <__vector_14+0x13e>
 27a:	00 d0       	rcall	.+0      	; 0x27c <__vector_14+0x140>
 27c:	00 d0       	rcall	.+0      	; 0x27e <__vector_14+0x142>
 27e:	ed b7       	in	r30, 0x3d	; 61
 280:	fe b7       	in	r31, 0x3e	; 62
 282:	31 96       	adiw	r30, 0x01	; 1
 284:	22 e5       	ldi	r18, 0x52	; 82
 286:	31 e0       	ldi	r19, 0x01	; 1
 288:	ad b7       	in	r26, 0x3d	; 61
 28a:	be b7       	in	r27, 0x3e	; 62
 28c:	12 96       	adiw	r26, 0x02	; 2
 28e:	3c 93       	st	X, r19
 290:	2e 93       	st	-X, r18
 292:	11 97       	sbiw	r26, 0x01	; 1
 294:	c2 83       	std	Z+2, r28	; 0x02
 296:	13 82       	std	Z+3, r1	; 0x03
 298:	84 83       	std	Z+4, r24	; 0x04
 29a:	15 82       	std	Z+5, r1	; 0x05
 29c:	0e 94 9e 03 	call	0x73c	; 0x73c <printf>
		i++;
 2a0:	80 91 76 01 	lds	r24, 0x0176
 2a4:	8f 5f       	subi	r24, 0xFF	; 255
 2a6:	80 93 76 01 	sts	0x0176, r24
		
		// Resets de timer en de Totale timer ticks
		extraTime = 0;
 2aa:	10 92 75 01 	sts	0x0175, r1
 2ae:	10 92 74 01 	sts	0x0174, r1
 2b2:	8d b7       	in	r24, 0x3d	; 61
 2b4:	9e b7       	in	r25, 0x3e	; 62
 2b6:	06 96       	adiw	r24, 0x06	; 6
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	f8 94       	cli
 2bc:	9e bf       	out	0x3e, r25	; 62
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	8d bf       	out	0x3d, r24	; 61
	}
}
 2c2:	ff 91       	pop	r31
 2c4:	ef 91       	pop	r30
 2c6:	df 91       	pop	r29
 2c8:	cf 91       	pop	r28
 2ca:	bf 91       	pop	r27
 2cc:	af 91       	pop	r26
 2ce:	9f 91       	pop	r25
 2d0:	8f 91       	pop	r24
 2d2:	7f 91       	pop	r23
 2d4:	6f 91       	pop	r22
 2d6:	5f 91       	pop	r21
 2d8:	4f 91       	pop	r20
 2da:	3f 91       	pop	r19
 2dc:	2f 91       	pop	r18
 2de:	0f 90       	pop	r0
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	0f 90       	pop	r0
 2e4:	1f 90       	pop	r1
 2e6:	18 95       	reti

000002e8 <ser_init>:

FILE uart_output = FDEV_SETUP_STREAM(ser_stdio_putchar, NULL, _FDEV_SETUP_WRITE);

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
 2e8:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
 2ec:	83 e3       	ldi	r24, 0x33	; 51
 2ee:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
 2f2:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
 2f6:	88 e1       	ldi	r24, 0x18	; 24
 2f8:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
 2fc:	86 e0       	ldi	r24, 0x06	; 6
 2fe:	80 93 c2 00 	sts	0x00C2, r24
	// Setup stdout
	stdout=&uart_output;
 302:	85 e6       	ldi	r24, 0x65	; 101
 304:	91 e0       	ldi	r25, 0x01	; 1
 306:	90 93 9a 01 	sts	0x019A, r25
 30a:	80 93 99 01 	sts	0x0199, r24
}
 30e:	08 95       	ret

00000310 <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
 310:	e0 ec       	ldi	r30, 0xC0	; 192
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	90 81       	ld	r25, Z
 316:	95 ff       	sbrs	r25, 5
 318:	fd cf       	rjmp	.-6      	; 0x314 <ser_transmit+0x4>
	// send the data
	UDR0 = data;
 31a:	80 93 c6 00 	sts	0x00C6, r24
}
 31e:	08 95       	ret

00000320 <ser_stdio_putchar>:
// output on USB = PD1 = board pin 1
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

// Getchar en putchar tbv. stdio.h
void ser_stdio_putchar(char c, FILE *stream) {
 320:	cf 93       	push	r28
 322:	c8 2f       	mov	r28, r24
	if (c=='\n') {
 324:	8a 30       	cpi	r24, 0x0A	; 10
 326:	19 f4       	brne	.+6      	; 0x32e <ser_stdio_putchar+0xe>
		ser_transmit('\r');
 328:	8d e0       	ldi	r24, 0x0D	; 13
 32a:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>
	}
	ser_transmit(c);
 32e:	8c 2f       	mov	r24, r28
 330:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>
}
 334:	cf 91       	pop	r28
 336:	08 95       	ret

00000338 <ser_receive>:
	UDR0 = data;
}

// Low level receive
uint8_t ser_receive() {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
 338:	e0 ec       	ldi	r30, 0xC0	; 192
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	80 81       	ld	r24, Z
 33e:	88 23       	and	r24, r24
 340:	ec f7       	brge	.-6      	; 0x33c <ser_receive+0x4>
	return UDR0;
 342:	80 91 c6 00 	lds	r24, 0x00C6
}
 346:	08 95       	ret

00000348 <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
 34e:	88 81       	ld	r24, Y
 350:	88 23       	and	r24, r24
 352:	31 f0       	breq	.+12     	; 0x360 <ser_write+0x18>
	return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
 354:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
 356:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
 35a:	89 91       	ld	r24, Y+
 35c:	88 23       	and	r24, r24
 35e:	d9 f7       	brne	.-10     	; 0x356 <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	08 95       	ret

00000366 <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
 366:	0e 94 a4 01 	call	0x348	; 0x348 <ser_write>
	ser_transmit('\r');
 36a:	8d e0       	ldi	r24, 0x0D	; 13
 36c:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>
	ser_transmit('\n');
 370:	8a e0       	ldi	r24, 0x0A	; 10
 372:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>
}
 376:	08 95       	ret

00000378 <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
 378:	af 92       	push	r10
 37a:	bf 92       	push	r11
 37c:	cf 92       	push	r12
 37e:	df 92       	push	r13
 380:	ef 92       	push	r14
 382:	ff 92       	push	r15
 384:	0f 93       	push	r16
 386:	1f 93       	push	r17
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	5c 01       	movw	r10, r24
 38e:	d4 2f       	mov	r29, r20
	int i=0;
 390:	6c 01       	movw	r12, r24
 392:	ee 24       	eor	r14, r14
 394:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 396:	8b 01       	movw	r16, r22
 398:	01 50       	subi	r16, 0x01	; 1
 39a:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
 39c:	0e 94 9c 01 	call	0x338	; 0x338 <ser_receive>
 3a0:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
 3a2:	dd 23       	and	r29, r29
 3a4:	11 f0       	breq	.+4      	; 0x3aa <ser_readln+0x32>
 3a6:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>
		if (c=='\r') {
 3aa:	cd 30       	cpi	r28, 0x0D	; 13
 3ac:	31 f4       	brne	.+12     	; 0x3ba <ser_readln+0x42>
			if (echo) ser_transmit('\n');
 3ae:	dd 23       	and	r29, r29
 3b0:	71 f0       	breq	.+28     	; 0x3ce <ser_readln+0x56>
 3b2:	8a e0       	ldi	r24, 0x0A	; 10
 3b4:	0e 94 88 01 	call	0x310	; 0x310 <ser_transmit>
 3b8:	0a c0       	rjmp	.+20     	; 0x3ce <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
 3ba:	e0 16       	cp	r14, r16
 3bc:	f1 06       	cpc	r15, r17
 3be:	74 f7       	brge	.-36     	; 0x39c <ser_readln+0x24>
			buf[i++]=c;
 3c0:	f6 01       	movw	r30, r12
 3c2:	c1 93       	st	Z+, r28
 3c4:	6f 01       	movw	r12, r30
 3c6:	08 94       	sec
 3c8:	e1 1c       	adc	r14, r1
 3ca:	f1 1c       	adc	r15, r1
 3cc:	e7 cf       	rjmp	.-50     	; 0x39c <ser_readln+0x24>
		}
	}
	buf[i]='\0';
 3ce:	ea 0c       	add	r14, r10
 3d0:	fb 1c       	adc	r15, r11
 3d2:	f7 01       	movw	r30, r14
 3d4:	10 82       	st	Z, r1
}
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	ff 90       	pop	r15
 3e0:	ef 90       	pop	r14
 3e2:	df 90       	pop	r13
 3e4:	cf 90       	pop	r12
 3e6:	bf 90       	pop	r11
 3e8:	af 90       	pop	r10
 3ea:	08 95       	ret

000003ec <__subsf3>:
 3ec:	50 58       	subi	r21, 0x80	; 128

000003ee <__addsf3>:
 3ee:	bb 27       	eor	r27, r27
 3f0:	aa 27       	eor	r26, r26
 3f2:	0e d0       	rcall	.+28     	; 0x410 <__addsf3x>
 3f4:	e5 c0       	rjmp	.+458    	; 0x5c0 <__fp_round>
 3f6:	d6 d0       	rcall	.+428    	; 0x5a4 <__fp_pscA>
 3f8:	30 f0       	brcs	.+12     	; 0x406 <__addsf3+0x18>
 3fa:	db d0       	rcall	.+438    	; 0x5b2 <__fp_pscB>
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__addsf3+0x18>
 3fe:	31 f4       	brne	.+12     	; 0x40c <__addsf3+0x1e>
 400:	9f 3f       	cpi	r25, 0xFF	; 255
 402:	11 f4       	brne	.+4      	; 0x408 <__addsf3+0x1a>
 404:	1e f4       	brtc	.+6      	; 0x40c <__addsf3+0x1e>
 406:	cb c0       	rjmp	.+406    	; 0x59e <__fp_nan>
 408:	0e f4       	brtc	.+2      	; 0x40c <__addsf3+0x1e>
 40a:	e0 95       	com	r30
 40c:	e7 fb       	bst	r30, 7
 40e:	c1 c0       	rjmp	.+386    	; 0x592 <__fp_inf>

00000410 <__addsf3x>:
 410:	e9 2f       	mov	r30, r25
 412:	e7 d0       	rcall	.+462    	; 0x5e2 <__fp_split3>
 414:	80 f3       	brcs	.-32     	; 0x3f6 <__addsf3+0x8>
 416:	ba 17       	cp	r27, r26
 418:	62 07       	cpc	r22, r18
 41a:	73 07       	cpc	r23, r19
 41c:	84 07       	cpc	r24, r20
 41e:	95 07       	cpc	r25, r21
 420:	18 f0       	brcs	.+6      	; 0x428 <__addsf3x+0x18>
 422:	71 f4       	brne	.+28     	; 0x440 <__addsf3x+0x30>
 424:	9e f5       	brtc	.+102    	; 0x48c <__addsf3x+0x7c>
 426:	ff c0       	rjmp	.+510    	; 0x626 <__fp_zero>
 428:	0e f4       	brtc	.+2      	; 0x42c <__addsf3x+0x1c>
 42a:	e0 95       	com	r30
 42c:	0b 2e       	mov	r0, r27
 42e:	ba 2f       	mov	r27, r26
 430:	a0 2d       	mov	r26, r0
 432:	0b 01       	movw	r0, r22
 434:	b9 01       	movw	r22, r18
 436:	90 01       	movw	r18, r0
 438:	0c 01       	movw	r0, r24
 43a:	ca 01       	movw	r24, r20
 43c:	a0 01       	movw	r20, r0
 43e:	11 24       	eor	r1, r1
 440:	ff 27       	eor	r31, r31
 442:	59 1b       	sub	r21, r25
 444:	99 f0       	breq	.+38     	; 0x46c <__addsf3x+0x5c>
 446:	59 3f       	cpi	r21, 0xF9	; 249
 448:	50 f4       	brcc	.+20     	; 0x45e <__addsf3x+0x4e>
 44a:	50 3e       	cpi	r21, 0xE0	; 224
 44c:	68 f1       	brcs	.+90     	; 0x4a8 <__addsf3x+0x98>
 44e:	1a 16       	cp	r1, r26
 450:	f0 40       	sbci	r31, 0x00	; 0
 452:	a2 2f       	mov	r26, r18
 454:	23 2f       	mov	r18, r19
 456:	34 2f       	mov	r19, r20
 458:	44 27       	eor	r20, r20
 45a:	58 5f       	subi	r21, 0xF8	; 248
 45c:	f3 cf       	rjmp	.-26     	; 0x444 <__addsf3x+0x34>
 45e:	46 95       	lsr	r20
 460:	37 95       	ror	r19
 462:	27 95       	ror	r18
 464:	a7 95       	ror	r26
 466:	f0 40       	sbci	r31, 0x00	; 0
 468:	53 95       	inc	r21
 46a:	c9 f7       	brne	.-14     	; 0x45e <__addsf3x+0x4e>
 46c:	7e f4       	brtc	.+30     	; 0x48c <__addsf3x+0x7c>
 46e:	1f 16       	cp	r1, r31
 470:	ba 0b       	sbc	r27, r26
 472:	62 0b       	sbc	r22, r18
 474:	73 0b       	sbc	r23, r19
 476:	84 0b       	sbc	r24, r20
 478:	ba f0       	brmi	.+46     	; 0x4a8 <__addsf3x+0x98>
 47a:	91 50       	subi	r25, 0x01	; 1
 47c:	a1 f0       	breq	.+40     	; 0x4a6 <__addsf3x+0x96>
 47e:	ff 0f       	add	r31, r31
 480:	bb 1f       	adc	r27, r27
 482:	66 1f       	adc	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	c2 f7       	brpl	.-16     	; 0x47a <__addsf3x+0x6a>
 48a:	0e c0       	rjmp	.+28     	; 0x4a8 <__addsf3x+0x98>
 48c:	ba 0f       	add	r27, r26
 48e:	62 1f       	adc	r22, r18
 490:	73 1f       	adc	r23, r19
 492:	84 1f       	adc	r24, r20
 494:	48 f4       	brcc	.+18     	; 0x4a8 <__addsf3x+0x98>
 496:	87 95       	ror	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	f7 95       	ror	r31
 4a0:	9e 3f       	cpi	r25, 0xFE	; 254
 4a2:	08 f0       	brcs	.+2      	; 0x4a6 <__addsf3x+0x96>
 4a4:	b3 cf       	rjmp	.-154    	; 0x40c <__addsf3+0x1e>
 4a6:	93 95       	inc	r25
 4a8:	88 0f       	add	r24, r24
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <__addsf3x+0x9e>
 4ac:	99 27       	eor	r25, r25
 4ae:	ee 0f       	add	r30, r30
 4b0:	97 95       	ror	r25
 4b2:	87 95       	ror	r24
 4b4:	08 95       	ret

000004b6 <__fixsfsi>:
 4b6:	04 d0       	rcall	.+8      	; 0x4c0 <__fixunssfsi>
 4b8:	68 94       	set
 4ba:	b1 11       	cpse	r27, r1
 4bc:	b5 c0       	rjmp	.+362    	; 0x628 <__fp_szero>
 4be:	08 95       	ret

000004c0 <__fixunssfsi>:
 4c0:	98 d0       	rcall	.+304    	; 0x5f2 <__fp_splitA>
 4c2:	88 f0       	brcs	.+34     	; 0x4e6 <__fixunssfsi+0x26>
 4c4:	9f 57       	subi	r25, 0x7F	; 127
 4c6:	90 f0       	brcs	.+36     	; 0x4ec <__fixunssfsi+0x2c>
 4c8:	b9 2f       	mov	r27, r25
 4ca:	99 27       	eor	r25, r25
 4cc:	b7 51       	subi	r27, 0x17	; 23
 4ce:	a0 f0       	brcs	.+40     	; 0x4f8 <__fixunssfsi+0x38>
 4d0:	d1 f0       	breq	.+52     	; 0x506 <__fixunssfsi+0x46>
 4d2:	66 0f       	add	r22, r22
 4d4:	77 1f       	adc	r23, r23
 4d6:	88 1f       	adc	r24, r24
 4d8:	99 1f       	adc	r25, r25
 4da:	1a f0       	brmi	.+6      	; 0x4e2 <__fixunssfsi+0x22>
 4dc:	ba 95       	dec	r27
 4de:	c9 f7       	brne	.-14     	; 0x4d2 <__fixunssfsi+0x12>
 4e0:	12 c0       	rjmp	.+36     	; 0x506 <__fixunssfsi+0x46>
 4e2:	b1 30       	cpi	r27, 0x01	; 1
 4e4:	81 f0       	breq	.+32     	; 0x506 <__fixunssfsi+0x46>
 4e6:	9f d0       	rcall	.+318    	; 0x626 <__fp_zero>
 4e8:	b1 e0       	ldi	r27, 0x01	; 1
 4ea:	08 95       	ret
 4ec:	9c c0       	rjmp	.+312    	; 0x626 <__fp_zero>
 4ee:	67 2f       	mov	r22, r23
 4f0:	78 2f       	mov	r23, r24
 4f2:	88 27       	eor	r24, r24
 4f4:	b8 5f       	subi	r27, 0xF8	; 248
 4f6:	39 f0       	breq	.+14     	; 0x506 <__fixunssfsi+0x46>
 4f8:	b9 3f       	cpi	r27, 0xF9	; 249
 4fa:	cc f3       	brlt	.-14     	; 0x4ee <__fixunssfsi+0x2e>
 4fc:	86 95       	lsr	r24
 4fe:	77 95       	ror	r23
 500:	67 95       	ror	r22
 502:	b3 95       	inc	r27
 504:	d9 f7       	brne	.-10     	; 0x4fc <__fixunssfsi+0x3c>
 506:	3e f4       	brtc	.+14     	; 0x516 <__fixunssfsi+0x56>
 508:	90 95       	com	r25
 50a:	80 95       	com	r24
 50c:	70 95       	com	r23
 50e:	61 95       	neg	r22
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	8f 4f       	sbci	r24, 0xFF	; 255
 514:	9f 4f       	sbci	r25, 0xFF	; 255
 516:	08 95       	ret

00000518 <__floatunsisf>:
 518:	e8 94       	clt
 51a:	09 c0       	rjmp	.+18     	; 0x52e <__floatsisf+0x12>

0000051c <__floatsisf>:
 51c:	97 fb       	bst	r25, 7
 51e:	3e f4       	brtc	.+14     	; 0x52e <__floatsisf+0x12>
 520:	90 95       	com	r25
 522:	80 95       	com	r24
 524:	70 95       	com	r23
 526:	61 95       	neg	r22
 528:	7f 4f       	sbci	r23, 0xFF	; 255
 52a:	8f 4f       	sbci	r24, 0xFF	; 255
 52c:	9f 4f       	sbci	r25, 0xFF	; 255
 52e:	99 23       	and	r25, r25
 530:	a9 f0       	breq	.+42     	; 0x55c <__floatsisf+0x40>
 532:	f9 2f       	mov	r31, r25
 534:	96 e9       	ldi	r25, 0x96	; 150
 536:	bb 27       	eor	r27, r27
 538:	93 95       	inc	r25
 53a:	f6 95       	lsr	r31
 53c:	87 95       	ror	r24
 53e:	77 95       	ror	r23
 540:	67 95       	ror	r22
 542:	b7 95       	ror	r27
 544:	f1 11       	cpse	r31, r1
 546:	f8 cf       	rjmp	.-16     	; 0x538 <__floatsisf+0x1c>
 548:	fa f4       	brpl	.+62     	; 0x588 <__floatsisf+0x6c>
 54a:	bb 0f       	add	r27, r27
 54c:	11 f4       	brne	.+4      	; 0x552 <__floatsisf+0x36>
 54e:	60 ff       	sbrs	r22, 0
 550:	1b c0       	rjmp	.+54     	; 0x588 <__floatsisf+0x6c>
 552:	6f 5f       	subi	r22, 0xFF	; 255
 554:	7f 4f       	sbci	r23, 0xFF	; 255
 556:	8f 4f       	sbci	r24, 0xFF	; 255
 558:	9f 4f       	sbci	r25, 0xFF	; 255
 55a:	16 c0       	rjmp	.+44     	; 0x588 <__floatsisf+0x6c>
 55c:	88 23       	and	r24, r24
 55e:	11 f0       	breq	.+4      	; 0x564 <__floatsisf+0x48>
 560:	96 e9       	ldi	r25, 0x96	; 150
 562:	11 c0       	rjmp	.+34     	; 0x586 <__floatsisf+0x6a>
 564:	77 23       	and	r23, r23
 566:	21 f0       	breq	.+8      	; 0x570 <__floatsisf+0x54>
 568:	9e e8       	ldi	r25, 0x8E	; 142
 56a:	87 2f       	mov	r24, r23
 56c:	76 2f       	mov	r23, r22
 56e:	05 c0       	rjmp	.+10     	; 0x57a <__floatsisf+0x5e>
 570:	66 23       	and	r22, r22
 572:	71 f0       	breq	.+28     	; 0x590 <__floatsisf+0x74>
 574:	96 e8       	ldi	r25, 0x86	; 134
 576:	86 2f       	mov	r24, r22
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	2a f0       	brmi	.+10     	; 0x588 <__floatsisf+0x6c>
 57e:	9a 95       	dec	r25
 580:	66 0f       	add	r22, r22
 582:	77 1f       	adc	r23, r23
 584:	88 1f       	adc	r24, r24
 586:	da f7       	brpl	.-10     	; 0x57e <__floatsisf+0x62>
 588:	88 0f       	add	r24, r24
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret

00000592 <__fp_inf>:
 592:	97 f9       	bld	r25, 7
 594:	9f 67       	ori	r25, 0x7F	; 127
 596:	80 e8       	ldi	r24, 0x80	; 128
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	08 95       	ret

0000059e <__fp_nan>:
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	80 ec       	ldi	r24, 0xC0	; 192
 5a2:	08 95       	ret

000005a4 <__fp_pscA>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	09 06       	cpc	r0, r25
 5b0:	08 95       	ret

000005b2 <__fp_pscB>:
 5b2:	00 24       	eor	r0, r0
 5b4:	0a 94       	dec	r0
 5b6:	12 16       	cp	r1, r18
 5b8:	13 06       	cpc	r1, r19
 5ba:	14 06       	cpc	r1, r20
 5bc:	05 06       	cpc	r0, r21
 5be:	08 95       	ret

000005c0 <__fp_round>:
 5c0:	09 2e       	mov	r0, r25
 5c2:	03 94       	inc	r0
 5c4:	00 0c       	add	r0, r0
 5c6:	11 f4       	brne	.+4      	; 0x5cc <__fp_round+0xc>
 5c8:	88 23       	and	r24, r24
 5ca:	52 f0       	brmi	.+20     	; 0x5e0 <__fp_round+0x20>
 5cc:	bb 0f       	add	r27, r27
 5ce:	40 f4       	brcc	.+16     	; 0x5e0 <__fp_round+0x20>
 5d0:	bf 2b       	or	r27, r31
 5d2:	11 f4       	brne	.+4      	; 0x5d8 <__fp_round+0x18>
 5d4:	60 ff       	sbrs	r22, 0
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__fp_round+0x20>
 5d8:	6f 5f       	subi	r22, 0xFF	; 255
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <__fp_split3>:
 5e2:	57 fd       	sbrc	r21, 7
 5e4:	90 58       	subi	r25, 0x80	; 128
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	59 f0       	breq	.+22     	; 0x602 <__fp_splitA+0x10>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	71 f0       	breq	.+28     	; 0x60c <__fp_splitA+0x1a>
 5f0:	47 95       	ror	r20

000005f2 <__fp_splitA>:
 5f2:	88 0f       	add	r24, r24
 5f4:	97 fb       	bst	r25, 7
 5f6:	99 1f       	adc	r25, r25
 5f8:	61 f0       	breq	.+24     	; 0x612 <__fp_splitA+0x20>
 5fa:	9f 3f       	cpi	r25, 0xFF	; 255
 5fc:	79 f0       	breq	.+30     	; 0x61c <__fp_splitA+0x2a>
 5fe:	87 95       	ror	r24
 600:	08 95       	ret
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	55 1f       	adc	r21, r21
 60a:	f2 cf       	rjmp	.-28     	; 0x5f0 <__fp_split3+0xe>
 60c:	46 95       	lsr	r20
 60e:	f1 df       	rcall	.-30     	; 0x5f2 <__fp_splitA>
 610:	08 c0       	rjmp	.+16     	; 0x622 <__fp_splitA+0x30>
 612:	16 16       	cp	r1, r22
 614:	17 06       	cpc	r1, r23
 616:	18 06       	cpc	r1, r24
 618:	99 1f       	adc	r25, r25
 61a:	f1 cf       	rjmp	.-30     	; 0x5fe <__fp_splitA+0xc>
 61c:	86 95       	lsr	r24
 61e:	71 05       	cpc	r23, r1
 620:	61 05       	cpc	r22, r1
 622:	08 94       	sec
 624:	08 95       	ret

00000626 <__fp_zero>:
 626:	e8 94       	clt

00000628 <__fp_szero>:
 628:	bb 27       	eor	r27, r27
 62a:	66 27       	eor	r22, r22
 62c:	77 27       	eor	r23, r23
 62e:	cb 01       	movw	r24, r22
 630:	97 f9       	bld	r25, 7
 632:	08 95       	ret

00000634 <__mulsf3>:
 634:	0b d0       	rcall	.+22     	; 0x64c <__mulsf3x>
 636:	c4 cf       	rjmp	.-120    	; 0x5c0 <__fp_round>
 638:	b5 df       	rcall	.-150    	; 0x5a4 <__fp_pscA>
 63a:	28 f0       	brcs	.+10     	; 0x646 <__mulsf3+0x12>
 63c:	ba df       	rcall	.-140    	; 0x5b2 <__fp_pscB>
 63e:	18 f0       	brcs	.+6      	; 0x646 <__mulsf3+0x12>
 640:	95 23       	and	r25, r21
 642:	09 f0       	breq	.+2      	; 0x646 <__mulsf3+0x12>
 644:	a6 cf       	rjmp	.-180    	; 0x592 <__fp_inf>
 646:	ab cf       	rjmp	.-170    	; 0x59e <__fp_nan>
 648:	11 24       	eor	r1, r1
 64a:	ee cf       	rjmp	.-36     	; 0x628 <__fp_szero>

0000064c <__mulsf3x>:
 64c:	ca df       	rcall	.-108    	; 0x5e2 <__fp_split3>
 64e:	a0 f3       	brcs	.-24     	; 0x638 <__mulsf3+0x4>

00000650 <__mulsf3_pse>:
 650:	95 9f       	mul	r25, r21
 652:	d1 f3       	breq	.-12     	; 0x648 <__mulsf3+0x14>
 654:	95 0f       	add	r25, r21
 656:	50 e0       	ldi	r21, 0x00	; 0
 658:	55 1f       	adc	r21, r21
 65a:	62 9f       	mul	r22, r18
 65c:	f0 01       	movw	r30, r0
 65e:	72 9f       	mul	r23, r18
 660:	bb 27       	eor	r27, r27
 662:	f0 0d       	add	r31, r0
 664:	b1 1d       	adc	r27, r1
 666:	63 9f       	mul	r22, r19
 668:	aa 27       	eor	r26, r26
 66a:	f0 0d       	add	r31, r0
 66c:	b1 1d       	adc	r27, r1
 66e:	aa 1f       	adc	r26, r26
 670:	64 9f       	mul	r22, r20
 672:	66 27       	eor	r22, r22
 674:	b0 0d       	add	r27, r0
 676:	a1 1d       	adc	r26, r1
 678:	66 1f       	adc	r22, r22
 67a:	82 9f       	mul	r24, r18
 67c:	22 27       	eor	r18, r18
 67e:	b0 0d       	add	r27, r0
 680:	a1 1d       	adc	r26, r1
 682:	62 1f       	adc	r22, r18
 684:	73 9f       	mul	r23, r19
 686:	b0 0d       	add	r27, r0
 688:	a1 1d       	adc	r26, r1
 68a:	62 1f       	adc	r22, r18
 68c:	83 9f       	mul	r24, r19
 68e:	a0 0d       	add	r26, r0
 690:	61 1d       	adc	r22, r1
 692:	22 1f       	adc	r18, r18
 694:	74 9f       	mul	r23, r20
 696:	33 27       	eor	r19, r19
 698:	a0 0d       	add	r26, r0
 69a:	61 1d       	adc	r22, r1
 69c:	23 1f       	adc	r18, r19
 69e:	84 9f       	mul	r24, r20
 6a0:	60 0d       	add	r22, r0
 6a2:	21 1d       	adc	r18, r1
 6a4:	82 2f       	mov	r24, r18
 6a6:	76 2f       	mov	r23, r22
 6a8:	6a 2f       	mov	r22, r26
 6aa:	11 24       	eor	r1, r1
 6ac:	9f 57       	subi	r25, 0x7F	; 127
 6ae:	50 40       	sbci	r21, 0x00	; 0
 6b0:	8a f0       	brmi	.+34     	; 0x6d4 <__mulsf3_pse+0x84>
 6b2:	e1 f0       	breq	.+56     	; 0x6ec <__mulsf3_pse+0x9c>
 6b4:	88 23       	and	r24, r24
 6b6:	4a f0       	brmi	.+18     	; 0x6ca <__mulsf3_pse+0x7a>
 6b8:	ee 0f       	add	r30, r30
 6ba:	ff 1f       	adc	r31, r31
 6bc:	bb 1f       	adc	r27, r27
 6be:	66 1f       	adc	r22, r22
 6c0:	77 1f       	adc	r23, r23
 6c2:	88 1f       	adc	r24, r24
 6c4:	91 50       	subi	r25, 0x01	; 1
 6c6:	50 40       	sbci	r21, 0x00	; 0
 6c8:	a9 f7       	brne	.-22     	; 0x6b4 <__mulsf3_pse+0x64>
 6ca:	9e 3f       	cpi	r25, 0xFE	; 254
 6cc:	51 05       	cpc	r21, r1
 6ce:	70 f0       	brcs	.+28     	; 0x6ec <__mulsf3_pse+0x9c>
 6d0:	60 cf       	rjmp	.-320    	; 0x592 <__fp_inf>
 6d2:	aa cf       	rjmp	.-172    	; 0x628 <__fp_szero>
 6d4:	5f 3f       	cpi	r21, 0xFF	; 255
 6d6:	ec f3       	brlt	.-6      	; 0x6d2 <__mulsf3_pse+0x82>
 6d8:	98 3e       	cpi	r25, 0xE8	; 232
 6da:	dc f3       	brlt	.-10     	; 0x6d2 <__mulsf3_pse+0x82>
 6dc:	86 95       	lsr	r24
 6de:	77 95       	ror	r23
 6e0:	67 95       	ror	r22
 6e2:	b7 95       	ror	r27
 6e4:	f7 95       	ror	r31
 6e6:	e7 95       	ror	r30
 6e8:	9f 5f       	subi	r25, 0xFF	; 255
 6ea:	c1 f7       	brne	.-16     	; 0x6dc <__mulsf3_pse+0x8c>
 6ec:	fe 2b       	or	r31, r30
 6ee:	88 0f       	add	r24, r24
 6f0:	91 1d       	adc	r25, r1
 6f2:	96 95       	lsr	r25
 6f4:	87 95       	ror	r24
 6f6:	97 f9       	bld	r25, 7
 6f8:	08 95       	ret

000006fa <itoa>:
 6fa:	fb 01       	movw	r30, r22
 6fc:	9f 01       	movw	r18, r30
 6fe:	e8 94       	clt
 700:	42 30       	cpi	r20, 0x02	; 2
 702:	c4 f0       	brlt	.+48     	; 0x734 <itoa+0x3a>
 704:	45 32       	cpi	r20, 0x25	; 37
 706:	b4 f4       	brge	.+44     	; 0x734 <itoa+0x3a>
 708:	4a 30       	cpi	r20, 0x0A	; 10
 70a:	29 f4       	brne	.+10     	; 0x716 <itoa+0x1c>
 70c:	97 fb       	bst	r25, 7
 70e:	1e f4       	brtc	.+6      	; 0x716 <itoa+0x1c>
 710:	90 95       	com	r25
 712:	81 95       	neg	r24
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	64 2f       	mov	r22, r20
 718:	77 27       	eor	r23, r23
 71a:	0e 94 6f 06 	call	0xcde	; 0xcde <__udivmodhi4>
 71e:	80 5d       	subi	r24, 0xD0	; 208
 720:	8a 33       	cpi	r24, 0x3A	; 58
 722:	0c f0       	brlt	.+2      	; 0x726 <itoa+0x2c>
 724:	89 5d       	subi	r24, 0xD9	; 217
 726:	81 93       	st	Z+, r24
 728:	cb 01       	movw	r24, r22
 72a:	00 97       	sbiw	r24, 0x00	; 0
 72c:	a1 f7       	brne	.-24     	; 0x716 <itoa+0x1c>
 72e:	16 f4       	brtc	.+4      	; 0x734 <itoa+0x3a>
 730:	5d e2       	ldi	r21, 0x2D	; 45
 732:	51 93       	st	Z+, r21
 734:	10 82       	st	Z, r1
 736:	c9 01       	movw	r24, r18
 738:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <strrev>

0000073c <printf>:
 73c:	a0 e0       	ldi	r26, 0x00	; 0
 73e:	b0 e0       	ldi	r27, 0x00	; 0
 740:	e4 ea       	ldi	r30, 0xA4	; 164
 742:	f3 e0       	ldi	r31, 0x03	; 3
 744:	0c 94 93 06 	jmp	0xd26	; 0xd26 <__prologue_saves__+0x20>
 748:	fe 01       	movw	r30, r28
 74a:	35 96       	adiw	r30, 0x05	; 5
 74c:	61 91       	ld	r22, Z+
 74e:	71 91       	ld	r23, Z+
 750:	80 91 99 01 	lds	r24, 0x0199
 754:	90 91 9a 01 	lds	r25, 0x019A
 758:	af 01       	movw	r20, r30
 75a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <vfprintf>
 75e:	20 96       	adiw	r28, 0x00	; 0
 760:	e2 e0       	ldi	r30, 0x02	; 2
 762:	0c 94 af 06 	jmp	0xd5e	; 0xd5e <__epilogue_restores__+0x20>

00000766 <puts>:
 766:	0f 93       	push	r16
 768:	1f 93       	push	r17
 76a:	cf 93       	push	r28
 76c:	df 93       	push	r29
 76e:	8c 01       	movw	r16, r24
 770:	e0 91 99 01 	lds	r30, 0x0199
 774:	f0 91 9a 01 	lds	r31, 0x019A
 778:	83 81       	ldd	r24, Z+3	; 0x03
 77a:	81 ff       	sbrs	r24, 1
 77c:	1a c0       	rjmp	.+52     	; 0x7b2 <puts+0x4c>
 77e:	c0 e0       	ldi	r28, 0x00	; 0
 780:	d0 e0       	ldi	r29, 0x00	; 0
 782:	05 c0       	rjmp	.+10     	; 0x78e <puts+0x28>
 784:	09 95       	icall
 786:	00 97       	sbiw	r24, 0x00	; 0
 788:	11 f0       	breq	.+4      	; 0x78e <puts+0x28>
 78a:	cf ef       	ldi	r28, 0xFF	; 255
 78c:	df ef       	ldi	r29, 0xFF	; 255
 78e:	f8 01       	movw	r30, r16
 790:	81 91       	ld	r24, Z+
 792:	8f 01       	movw	r16, r30
 794:	60 91 99 01 	lds	r22, 0x0199
 798:	70 91 9a 01 	lds	r23, 0x019A
 79c:	db 01       	movw	r26, r22
 79e:	18 96       	adiw	r26, 0x08	; 8
 7a0:	ed 91       	ld	r30, X+
 7a2:	fc 91       	ld	r31, X
 7a4:	19 97       	sbiw	r26, 0x09	; 9
 7a6:	88 23       	and	r24, r24
 7a8:	69 f7       	brne	.-38     	; 0x784 <puts+0x1e>
 7aa:	8a e0       	ldi	r24, 0x0A	; 10
 7ac:	09 95       	icall
 7ae:	00 97       	sbiw	r24, 0x00	; 0
 7b0:	11 f0       	breq	.+4      	; 0x7b6 <puts+0x50>
 7b2:	cf ef       	ldi	r28, 0xFF	; 255
 7b4:	df ef       	ldi	r29, 0xFF	; 255
 7b6:	ce 01       	movw	r24, r28
 7b8:	df 91       	pop	r29
 7ba:	cf 91       	pop	r28
 7bc:	1f 91       	pop	r17
 7be:	0f 91       	pop	r16
 7c0:	08 95       	ret

000007c2 <vfprintf>:
 7c2:	ad e0       	ldi	r26, 0x0D	; 13
 7c4:	b0 e0       	ldi	r27, 0x00	; 0
 7c6:	e7 ee       	ldi	r30, 0xE7	; 231
 7c8:	f3 e0       	ldi	r31, 0x03	; 3
 7ca:	0c 94 83 06 	jmp	0xd06	; 0xd06 <__prologue_saves__>
 7ce:	3c 01       	movw	r6, r24
 7d0:	7d 87       	std	Y+13, r23	; 0x0d
 7d2:	6c 87       	std	Y+12, r22	; 0x0c
 7d4:	5a 01       	movw	r10, r20
 7d6:	fc 01       	movw	r30, r24
 7d8:	17 82       	std	Z+7, r1	; 0x07
 7da:	16 82       	std	Z+6, r1	; 0x06
 7dc:	83 81       	ldd	r24, Z+3	; 0x03
 7de:	81 ff       	sbrs	r24, 1
 7e0:	c8 c1       	rjmp	.+912    	; 0xb72 <__stack+0x273>
 7e2:	2e 01       	movw	r4, r28
 7e4:	08 94       	sec
 7e6:	41 1c       	adc	r4, r1
 7e8:	51 1c       	adc	r5, r1
 7ea:	f3 01       	movw	r30, r6
 7ec:	93 81       	ldd	r25, Z+3	; 0x03
 7ee:	ec 85       	ldd	r30, Y+12	; 0x0c
 7f0:	fd 85       	ldd	r31, Y+13	; 0x0d
 7f2:	93 fd       	sbrc	r25, 3
 7f4:	85 91       	lpm	r24, Z+
 7f6:	93 ff       	sbrs	r25, 3
 7f8:	81 91       	ld	r24, Z+
 7fa:	fd 87       	std	Y+13, r31	; 0x0d
 7fc:	ec 87       	std	Y+12, r30	; 0x0c
 7fe:	88 23       	and	r24, r24
 800:	09 f4       	brne	.+2      	; 0x804 <vfprintf+0x42>
 802:	b3 c1       	rjmp	.+870    	; 0xb6a <__stack+0x26b>
 804:	85 32       	cpi	r24, 0x25	; 37
 806:	41 f4       	brne	.+16     	; 0x818 <vfprintf+0x56>
 808:	93 fd       	sbrc	r25, 3
 80a:	85 91       	lpm	r24, Z+
 80c:	93 ff       	sbrs	r25, 3
 80e:	81 91       	ld	r24, Z+
 810:	fd 87       	std	Y+13, r31	; 0x0d
 812:	ec 87       	std	Y+12, r30	; 0x0c
 814:	85 32       	cpi	r24, 0x25	; 37
 816:	29 f4       	brne	.+10     	; 0x822 <vfprintf+0x60>
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	b3 01       	movw	r22, r6
 81c:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 820:	e4 cf       	rjmp	.-56     	; 0x7ea <vfprintf+0x28>
 822:	ff 24       	eor	r15, r15
 824:	ee 24       	eor	r14, r14
 826:	10 e0       	ldi	r17, 0x00	; 0
 828:	10 32       	cpi	r17, 0x20	; 32
 82a:	b0 f4       	brcc	.+44     	; 0x858 <vfprintf+0x96>
 82c:	8b 32       	cpi	r24, 0x2B	; 43
 82e:	69 f0       	breq	.+26     	; 0x84a <vfprintf+0x88>
 830:	8c 32       	cpi	r24, 0x2C	; 44
 832:	28 f4       	brcc	.+10     	; 0x83e <vfprintf+0x7c>
 834:	80 32       	cpi	r24, 0x20	; 32
 836:	51 f0       	breq	.+20     	; 0x84c <vfprintf+0x8a>
 838:	83 32       	cpi	r24, 0x23	; 35
 83a:	71 f4       	brne	.+28     	; 0x858 <vfprintf+0x96>
 83c:	0b c0       	rjmp	.+22     	; 0x854 <vfprintf+0x92>
 83e:	8d 32       	cpi	r24, 0x2D	; 45
 840:	39 f0       	breq	.+14     	; 0x850 <vfprintf+0x8e>
 842:	80 33       	cpi	r24, 0x30	; 48
 844:	49 f4       	brne	.+18     	; 0x858 <vfprintf+0x96>
 846:	11 60       	ori	r17, 0x01	; 1
 848:	2c c0       	rjmp	.+88     	; 0x8a2 <vfprintf+0xe0>
 84a:	12 60       	ori	r17, 0x02	; 2
 84c:	14 60       	ori	r17, 0x04	; 4
 84e:	29 c0       	rjmp	.+82     	; 0x8a2 <vfprintf+0xe0>
 850:	18 60       	ori	r17, 0x08	; 8
 852:	27 c0       	rjmp	.+78     	; 0x8a2 <vfprintf+0xe0>
 854:	10 61       	ori	r17, 0x10	; 16
 856:	25 c0       	rjmp	.+74     	; 0x8a2 <vfprintf+0xe0>
 858:	17 fd       	sbrc	r17, 7
 85a:	2e c0       	rjmp	.+92     	; 0x8b8 <vfprintf+0xf6>
 85c:	28 2f       	mov	r18, r24
 85e:	20 53       	subi	r18, 0x30	; 48
 860:	2a 30       	cpi	r18, 0x0A	; 10
 862:	98 f4       	brcc	.+38     	; 0x88a <vfprintf+0xc8>
 864:	16 ff       	sbrs	r17, 6
 866:	08 c0       	rjmp	.+16     	; 0x878 <vfprintf+0xb6>
 868:	8f 2d       	mov	r24, r15
 86a:	88 0f       	add	r24, r24
 86c:	f8 2e       	mov	r15, r24
 86e:	ff 0c       	add	r15, r15
 870:	ff 0c       	add	r15, r15
 872:	f8 0e       	add	r15, r24
 874:	f2 0e       	add	r15, r18
 876:	15 c0       	rjmp	.+42     	; 0x8a2 <vfprintf+0xe0>
 878:	8e 2d       	mov	r24, r14
 87a:	88 0f       	add	r24, r24
 87c:	e8 2e       	mov	r14, r24
 87e:	ee 0c       	add	r14, r14
 880:	ee 0c       	add	r14, r14
 882:	e8 0e       	add	r14, r24
 884:	e2 0e       	add	r14, r18
 886:	10 62       	ori	r17, 0x20	; 32
 888:	0c c0       	rjmp	.+24     	; 0x8a2 <vfprintf+0xe0>
 88a:	8e 32       	cpi	r24, 0x2E	; 46
 88c:	21 f4       	brne	.+8      	; 0x896 <vfprintf+0xd4>
 88e:	16 fd       	sbrc	r17, 6
 890:	6c c1       	rjmp	.+728    	; 0xb6a <__stack+0x26b>
 892:	10 64       	ori	r17, 0x40	; 64
 894:	06 c0       	rjmp	.+12     	; 0x8a2 <vfprintf+0xe0>
 896:	8c 36       	cpi	r24, 0x6C	; 108
 898:	11 f4       	brne	.+4      	; 0x89e <vfprintf+0xdc>
 89a:	10 68       	ori	r17, 0x80	; 128
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <vfprintf+0xe0>
 89e:	88 36       	cpi	r24, 0x68	; 104
 8a0:	59 f4       	brne	.+22     	; 0x8b8 <vfprintf+0xf6>
 8a2:	ec 85       	ldd	r30, Y+12	; 0x0c
 8a4:	fd 85       	ldd	r31, Y+13	; 0x0d
 8a6:	93 fd       	sbrc	r25, 3
 8a8:	85 91       	lpm	r24, Z+
 8aa:	93 ff       	sbrs	r25, 3
 8ac:	81 91       	ld	r24, Z+
 8ae:	fd 87       	std	Y+13, r31	; 0x0d
 8b0:	ec 87       	std	Y+12, r30	; 0x0c
 8b2:	88 23       	and	r24, r24
 8b4:	09 f0       	breq	.+2      	; 0x8b8 <vfprintf+0xf6>
 8b6:	b8 cf       	rjmp	.-144    	; 0x828 <vfprintf+0x66>
 8b8:	98 2f       	mov	r25, r24
 8ba:	95 54       	subi	r25, 0x45	; 69
 8bc:	93 30       	cpi	r25, 0x03	; 3
 8be:	18 f0       	brcs	.+6      	; 0x8c6 <vfprintf+0x104>
 8c0:	90 52       	subi	r25, 0x20	; 32
 8c2:	93 30       	cpi	r25, 0x03	; 3
 8c4:	38 f4       	brcc	.+14     	; 0x8d4 <vfprintf+0x112>
 8c6:	24 e0       	ldi	r18, 0x04	; 4
 8c8:	30 e0       	ldi	r19, 0x00	; 0
 8ca:	a2 0e       	add	r10, r18
 8cc:	b3 1e       	adc	r11, r19
 8ce:	3f e3       	ldi	r19, 0x3F	; 63
 8d0:	39 83       	std	Y+1, r19	; 0x01
 8d2:	0f c0       	rjmp	.+30     	; 0x8f2 <vfprintf+0x130>
 8d4:	83 36       	cpi	r24, 0x63	; 99
 8d6:	31 f0       	breq	.+12     	; 0x8e4 <vfprintf+0x122>
 8d8:	83 37       	cpi	r24, 0x73	; 115
 8da:	81 f0       	breq	.+32     	; 0x8fc <vfprintf+0x13a>
 8dc:	83 35       	cpi	r24, 0x53	; 83
 8de:	09 f0       	breq	.+2      	; 0x8e2 <vfprintf+0x120>
 8e0:	5a c0       	rjmp	.+180    	; 0x996 <__stack+0x97>
 8e2:	22 c0       	rjmp	.+68     	; 0x928 <__stack+0x29>
 8e4:	f5 01       	movw	r30, r10
 8e6:	80 81       	ld	r24, Z
 8e8:	89 83       	std	Y+1, r24	; 0x01
 8ea:	22 e0       	ldi	r18, 0x02	; 2
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	a2 0e       	add	r10, r18
 8f0:	b3 1e       	adc	r11, r19
 8f2:	21 e0       	ldi	r18, 0x01	; 1
 8f4:	c2 2e       	mov	r12, r18
 8f6:	d1 2c       	mov	r13, r1
 8f8:	42 01       	movw	r8, r4
 8fa:	14 c0       	rjmp	.+40     	; 0x924 <__stack+0x25>
 8fc:	92 e0       	ldi	r25, 0x02	; 2
 8fe:	29 2e       	mov	r2, r25
 900:	31 2c       	mov	r3, r1
 902:	2a 0c       	add	r2, r10
 904:	3b 1c       	adc	r3, r11
 906:	f5 01       	movw	r30, r10
 908:	80 80       	ld	r8, Z
 90a:	91 80       	ldd	r9, Z+1	; 0x01
 90c:	16 ff       	sbrs	r17, 6
 90e:	03 c0       	rjmp	.+6      	; 0x916 <__stack+0x17>
 910:	6f 2d       	mov	r22, r15
 912:	70 e0       	ldi	r23, 0x00	; 0
 914:	02 c0       	rjmp	.+4      	; 0x91a <__stack+0x1b>
 916:	6f ef       	ldi	r22, 0xFF	; 255
 918:	7f ef       	ldi	r23, 0xFF	; 255
 91a:	c4 01       	movw	r24, r8
 91c:	0e 94 ca 05 	call	0xb94	; 0xb94 <strnlen>
 920:	6c 01       	movw	r12, r24
 922:	51 01       	movw	r10, r2
 924:	1f 77       	andi	r17, 0x7F	; 127
 926:	15 c0       	rjmp	.+42     	; 0x952 <__stack+0x53>
 928:	82 e0       	ldi	r24, 0x02	; 2
 92a:	28 2e       	mov	r2, r24
 92c:	31 2c       	mov	r3, r1
 92e:	2a 0c       	add	r2, r10
 930:	3b 1c       	adc	r3, r11
 932:	f5 01       	movw	r30, r10
 934:	80 80       	ld	r8, Z
 936:	91 80       	ldd	r9, Z+1	; 0x01
 938:	16 ff       	sbrs	r17, 6
 93a:	03 c0       	rjmp	.+6      	; 0x942 <__stack+0x43>
 93c:	6f 2d       	mov	r22, r15
 93e:	70 e0       	ldi	r23, 0x00	; 0
 940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
 942:	6f ef       	ldi	r22, 0xFF	; 255
 944:	7f ef       	ldi	r23, 0xFF	; 255
 946:	c4 01       	movw	r24, r8
 948:	0e 94 bf 05 	call	0xb7e	; 0xb7e <strnlen_P>
 94c:	6c 01       	movw	r12, r24
 94e:	10 68       	ori	r17, 0x80	; 128
 950:	51 01       	movw	r10, r2
 952:	13 fd       	sbrc	r17, 3
 954:	1c c0       	rjmp	.+56     	; 0x98e <__stack+0x8f>
 956:	06 c0       	rjmp	.+12     	; 0x964 <__stack+0x65>
 958:	80 e2       	ldi	r24, 0x20	; 32
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	b3 01       	movw	r22, r6
 95e:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 962:	ea 94       	dec	r14
 964:	8e 2d       	mov	r24, r14
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	c8 16       	cp	r12, r24
 96a:	d9 06       	cpc	r13, r25
 96c:	a8 f3       	brcs	.-22     	; 0x958 <__stack+0x59>
 96e:	0f c0       	rjmp	.+30     	; 0x98e <__stack+0x8f>
 970:	f4 01       	movw	r30, r8
 972:	17 fd       	sbrc	r17, 7
 974:	85 91       	lpm	r24, Z+
 976:	17 ff       	sbrs	r17, 7
 978:	81 91       	ld	r24, Z+
 97a:	4f 01       	movw	r8, r30
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	b3 01       	movw	r22, r6
 980:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 984:	e1 10       	cpse	r14, r1
 986:	ea 94       	dec	r14
 988:	08 94       	sec
 98a:	c1 08       	sbc	r12, r1
 98c:	d1 08       	sbc	r13, r1
 98e:	c1 14       	cp	r12, r1
 990:	d1 04       	cpc	r13, r1
 992:	71 f7       	brne	.-36     	; 0x970 <__stack+0x71>
 994:	e7 c0       	rjmp	.+462    	; 0xb64 <__stack+0x265>
 996:	84 36       	cpi	r24, 0x64	; 100
 998:	11 f0       	breq	.+4      	; 0x99e <__stack+0x9f>
 99a:	89 36       	cpi	r24, 0x69	; 105
 99c:	51 f5       	brne	.+84     	; 0x9f2 <__stack+0xf3>
 99e:	f5 01       	movw	r30, r10
 9a0:	17 ff       	sbrs	r17, 7
 9a2:	07 c0       	rjmp	.+14     	; 0x9b2 <__stack+0xb3>
 9a4:	80 81       	ld	r24, Z
 9a6:	91 81       	ldd	r25, Z+1	; 0x01
 9a8:	a2 81       	ldd	r26, Z+2	; 0x02
 9aa:	b3 81       	ldd	r27, Z+3	; 0x03
 9ac:	24 e0       	ldi	r18, 0x04	; 4
 9ae:	30 e0       	ldi	r19, 0x00	; 0
 9b0:	08 c0       	rjmp	.+16     	; 0x9c2 <__stack+0xc3>
 9b2:	80 81       	ld	r24, Z
 9b4:	91 81       	ldd	r25, Z+1	; 0x01
 9b6:	aa 27       	eor	r26, r26
 9b8:	97 fd       	sbrc	r25, 7
 9ba:	a0 95       	com	r26
 9bc:	ba 2f       	mov	r27, r26
 9be:	22 e0       	ldi	r18, 0x02	; 2
 9c0:	30 e0       	ldi	r19, 0x00	; 0
 9c2:	a2 0e       	add	r10, r18
 9c4:	b3 1e       	adc	r11, r19
 9c6:	01 2f       	mov	r16, r17
 9c8:	0f 76       	andi	r16, 0x6F	; 111
 9ca:	b7 ff       	sbrs	r27, 7
 9cc:	08 c0       	rjmp	.+16     	; 0x9de <__stack+0xdf>
 9ce:	b0 95       	com	r27
 9d0:	a0 95       	com	r26
 9d2:	90 95       	com	r25
 9d4:	81 95       	neg	r24
 9d6:	9f 4f       	sbci	r25, 0xFF	; 255
 9d8:	af 4f       	sbci	r26, 0xFF	; 255
 9da:	bf 4f       	sbci	r27, 0xFF	; 255
 9dc:	00 68       	ori	r16, 0x80	; 128
 9de:	bc 01       	movw	r22, r24
 9e0:	cd 01       	movw	r24, r26
 9e2:	a2 01       	movw	r20, r4
 9e4:	2a e0       	ldi	r18, 0x0A	; 10
 9e6:	30 e0       	ldi	r19, 0x00	; 0
 9e8:	0e 94 11 06 	call	0xc22	; 0xc22 <__ultoa_invert>
 9ec:	d8 2e       	mov	r13, r24
 9ee:	d4 18       	sub	r13, r4
 9f0:	3f c0       	rjmp	.+126    	; 0xa70 <__stack+0x171>
 9f2:	85 37       	cpi	r24, 0x75	; 117
 9f4:	21 f4       	brne	.+8      	; 0x9fe <__stack+0xff>
 9f6:	1f 7e       	andi	r17, 0xEF	; 239
 9f8:	2a e0       	ldi	r18, 0x0A	; 10
 9fa:	30 e0       	ldi	r19, 0x00	; 0
 9fc:	20 c0       	rjmp	.+64     	; 0xa3e <__stack+0x13f>
 9fe:	19 7f       	andi	r17, 0xF9	; 249
 a00:	8f 36       	cpi	r24, 0x6F	; 111
 a02:	a9 f0       	breq	.+42     	; 0xa2e <__stack+0x12f>
 a04:	80 37       	cpi	r24, 0x70	; 112
 a06:	20 f4       	brcc	.+8      	; 0xa10 <__stack+0x111>
 a08:	88 35       	cpi	r24, 0x58	; 88
 a0a:	09 f0       	breq	.+2      	; 0xa0e <__stack+0x10f>
 a0c:	ae c0       	rjmp	.+348    	; 0xb6a <__stack+0x26b>
 a0e:	0b c0       	rjmp	.+22     	; 0xa26 <__stack+0x127>
 a10:	80 37       	cpi	r24, 0x70	; 112
 a12:	21 f0       	breq	.+8      	; 0xa1c <__stack+0x11d>
 a14:	88 37       	cpi	r24, 0x78	; 120
 a16:	09 f0       	breq	.+2      	; 0xa1a <__stack+0x11b>
 a18:	a8 c0       	rjmp	.+336    	; 0xb6a <__stack+0x26b>
 a1a:	01 c0       	rjmp	.+2      	; 0xa1e <__stack+0x11f>
 a1c:	10 61       	ori	r17, 0x10	; 16
 a1e:	14 ff       	sbrs	r17, 4
 a20:	09 c0       	rjmp	.+18     	; 0xa34 <__stack+0x135>
 a22:	14 60       	ori	r17, 0x04	; 4
 a24:	07 c0       	rjmp	.+14     	; 0xa34 <__stack+0x135>
 a26:	14 ff       	sbrs	r17, 4
 a28:	08 c0       	rjmp	.+16     	; 0xa3a <__stack+0x13b>
 a2a:	16 60       	ori	r17, 0x06	; 6
 a2c:	06 c0       	rjmp	.+12     	; 0xa3a <__stack+0x13b>
 a2e:	28 e0       	ldi	r18, 0x08	; 8
 a30:	30 e0       	ldi	r19, 0x00	; 0
 a32:	05 c0       	rjmp	.+10     	; 0xa3e <__stack+0x13f>
 a34:	20 e1       	ldi	r18, 0x10	; 16
 a36:	30 e0       	ldi	r19, 0x00	; 0
 a38:	02 c0       	rjmp	.+4      	; 0xa3e <__stack+0x13f>
 a3a:	20 e1       	ldi	r18, 0x10	; 16
 a3c:	32 e0       	ldi	r19, 0x02	; 2
 a3e:	f5 01       	movw	r30, r10
 a40:	17 ff       	sbrs	r17, 7
 a42:	07 c0       	rjmp	.+14     	; 0xa52 <__stack+0x153>
 a44:	60 81       	ld	r22, Z
 a46:	71 81       	ldd	r23, Z+1	; 0x01
 a48:	82 81       	ldd	r24, Z+2	; 0x02
 a4a:	93 81       	ldd	r25, Z+3	; 0x03
 a4c:	44 e0       	ldi	r20, 0x04	; 4
 a4e:	50 e0       	ldi	r21, 0x00	; 0
 a50:	06 c0       	rjmp	.+12     	; 0xa5e <__stack+0x15f>
 a52:	60 81       	ld	r22, Z
 a54:	71 81       	ldd	r23, Z+1	; 0x01
 a56:	80 e0       	ldi	r24, 0x00	; 0
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	42 e0       	ldi	r20, 0x02	; 2
 a5c:	50 e0       	ldi	r21, 0x00	; 0
 a5e:	a4 0e       	add	r10, r20
 a60:	b5 1e       	adc	r11, r21
 a62:	a2 01       	movw	r20, r4
 a64:	0e 94 11 06 	call	0xc22	; 0xc22 <__ultoa_invert>
 a68:	d8 2e       	mov	r13, r24
 a6a:	d4 18       	sub	r13, r4
 a6c:	01 2f       	mov	r16, r17
 a6e:	0f 77       	andi	r16, 0x7F	; 127
 a70:	06 ff       	sbrs	r16, 6
 a72:	09 c0       	rjmp	.+18     	; 0xa86 <__stack+0x187>
 a74:	0e 7f       	andi	r16, 0xFE	; 254
 a76:	df 14       	cp	r13, r15
 a78:	30 f4       	brcc	.+12     	; 0xa86 <__stack+0x187>
 a7a:	04 ff       	sbrs	r16, 4
 a7c:	06 c0       	rjmp	.+12     	; 0xa8a <__stack+0x18b>
 a7e:	02 fd       	sbrc	r16, 2
 a80:	04 c0       	rjmp	.+8      	; 0xa8a <__stack+0x18b>
 a82:	0f 7e       	andi	r16, 0xEF	; 239
 a84:	02 c0       	rjmp	.+4      	; 0xa8a <__stack+0x18b>
 a86:	1d 2d       	mov	r17, r13
 a88:	01 c0       	rjmp	.+2      	; 0xa8c <__stack+0x18d>
 a8a:	1f 2d       	mov	r17, r15
 a8c:	80 2f       	mov	r24, r16
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	04 ff       	sbrs	r16, 4
 a92:	0c c0       	rjmp	.+24     	; 0xaac <__stack+0x1ad>
 a94:	fe 01       	movw	r30, r28
 a96:	ed 0d       	add	r30, r13
 a98:	f1 1d       	adc	r31, r1
 a9a:	20 81       	ld	r18, Z
 a9c:	20 33       	cpi	r18, 0x30	; 48
 a9e:	11 f4       	brne	.+4      	; 0xaa4 <__stack+0x1a5>
 aa0:	09 7e       	andi	r16, 0xE9	; 233
 aa2:	09 c0       	rjmp	.+18     	; 0xab6 <__stack+0x1b7>
 aa4:	02 ff       	sbrs	r16, 2
 aa6:	06 c0       	rjmp	.+12     	; 0xab4 <__stack+0x1b5>
 aa8:	1e 5f       	subi	r17, 0xFE	; 254
 aaa:	05 c0       	rjmp	.+10     	; 0xab6 <__stack+0x1b7>
 aac:	86 78       	andi	r24, 0x86	; 134
 aae:	90 70       	andi	r25, 0x00	; 0
 ab0:	00 97       	sbiw	r24, 0x00	; 0
 ab2:	09 f0       	breq	.+2      	; 0xab6 <__stack+0x1b7>
 ab4:	1f 5f       	subi	r17, 0xFF	; 255
 ab6:	80 2e       	mov	r8, r16
 ab8:	99 24       	eor	r9, r9
 aba:	03 fd       	sbrc	r16, 3
 abc:	12 c0       	rjmp	.+36     	; 0xae2 <__stack+0x1e3>
 abe:	00 ff       	sbrs	r16, 0
 ac0:	0d c0       	rjmp	.+26     	; 0xadc <__stack+0x1dd>
 ac2:	fd 2c       	mov	r15, r13
 ac4:	1e 15       	cp	r17, r14
 ac6:	50 f4       	brcc	.+20     	; 0xadc <__stack+0x1dd>
 ac8:	fe 0c       	add	r15, r14
 aca:	f1 1a       	sub	r15, r17
 acc:	1e 2d       	mov	r17, r14
 ace:	06 c0       	rjmp	.+12     	; 0xadc <__stack+0x1dd>
 ad0:	80 e2       	ldi	r24, 0x20	; 32
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	b3 01       	movw	r22, r6
 ad6:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 ada:	1f 5f       	subi	r17, 0xFF	; 255
 adc:	1e 15       	cp	r17, r14
 ade:	c0 f3       	brcs	.-16     	; 0xad0 <__stack+0x1d1>
 ae0:	04 c0       	rjmp	.+8      	; 0xaea <__stack+0x1eb>
 ae2:	1e 15       	cp	r17, r14
 ae4:	10 f4       	brcc	.+4      	; 0xaea <__stack+0x1eb>
 ae6:	e1 1a       	sub	r14, r17
 ae8:	01 c0       	rjmp	.+2      	; 0xaec <__stack+0x1ed>
 aea:	ee 24       	eor	r14, r14
 aec:	84 fe       	sbrs	r8, 4
 aee:	0f c0       	rjmp	.+30     	; 0xb0e <__stack+0x20f>
 af0:	80 e3       	ldi	r24, 0x30	; 48
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	b3 01       	movw	r22, r6
 af6:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 afa:	82 fe       	sbrs	r8, 2
 afc:	1f c0       	rjmp	.+62     	; 0xb3c <__stack+0x23d>
 afe:	81 fe       	sbrs	r8, 1
 b00:	03 c0       	rjmp	.+6      	; 0xb08 <__stack+0x209>
 b02:	88 e5       	ldi	r24, 0x58	; 88
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	10 c0       	rjmp	.+32     	; 0xb28 <__stack+0x229>
 b08:	88 e7       	ldi	r24, 0x78	; 120
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	0d c0       	rjmp	.+26     	; 0xb28 <__stack+0x229>
 b0e:	c4 01       	movw	r24, r8
 b10:	86 78       	andi	r24, 0x86	; 134
 b12:	90 70       	andi	r25, 0x00	; 0
 b14:	00 97       	sbiw	r24, 0x00	; 0
 b16:	91 f0       	breq	.+36     	; 0xb3c <__stack+0x23d>
 b18:	81 fc       	sbrc	r8, 1
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <__stack+0x221>
 b1c:	80 e2       	ldi	r24, 0x20	; 32
 b1e:	01 c0       	rjmp	.+2      	; 0xb22 <__stack+0x223>
 b20:	8b e2       	ldi	r24, 0x2B	; 43
 b22:	07 fd       	sbrc	r16, 7
 b24:	8d e2       	ldi	r24, 0x2D	; 45
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	b3 01       	movw	r22, r6
 b2a:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b2e:	06 c0       	rjmp	.+12     	; 0xb3c <__stack+0x23d>
 b30:	80 e3       	ldi	r24, 0x30	; 48
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	b3 01       	movw	r22, r6
 b36:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b3a:	fa 94       	dec	r15
 b3c:	df 14       	cp	r13, r15
 b3e:	c0 f3       	brcs	.-16     	; 0xb30 <__stack+0x231>
 b40:	da 94       	dec	r13
 b42:	f2 01       	movw	r30, r4
 b44:	ed 0d       	add	r30, r13
 b46:	f1 1d       	adc	r31, r1
 b48:	80 81       	ld	r24, Z
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	b3 01       	movw	r22, r6
 b4e:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b52:	dd 20       	and	r13, r13
 b54:	a9 f7       	brne	.-22     	; 0xb40 <__stack+0x241>
 b56:	06 c0       	rjmp	.+12     	; 0xb64 <__stack+0x265>
 b58:	80 e2       	ldi	r24, 0x20	; 32
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	b3 01       	movw	r22, r6
 b5e:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b62:	ea 94       	dec	r14
 b64:	ee 20       	and	r14, r14
 b66:	c1 f7       	brne	.-16     	; 0xb58 <__stack+0x259>
 b68:	40 ce       	rjmp	.-896    	; 0x7ea <vfprintf+0x28>
 b6a:	f3 01       	movw	r30, r6
 b6c:	86 81       	ldd	r24, Z+6	; 0x06
 b6e:	97 81       	ldd	r25, Z+7	; 0x07
 b70:	02 c0       	rjmp	.+4      	; 0xb76 <__stack+0x277>
 b72:	8f ef       	ldi	r24, 0xFF	; 255
 b74:	9f ef       	ldi	r25, 0xFF	; 255
 b76:	2d 96       	adiw	r28, 0x0d	; 13
 b78:	e2 e1       	ldi	r30, 0x12	; 18
 b7a:	0c 94 9f 06 	jmp	0xd3e	; 0xd3e <__epilogue_restores__>

00000b7e <strnlen_P>:
 b7e:	fc 01       	movw	r30, r24
 b80:	05 90       	lpm	r0, Z+
 b82:	61 50       	subi	r22, 0x01	; 1
 b84:	70 40       	sbci	r23, 0x00	; 0
 b86:	01 10       	cpse	r0, r1
 b88:	d8 f7       	brcc	.-10     	; 0xb80 <strnlen_P+0x2>
 b8a:	80 95       	com	r24
 b8c:	90 95       	com	r25
 b8e:	8e 0f       	add	r24, r30
 b90:	9f 1f       	adc	r25, r31
 b92:	08 95       	ret

00000b94 <strnlen>:
 b94:	fc 01       	movw	r30, r24
 b96:	61 50       	subi	r22, 0x01	; 1
 b98:	70 40       	sbci	r23, 0x00	; 0
 b9a:	01 90       	ld	r0, Z+
 b9c:	01 10       	cpse	r0, r1
 b9e:	d8 f7       	brcc	.-10     	; 0xb96 <strnlen+0x2>
 ba0:	80 95       	com	r24
 ba2:	90 95       	com	r25
 ba4:	8e 0f       	add	r24, r30
 ba6:	9f 1f       	adc	r25, r31
 ba8:	08 95       	ret

00000baa <strrev>:
 baa:	dc 01       	movw	r26, r24
 bac:	fc 01       	movw	r30, r24
 bae:	67 2f       	mov	r22, r23
 bb0:	71 91       	ld	r23, Z+
 bb2:	77 23       	and	r23, r23
 bb4:	e1 f7       	brne	.-8      	; 0xbae <strrev+0x4>
 bb6:	32 97       	sbiw	r30, 0x02	; 2
 bb8:	04 c0       	rjmp	.+8      	; 0xbc2 <strrev+0x18>
 bba:	7c 91       	ld	r23, X
 bbc:	6d 93       	st	X+, r22
 bbe:	70 83       	st	Z, r23
 bc0:	62 91       	ld	r22, -Z
 bc2:	ae 17       	cp	r26, r30
 bc4:	bf 07       	cpc	r27, r31
 bc6:	c8 f3       	brcs	.-14     	; 0xbba <strrev+0x10>
 bc8:	08 95       	ret

00000bca <fputc>:
 bca:	0f 93       	push	r16
 bcc:	1f 93       	push	r17
 bce:	cf 93       	push	r28
 bd0:	df 93       	push	r29
 bd2:	8c 01       	movw	r16, r24
 bd4:	eb 01       	movw	r28, r22
 bd6:	8b 81       	ldd	r24, Y+3	; 0x03
 bd8:	81 ff       	sbrs	r24, 1
 bda:	1b c0       	rjmp	.+54     	; 0xc12 <fputc+0x48>
 bdc:	82 ff       	sbrs	r24, 2
 bde:	0d c0       	rjmp	.+26     	; 0xbfa <fputc+0x30>
 be0:	2e 81       	ldd	r18, Y+6	; 0x06
 be2:	3f 81       	ldd	r19, Y+7	; 0x07
 be4:	8c 81       	ldd	r24, Y+4	; 0x04
 be6:	9d 81       	ldd	r25, Y+5	; 0x05
 be8:	28 17       	cp	r18, r24
 bea:	39 07       	cpc	r19, r25
 bec:	64 f4       	brge	.+24     	; 0xc06 <fputc+0x3c>
 bee:	e8 81       	ld	r30, Y
 bf0:	f9 81       	ldd	r31, Y+1	; 0x01
 bf2:	01 93       	st	Z+, r16
 bf4:	f9 83       	std	Y+1, r31	; 0x01
 bf6:	e8 83       	st	Y, r30
 bf8:	06 c0       	rjmp	.+12     	; 0xc06 <fputc+0x3c>
 bfa:	e8 85       	ldd	r30, Y+8	; 0x08
 bfc:	f9 85       	ldd	r31, Y+9	; 0x09
 bfe:	80 2f       	mov	r24, r16
 c00:	09 95       	icall
 c02:	00 97       	sbiw	r24, 0x00	; 0
 c04:	31 f4       	brne	.+12     	; 0xc12 <fputc+0x48>
 c06:	8e 81       	ldd	r24, Y+6	; 0x06
 c08:	9f 81       	ldd	r25, Y+7	; 0x07
 c0a:	01 96       	adiw	r24, 0x01	; 1
 c0c:	9f 83       	std	Y+7, r25	; 0x07
 c0e:	8e 83       	std	Y+6, r24	; 0x06
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <fputc+0x4c>
 c12:	0f ef       	ldi	r16, 0xFF	; 255
 c14:	1f ef       	ldi	r17, 0xFF	; 255
 c16:	c8 01       	movw	r24, r16
 c18:	df 91       	pop	r29
 c1a:	cf 91       	pop	r28
 c1c:	1f 91       	pop	r17
 c1e:	0f 91       	pop	r16
 c20:	08 95       	ret

00000c22 <__ultoa_invert>:
 c22:	fa 01       	movw	r30, r20
 c24:	aa 27       	eor	r26, r26
 c26:	28 30       	cpi	r18, 0x08	; 8
 c28:	51 f1       	breq	.+84     	; 0xc7e <__ultoa_invert+0x5c>
 c2a:	20 31       	cpi	r18, 0x10	; 16
 c2c:	81 f1       	breq	.+96     	; 0xc8e <__ultoa_invert+0x6c>
 c2e:	e8 94       	clt
 c30:	6f 93       	push	r22
 c32:	6e 7f       	andi	r22, 0xFE	; 254
 c34:	6e 5f       	subi	r22, 0xFE	; 254
 c36:	7f 4f       	sbci	r23, 0xFF	; 255
 c38:	8f 4f       	sbci	r24, 0xFF	; 255
 c3a:	9f 4f       	sbci	r25, 0xFF	; 255
 c3c:	af 4f       	sbci	r26, 0xFF	; 255
 c3e:	b1 e0       	ldi	r27, 0x01	; 1
 c40:	3e d0       	rcall	.+124    	; 0xcbe <__ultoa_invert+0x9c>
 c42:	b4 e0       	ldi	r27, 0x04	; 4
 c44:	3c d0       	rcall	.+120    	; 0xcbe <__ultoa_invert+0x9c>
 c46:	67 0f       	add	r22, r23
 c48:	78 1f       	adc	r23, r24
 c4a:	89 1f       	adc	r24, r25
 c4c:	9a 1f       	adc	r25, r26
 c4e:	a1 1d       	adc	r26, r1
 c50:	68 0f       	add	r22, r24
 c52:	79 1f       	adc	r23, r25
 c54:	8a 1f       	adc	r24, r26
 c56:	91 1d       	adc	r25, r1
 c58:	a1 1d       	adc	r26, r1
 c5a:	6a 0f       	add	r22, r26
 c5c:	71 1d       	adc	r23, r1
 c5e:	81 1d       	adc	r24, r1
 c60:	91 1d       	adc	r25, r1
 c62:	a1 1d       	adc	r26, r1
 c64:	20 d0       	rcall	.+64     	; 0xca6 <__ultoa_invert+0x84>
 c66:	09 f4       	brne	.+2      	; 0xc6a <__ultoa_invert+0x48>
 c68:	68 94       	set
 c6a:	3f 91       	pop	r19
 c6c:	2a e0       	ldi	r18, 0x0A	; 10
 c6e:	26 9f       	mul	r18, r22
 c70:	11 24       	eor	r1, r1
 c72:	30 19       	sub	r19, r0
 c74:	30 5d       	subi	r19, 0xD0	; 208
 c76:	31 93       	st	Z+, r19
 c78:	de f6       	brtc	.-74     	; 0xc30 <__ultoa_invert+0xe>
 c7a:	cf 01       	movw	r24, r30
 c7c:	08 95       	ret
 c7e:	46 2f       	mov	r20, r22
 c80:	47 70       	andi	r20, 0x07	; 7
 c82:	40 5d       	subi	r20, 0xD0	; 208
 c84:	41 93       	st	Z+, r20
 c86:	b3 e0       	ldi	r27, 0x03	; 3
 c88:	0f d0       	rcall	.+30     	; 0xca8 <__ultoa_invert+0x86>
 c8a:	c9 f7       	brne	.-14     	; 0xc7e <__ultoa_invert+0x5c>
 c8c:	f6 cf       	rjmp	.-20     	; 0xc7a <__ultoa_invert+0x58>
 c8e:	46 2f       	mov	r20, r22
 c90:	4f 70       	andi	r20, 0x0F	; 15
 c92:	40 5d       	subi	r20, 0xD0	; 208
 c94:	4a 33       	cpi	r20, 0x3A	; 58
 c96:	18 f0       	brcs	.+6      	; 0xc9e <__ultoa_invert+0x7c>
 c98:	49 5d       	subi	r20, 0xD9	; 217
 c9a:	31 fd       	sbrc	r19, 1
 c9c:	40 52       	subi	r20, 0x20	; 32
 c9e:	41 93       	st	Z+, r20
 ca0:	02 d0       	rcall	.+4      	; 0xca6 <__ultoa_invert+0x84>
 ca2:	a9 f7       	brne	.-22     	; 0xc8e <__ultoa_invert+0x6c>
 ca4:	ea cf       	rjmp	.-44     	; 0xc7a <__ultoa_invert+0x58>
 ca6:	b4 e0       	ldi	r27, 0x04	; 4
 ca8:	a6 95       	lsr	r26
 caa:	97 95       	ror	r25
 cac:	87 95       	ror	r24
 cae:	77 95       	ror	r23
 cb0:	67 95       	ror	r22
 cb2:	ba 95       	dec	r27
 cb4:	c9 f7       	brne	.-14     	; 0xca8 <__ultoa_invert+0x86>
 cb6:	00 97       	sbiw	r24, 0x00	; 0
 cb8:	61 05       	cpc	r22, r1
 cba:	71 05       	cpc	r23, r1
 cbc:	08 95       	ret
 cbe:	9b 01       	movw	r18, r22
 cc0:	ac 01       	movw	r20, r24
 cc2:	0a 2e       	mov	r0, r26
 cc4:	06 94       	lsr	r0
 cc6:	57 95       	ror	r21
 cc8:	47 95       	ror	r20
 cca:	37 95       	ror	r19
 ccc:	27 95       	ror	r18
 cce:	ba 95       	dec	r27
 cd0:	c9 f7       	brne	.-14     	; 0xcc4 <__ultoa_invert+0xa2>
 cd2:	62 0f       	add	r22, r18
 cd4:	73 1f       	adc	r23, r19
 cd6:	84 1f       	adc	r24, r20
 cd8:	95 1f       	adc	r25, r21
 cda:	a0 1d       	adc	r26, r0
 cdc:	08 95       	ret

00000cde <__udivmodhi4>:
 cde:	aa 1b       	sub	r26, r26
 ce0:	bb 1b       	sub	r27, r27
 ce2:	51 e1       	ldi	r21, 0x11	; 17
 ce4:	07 c0       	rjmp	.+14     	; 0xcf4 <__udivmodhi4_ep>

00000ce6 <__udivmodhi4_loop>:
 ce6:	aa 1f       	adc	r26, r26
 ce8:	bb 1f       	adc	r27, r27
 cea:	a6 17       	cp	r26, r22
 cec:	b7 07       	cpc	r27, r23
 cee:	10 f0       	brcs	.+4      	; 0xcf4 <__udivmodhi4_ep>
 cf0:	a6 1b       	sub	r26, r22
 cf2:	b7 0b       	sbc	r27, r23

00000cf4 <__udivmodhi4_ep>:
 cf4:	88 1f       	adc	r24, r24
 cf6:	99 1f       	adc	r25, r25
 cf8:	5a 95       	dec	r21
 cfa:	a9 f7       	brne	.-22     	; 0xce6 <__udivmodhi4_loop>
 cfc:	80 95       	com	r24
 cfe:	90 95       	com	r25
 d00:	bc 01       	movw	r22, r24
 d02:	cd 01       	movw	r24, r26
 d04:	08 95       	ret

00000d06 <__prologue_saves__>:
 d06:	2f 92       	push	r2
 d08:	3f 92       	push	r3
 d0a:	4f 92       	push	r4
 d0c:	5f 92       	push	r5
 d0e:	6f 92       	push	r6
 d10:	7f 92       	push	r7
 d12:	8f 92       	push	r8
 d14:	9f 92       	push	r9
 d16:	af 92       	push	r10
 d18:	bf 92       	push	r11
 d1a:	cf 92       	push	r12
 d1c:	df 92       	push	r13
 d1e:	ef 92       	push	r14
 d20:	ff 92       	push	r15
 d22:	0f 93       	push	r16
 d24:	1f 93       	push	r17
 d26:	cf 93       	push	r28
 d28:	df 93       	push	r29
 d2a:	cd b7       	in	r28, 0x3d	; 61
 d2c:	de b7       	in	r29, 0x3e	; 62
 d2e:	ca 1b       	sub	r28, r26
 d30:	db 0b       	sbc	r29, r27
 d32:	0f b6       	in	r0, 0x3f	; 63
 d34:	f8 94       	cli
 d36:	de bf       	out	0x3e, r29	; 62
 d38:	0f be       	out	0x3f, r0	; 63
 d3a:	cd bf       	out	0x3d, r28	; 61
 d3c:	09 94       	ijmp

00000d3e <__epilogue_restores__>:
 d3e:	2a 88       	ldd	r2, Y+18	; 0x12
 d40:	39 88       	ldd	r3, Y+17	; 0x11
 d42:	48 88       	ldd	r4, Y+16	; 0x10
 d44:	5f 84       	ldd	r5, Y+15	; 0x0f
 d46:	6e 84       	ldd	r6, Y+14	; 0x0e
 d48:	7d 84       	ldd	r7, Y+13	; 0x0d
 d4a:	8c 84       	ldd	r8, Y+12	; 0x0c
 d4c:	9b 84       	ldd	r9, Y+11	; 0x0b
 d4e:	aa 84       	ldd	r10, Y+10	; 0x0a
 d50:	b9 84       	ldd	r11, Y+9	; 0x09
 d52:	c8 84       	ldd	r12, Y+8	; 0x08
 d54:	df 80       	ldd	r13, Y+7	; 0x07
 d56:	ee 80       	ldd	r14, Y+6	; 0x06
 d58:	fd 80       	ldd	r15, Y+5	; 0x05
 d5a:	0c 81       	ldd	r16, Y+4	; 0x04
 d5c:	1b 81       	ldd	r17, Y+3	; 0x03
 d5e:	aa 81       	ldd	r26, Y+2	; 0x02
 d60:	b9 81       	ldd	r27, Y+1	; 0x01
 d62:	ce 0f       	add	r28, r30
 d64:	d1 1d       	adc	r29, r1
 d66:	0f b6       	in	r0, 0x3f	; 63
 d68:	f8 94       	cli
 d6a:	de bf       	out	0x3e, r29	; 62
 d6c:	0f be       	out	0x3f, r0	; 63
 d6e:	cd bf       	out	0x3d, r28	; 61
 d70:	ed 01       	movw	r28, r26
 d72:	08 95       	ret

00000d74 <_exit>:
 d74:	f8 94       	cli

00000d76 <__stop_program>:
 d76:	ff cf       	rjmp	.-2      	; 0xd76 <__stop_program>
