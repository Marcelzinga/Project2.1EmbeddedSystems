
Besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000462  00800100  0000184c  000018e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000184c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  00800562  00800562  00001d42  2**0
                  ALLOC
  3 .stab         00002a24  00000000  00000000  00001d44  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000779  00000000  00000000  00004768  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001e0  00000000  00000000  00004ee8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019aa  00000000  00000000  000050c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1e  00000000  00000000  00006a72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001158  00000000  00000000  00007490  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d4  00000000  00000000  000085e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004db  00000000  00000000  000089bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f14  00000000  00000000  00008e97  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00009dab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 9f 01 	jmp	0x33e	; 0x33e <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1905>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1903>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	15 e0       	ldi	r17, 0x05	; 5
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e4       	ldi	r30, 0x4C	; 76
     17e:	f8 e1       	ldi	r31, 0x18	; 24
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 36       	cpi	r26, 0x62	; 98
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	15 e0       	ldi	r17, 0x05	; 5
     18e:	a2 e6       	ldi	r26, 0x62	; 98
     190:	b5 e0       	ldi	r27, 0x05	; 5
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ae 3c       	cpi	r26, 0xCE	; 206
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 65 01 	call	0x2ca	; 0x2ca <main>
     1a0:	0c 94 24 0c 	jmp	0x1848	; 0x1848 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <ADC_init>:


void ADC_init()
{
	// enable the ADC & prescale = 128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
     1a8:	87 e8       	ldi	r24, 0x87	; 135
     1aa:	80 93 7a 00 	sts	0x007A, r24
	DIDR0 = (1<<ADC5D); //!!Disables pin 5? not sure what it does atm
     1ae:	80 e2       	ldi	r24, 0x20	; 32
     1b0:	80 93 7e 00 	sts	0x007E, r24
	
}
     1b4:	08 95       	ret

000001b6 <get_adc_value>:

// Dit was om te kijken of de code wat geoptimaliseerd kon worden
// Geen succes, dus gaat het via 2 aparte get adc's
uint8_t get_adc_value(uint8_t inputPin)
{
	ADCSRA |= (1<<ADSC); // start conversion
     1b6:	ea e7       	ldi	r30, 0x7A	; 122
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	80 64       	ori	r24, 0x40	; 64
     1be:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1c0:	80 81       	ld	r24, Z
     1c2:	86 fd       	sbrc	r24, 6
     1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <get_adc_value+0xa>
	return ADCH; // 8bit resolution, left adjusted
     1c6:	80 91 79 00 	lds	r24, 0x0079
	else{
		ADCSRA |= (1<<ADSC); // start conversion
		loop_until_bit_is_clear(ADCSRA, ADSC);
		return ADCH; // 8bit resolution, left adjusted
	}*/	
}
     1ca:	08 95       	ret

000001cc <get_temp_adc>:




uint8_t get_temp_adc(){
	ADMUX = (1 << REFS0) | (1 << MUX0) | (1 << MUX2); // port A5
     1cc:	85 e4       	ldi	r24, 0x45	; 69
     1ce:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC); // start conversion
     1d2:	ea e7       	ldi	r30, 0x7A	; 122
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	80 64       	ori	r24, 0x40	; 64
     1da:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1dc:	80 81       	ld	r24, Z
     1de:	86 fd       	sbrc	r24, 6
     1e0:	fd cf       	rjmp	.-6      	; 0x1dc <get_temp_adc+0x10>
	return ADC;
     1e2:	80 91 78 00 	lds	r24, 0x0078
     1e6:	90 91 79 00 	lds	r25, 0x0079
}
     1ea:	08 95       	ret

000001ec <get_light_adc>:

uint8_t get_light_adc(){
	ADMUX = (1 << REFS0) | (1 << MUX1)| (1<<ADLAR); // port A2
     1ec:	82 e6       	ldi	r24, 0x62	; 98
     1ee:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC); // start conversion
     1f2:	ea e7       	ldi	r30, 0x7A	; 122
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 81       	ld	r24, Z
     1f8:	80 64       	ori	r24, 0x40	; 64
     1fa:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1fc:	80 81       	ld	r24, Z
     1fe:	86 fd       	sbrc	r24, 6
     200:	fd cf       	rjmp	.-6      	; 0x1fc <get_light_adc+0x10>
	return ADCH; // 8bit resolution, left adjusted
     202:	80 91 79 00 	lds	r24, 0x0079
     206:	08 95       	ret

00000208 <init_ports>:

volatile int index = 0;
volatile int extraTime = 0;

void init_ports(void){
	DDRD = 0b11110111; //set PORTD4 as INPUT
     208:	87 ef       	ldi	r24, 0xF7	; 247
     20a:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF; //set PORTB as output
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	84 b9       	out	0x04, r24	; 4
}
     210:	08 95       	ret

00000212 <init_ext_int>:

void init_ext_int(void){
	EICRA =(1<<ISC10); //setting interrupt triggering logic change
     212:	84 e0       	ldi	r24, 0x04	; 4
     214:	80 93 69 00 	sts	0x0069, r24
	EIMSK =(1<<INT1); //enabling interrupt1
     218:	82 e0       	ldi	r24, 0x02	; 2
     21a:	8d bb       	out	0x1d, r24	; 29
	TCCR1A = 0;
     21c:	10 92 80 00 	sts	0x0080, r1
}
     220:	08 95       	ret

00000222 <getTemp>:
	omdat wanneer ik een if else statement gebruikte het niet de 
	gewenste resultaten toonde.
*/
double getTemp(){
	//uint8_t temp = get_adc_value(PC2);
	Volt = get_temp_adc() * 0.0048828125;
     222:	0e 94 e6 00 	call	0x1cc	; 0x1cc <get_temp_adc>
     226:	68 2f       	mov	r22, r24
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	80 e0       	ldi	r24, 0x00	; 0
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	0e 94 b0 05 	call	0xb60	; 0xb60 <__floatsisf>
     232:	20 e0       	ldi	r18, 0x00	; 0
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	40 ea       	ldi	r20, 0xA0	; 160
     238:	5b e3       	ldi	r21, 0x3B	; 59
     23a:	0e 94 3c 06 	call	0xc78	; 0xc78 <__mulsf3>
     23e:	26 2f       	mov	r18, r22
     240:	37 2f       	mov	r19, r23
     242:	f8 2f       	mov	r31, r24
     244:	e9 2f       	mov	r30, r25
     246:	46 2f       	mov	r20, r22
     248:	57 2f       	mov	r21, r23
     24a:	68 2f       	mov	r22, r24
     24c:	79 2f       	mov	r23, r25
     24e:	40 93 72 05 	sts	0x0572, r20
     252:	50 93 73 05 	sts	0x0573, r21
     256:	60 93 74 05 	sts	0x0574, r22
     25a:	70 93 75 05 	sts	0x0575, r23
	ADCRes = (Volt - 0.5) * 100;
     25e:	82 2f       	mov	r24, r18
     260:	93 2f       	mov	r25, r19
     262:	af 2f       	mov	r26, r31
     264:	be 2f       	mov	r27, r30
     266:	bc 01       	movw	r22, r24
     268:	cd 01       	movw	r24, r26
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	5f e3       	ldi	r21, 0x3F	; 63
     272:	0e 94 49 05 	call	0xa92	; 0xa92 <__subsf3>
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	48 ec       	ldi	r20, 0xC8	; 200
     27c:	52 e4       	ldi	r21, 0x42	; 66
     27e:	0e 94 3c 06 	call	0xc78	; 0xc78 <__mulsf3>
     282:	26 2f       	mov	r18, r22
     284:	37 2f       	mov	r19, r23
     286:	f8 2f       	mov	r31, r24
     288:	e9 2f       	mov	r30, r25
     28a:	46 2f       	mov	r20, r22
     28c:	57 2f       	mov	r21, r23
     28e:	68 2f       	mov	r22, r24
     290:	79 2f       	mov	r23, r25
     292:	40 93 9e 05 	sts	0x059E, r20
     296:	50 93 9f 05 	sts	0x059F, r21
     29a:	60 93 a0 05 	sts	0x05A0, r22
     29e:	70 93 a1 05 	sts	0x05A1, r23
	return ADCRes;
}
     2a2:	82 2f       	mov	r24, r18
     2a4:	93 2f       	mov	r25, r19
     2a6:	af 2f       	mov	r26, r31
     2a8:	be 2f       	mov	r27, r30
     2aa:	bc 01       	movw	r22, r24
     2ac:	cd 01       	movw	r24, r26
     2ae:	08 95       	ret

000002b0 <getLight>:

uint8_t getLight(){
	//uint8_t temp = get_adc_value(PC5);
	uint8_t temp = get_light_adc();
     2b0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <get_light_adc>
	return temp;
}
     2b4:	08 95       	ret

000002b6 <init_timer>:

void init_timer (void){
	//8bittimer
	TCCR0A = (1<< WGM01); // set CTC Bit
     2b6:	82 e0       	ldi	r24, 0x02	; 2
     2b8:	84 bd       	out	0x24, r24	; 36
	OCR0A = 156; // Dit geeft 1/10 miliseconde
     2ba:	9c e9       	ldi	r25, 0x9C	; 156
     2bc:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = (1<< OCIE0A);
     2be:	80 93 6e 00 	sts	0x006E, r24
	
	TCCR0B |= (1 << CS02) | (1 <<CS00); // start at 1024 prescaler
     2c2:	85 b5       	in	r24, 0x25	; 37
     2c4:	85 60       	ori	r24, 0x05	; 5
     2c6:	85 bd       	out	0x25, r24	; 37
	
}
     2c8:	08 95       	ret

000002ca <main>:
	TCCR1A = 0;
}

int main(void)
{
	init_scherm_ports();
     2ca:	0e 94 89 04 	call	0x912	; 0x912 <init_scherm_ports>
	init_timer();
     2ce:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <init_timer>
	ser_init();
     2d2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ser_init>
	ADC_init();
     2d6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ADC_init>
	
	init_ports();
     2da:	0e 94 04 01 	call	0x208	; 0x208 <init_ports>
	init_ext_int();
     2de:	0e 94 09 01 	call	0x212	; 0x212 <init_ext_int>
	
	sei(); // set external interrupt
     2e2:	78 94       	sei
	  
	//printf("An interrupt should be occuring every 30 seconds\n");
	
	while(1){
		protocolCom();
		PORTB = (1<<PINB0); //set trigger HIGH
     2e4:	c1 e0       	ldi	r28, 0x01	; 1
	sei(); // set external interrupt
	  
	//printf("An interrupt should be occuring every 30 seconds\n");
	
	while(1){
		protocolCom();
     2e6:	0e 94 aa 02 	call	0x554	; 0x554 <protocolCom>
		PORTB = (1<<PINB0); //set trigger HIGH
     2ea:	c5 b9       	out	0x05, r28	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ec:	8f ef       	ldi	r24, 0xFF	; 255
     2ee:	99 e6       	ldi	r25, 0x69	; 105
     2f0:	a8 e1       	ldi	r26, 0x18	; 24
     2f2:	81 50       	subi	r24, 0x01	; 1
     2f4:	90 40       	sbci	r25, 0x00	; 0
     2f6:	a0 40       	sbci	r26, 0x00	; 0
     2f8:	e1 f7       	brne	.-8      	; 0x2f2 <main+0x28>
     2fa:	00 c0       	rjmp	.+0      	; 0x2fc <main+0x32>
     2fc:	00 00       	nop
		_delay_ms(500); //500 ms delay
		PORTB &= ~(1<<PINB0); //set trigger LOW
     2fe:	28 98       	cbi	0x05, 0	; 5
		
		afstand = (pulse * 0.5) * 0.0023;
     300:	60 91 6c 05 	lds	r22, 0x056C
     304:	70 91 6d 05 	lds	r23, 0x056D
     308:	80 91 6e 05 	lds	r24, 0x056E
     30c:	90 91 6f 05 	lds	r25, 0x056F
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	40 e0       	ldi	r20, 0x00	; 0
     316:	5f e3       	ldi	r21, 0x3F	; 63
     318:	0e 94 3c 06 	call	0xc78	; 0xc78 <__mulsf3>
     31c:	29 e9       	ldi	r18, 0x99	; 153
     31e:	3b eb       	ldi	r19, 0xBB	; 187
     320:	46 e1       	ldi	r20, 0x16	; 22
     322:	5b e3       	ldi	r21, 0x3B	; 59
     324:	0e 94 3c 06 	call	0xc78	; 0xc78 <__mulsf3>
     328:	dc 01       	movw	r26, r24
     32a:	cb 01       	movw	r24, r22
     32c:	80 93 66 05 	sts	0x0566, r24
     330:	90 93 67 05 	sts	0x0567, r25
     334:	a0 93 68 05 	sts	0x0568, r26
     338:	b0 93 69 05 	sts	0x0569, r27
     33c:	d4 cf       	rjmp	.-88     	; 0x2e6 <main+0x1c>

0000033e <__vector_14>:

/*
Timerinterrupt geeft om de 5* seconden een interrupt
https://eleccelerator.com/avr-timer-calculator/
*/
ISR(TIMER0_COMPA_vect){
     33e:	1f 92       	push	r1
     340:	0f 92       	push	r0
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	0f 92       	push	r0
     346:	11 24       	eor	r1, r1
     348:	2f 93       	push	r18
     34a:	3f 93       	push	r19
     34c:	4f 93       	push	r20
     34e:	5f 93       	push	r21
     350:	6f 93       	push	r22
     352:	7f 93       	push	r23
     354:	8f 93       	push	r24
     356:	9f 93       	push	r25
     358:	af 93       	push	r26
     35a:	bf 93       	push	r27
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	ef 93       	push	r30
     362:	ff 93       	push	r31
	
	extraTime++;
     364:	80 91 62 05 	lds	r24, 0x0562
     368:	90 91 63 05 	lds	r25, 0x0563
     36c:	01 96       	adiw	r24, 0x01	; 1
     36e:	90 93 63 05 	sts	0x0563, r25
     372:	80 93 62 05 	sts	0x0562, r24
	
	if(extraTime>3000){
     376:	80 91 62 05 	lds	r24, 0x0562
     37a:	90 91 63 05 	lds	r25, 0x0563
     37e:	2b e0       	ldi	r18, 0x0B	; 11
     380:	89 3b       	cpi	r24, 0xB9	; 185
     382:	92 07       	cpc	r25, r18
     384:	0c f4       	brge	.+2      	; 0x388 <__vector_14+0x4a>
     386:	7b c0       	rjmp	.+246    	; 0x47e <__vector_14+0x140>
		printf("%i temperatuur=% 6.2f\n", index, getTemp());
     388:	c0 91 64 05 	lds	r28, 0x0564
     38c:	d0 91 65 05 	lds	r29, 0x0565
     390:	0e 94 11 01 	call	0x222	; 0x222 <getTemp>
     394:	dc 01       	movw	r26, r24
     396:	cb 01       	movw	r24, r22
     398:	ed b7       	in	r30, 0x3d	; 61
     39a:	fe b7       	in	r31, 0x3e	; 62
     39c:	38 97       	sbiw	r30, 0x08	; 8
     39e:	0f b6       	in	r0, 0x3f	; 63
     3a0:	f8 94       	cli
     3a2:	fe bf       	out	0x3e, r31	; 62
     3a4:	0f be       	out	0x3f, r0	; 63
     3a6:	ed bf       	out	0x3d, r30	; 61
     3a8:	4d b7       	in	r20, 0x3d	; 61
     3aa:	5e b7       	in	r21, 0x3e	; 62
     3ac:	4f 5f       	subi	r20, 0xFF	; 255
     3ae:	5f 4f       	sbci	r21, 0xFF	; 255
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	31 e0       	ldi	r19, 0x01	; 1
     3b4:	32 83       	std	Z+2, r19	; 0x02
     3b6:	21 83       	std	Z+1, r18	; 0x01
     3b8:	fa 01       	movw	r30, r20
     3ba:	d3 83       	std	Z+3, r29	; 0x03
     3bc:	c2 83       	std	Z+2, r28	; 0x02
     3be:	84 83       	std	Z+4, r24	; 0x04
     3c0:	95 83       	std	Z+5, r25	; 0x05
     3c2:	a6 83       	std	Z+6, r26	; 0x06
     3c4:	b7 83       	std	Z+7, r27	; 0x07
     3c6:	0e 94 b1 0b 	call	0x1762	; 0x1762 <printf>
     3ca:	8f e3       	ldi	r24, 0x3F	; 63
     3cc:	9c e9       	ldi	r25, 0x9C	; 156
     3ce:	01 97       	sbiw	r24, 0x01	; 1
     3d0:	f1 f7       	brne	.-4      	; 0x3ce <__vector_14+0x90>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <__vector_14+0x96>
     3d4:	00 00       	nop
		_delay_ms(10);
		printf("%i intensiteit=%d\n", index, getLight());
     3d6:	c0 91 64 05 	lds	r28, 0x0564
     3da:	d0 91 65 05 	lds	r29, 0x0565
     3de:	ad b7       	in	r26, 0x3d	; 61
     3e0:	be b7       	in	r27, 0x3e	; 62
     3e2:	18 96       	adiw	r26, 0x08	; 8
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	f8 94       	cli
     3e8:	be bf       	out	0x3e, r27	; 62
     3ea:	0f be       	out	0x3f, r0	; 63
     3ec:	ad bf       	out	0x3d, r26	; 61
     3ee:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     3f2:	00 d0       	rcall	.+0      	; 0x3f4 <__vector_14+0xb6>
     3f4:	00 d0       	rcall	.+0      	; 0x3f6 <__vector_14+0xb8>
     3f6:	00 d0       	rcall	.+0      	; 0x3f8 <__vector_14+0xba>
     3f8:	ed b7       	in	r30, 0x3d	; 61
     3fa:	fe b7       	in	r31, 0x3e	; 62
     3fc:	31 96       	adiw	r30, 0x01	; 1
     3fe:	27 e1       	ldi	r18, 0x17	; 23
     400:	31 e0       	ldi	r19, 0x01	; 1
     402:	ad b7       	in	r26, 0x3d	; 61
     404:	be b7       	in	r27, 0x3e	; 62
     406:	12 96       	adiw	r26, 0x02	; 2
     408:	3c 93       	st	X, r19
     40a:	2e 93       	st	-X, r18
     40c:	11 97       	sbiw	r26, 0x01	; 1
     40e:	d3 83       	std	Z+3, r29	; 0x03
     410:	c2 83       	std	Z+2, r28	; 0x02
     412:	84 83       	std	Z+4, r24	; 0x04
     414:	15 82       	std	Z+5, r1	; 0x05
     416:	0e 94 b1 0b 	call	0x1762	; 0x1762 <printf>
		
		if(getLight()> GRENS_LIGHT && (getOut() % 2) == 0)
     41a:	ed b7       	in	r30, 0x3d	; 61
     41c:	fe b7       	in	r31, 0x3e	; 62
     41e:	36 96       	adiw	r30, 0x06	; 6
     420:	0f b6       	in	r0, 0x3f	; 63
     422:	f8 94       	cli
     424:	fe bf       	out	0x3e, r31	; 62
     426:	0f be       	out	0x3f, r0	; 63
     428:	ed bf       	out	0x3d, r30	; 61
     42a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     42e:	90 91 2a 01 	lds	r25, 0x012A
     432:	98 17       	cp	r25, r24
     434:	30 f4       	brcc	.+12     	; 0x442 <__vector_14+0x104>
     436:	0e 94 84 04 	call	0x908	; 0x908 <getOut>
     43a:	80 fd       	sbrc	r24, 0
     43c:	02 c0       	rjmp	.+4      	; 0x442 <__vector_14+0x104>
		{
			uitrollen();
     43e:	0e 94 95 04 	call	0x92a	; 0x92a <uitrollen>
		}
		if(getLight()< GRENS_LIGHT && (getIn() % 2) == 1)
     442:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     446:	90 91 2a 01 	lds	r25, 0x012A
     44a:	89 17       	cp	r24, r25
     44c:	58 f4       	brcc	.+22     	; 0x464 <__vector_14+0x126>
     44e:	0e 94 7f 04 	call	0x8fe	; 0x8fe <getIn>
     452:	62 e0       	ldi	r22, 0x02	; 2
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	0e 94 2b 0a 	call	0x1456	; 0x1456 <__divmodhi4>
     45a:	81 30       	cpi	r24, 0x01	; 1
     45c:	91 05       	cpc	r25, r1
     45e:	11 f4       	brne	.+4      	; 0x464 <__vector_14+0x126>
		{
			oprollen();
     460:	0e 94 ef 04 	call	0x9de	; 0x9de <oprollen>
		}				
	
		index++;
     464:	80 91 64 05 	lds	r24, 0x0564
     468:	90 91 65 05 	lds	r25, 0x0565
     46c:	01 96       	adiw	r24, 0x01	; 1
     46e:	90 93 65 05 	sts	0x0565, r25
     472:	80 93 64 05 	sts	0x0564, r24
		
		// Resets de timer en de Totale timer ticks
		extraTime = 0;
     476:	10 92 63 05 	sts	0x0563, r1
     47a:	10 92 62 05 	sts	0x0562, r1
	}
}
     47e:	ff 91       	pop	r31
     480:	ef 91       	pop	r30
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	bf 91       	pop	r27
     488:	af 91       	pop	r26
     48a:	9f 91       	pop	r25
     48c:	8f 91       	pop	r24
     48e:	7f 91       	pop	r23
     490:	6f 91       	pop	r22
     492:	5f 91       	pop	r21
     494:	4f 91       	pop	r20
     496:	3f 91       	pop	r19
     498:	2f 91       	pop	r18
     49a:	0f 90       	pop	r0
     49c:	0f be       	out	0x3f, r0	; 63
     49e:	0f 90       	pop	r0
     4a0:	1f 90       	pop	r1
     4a2:	18 95       	reti

000004a4 <__vector_2>:

ISR(INT1_vect)
{
     4a4:	1f 92       	push	r1
     4a6:	0f 92       	push	r0
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	0f 92       	push	r0
     4ac:	11 24       	eor	r1, r1
     4ae:	2f 93       	push	r18
     4b0:	3f 93       	push	r19
     4b2:	4f 93       	push	r20
     4b4:	5f 93       	push	r21
     4b6:	6f 93       	push	r22
     4b8:	7f 93       	push	r23
     4ba:	8f 93       	push	r24
     4bc:	9f 93       	push	r25
     4be:	af 93       	push	r26
     4c0:	bf 93       	push	r27
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	ef 93       	push	r30
     4c8:	ff 93       	push	r31
	if(i == 1)
     4ca:	80 91 6a 05 	lds	r24, 0x056A
     4ce:	90 91 6b 05 	lds	r25, 0x056B
     4d2:	81 30       	cpi	r24, 0x01	; 1
     4d4:	91 05       	cpc	r25, r1
     4d6:	d1 f4       	brne	.+52     	; 0x50c <__vector_2+0x68>
	{
		TCCR1B = 0; //Stop counter
     4d8:	10 92 81 00 	sts	0x0081, r1
		pulse = TCNT1; //Write duration (TCNT1) to pulse
     4dc:	c4 e8       	ldi	r28, 0x84	; 132
     4de:	d0 e0       	ldi	r29, 0x00	; 0
     4e0:	68 81       	ld	r22, Y
     4e2:	79 81       	ldd	r23, Y+1	; 0x01
     4e4:	80 e0       	ldi	r24, 0x00	; 0
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	0e 94 ae 05 	call	0xb5c	; 0xb5c <__floatunsisf>
     4ec:	dc 01       	movw	r26, r24
     4ee:	cb 01       	movw	r24, r22
     4f0:	80 93 6c 05 	sts	0x056C, r24
     4f4:	90 93 6d 05 	sts	0x056D, r25
     4f8:	a0 93 6e 05 	sts	0x056E, r26
     4fc:	b0 93 6f 05 	sts	0x056F, r27
		TCNT1 = 0; //Reset duration
     500:	19 82       	std	Y+1, r1	; 0x01
     502:	18 82       	st	Y, r1
		i = 0; //Reset counter
     504:	10 92 6b 05 	sts	0x056B, r1
     508:	10 92 6a 05 	sts	0x056A, r1
	}

	if(i==0)
     50c:	80 91 6a 05 	lds	r24, 0x056A
     510:	90 91 6b 05 	lds	r25, 0x056B
     514:	00 97       	sbiw	r24, 0x00	; 0
     516:	59 f4       	brne	.+22     	; 0x52e <__vector_2+0x8a>
	{
		TCCR1B |= (1<<CS10); //Start counter
     518:	e1 e8       	ldi	r30, 0x81	; 129
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	80 81       	ld	r24, Z
     51e:	81 60       	ori	r24, 0x01	; 1
     520:	80 83       	st	Z, r24
		i = 1;
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	90 93 6b 05 	sts	0x056B, r25
     52a:	80 93 6a 05 	sts	0x056A, r24
	}
     52e:	ff 91       	pop	r31
     530:	ef 91       	pop	r30
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	bf 91       	pop	r27
     538:	af 91       	pop	r26
     53a:	9f 91       	pop	r25
     53c:	8f 91       	pop	r24
     53e:	7f 91       	pop	r23
     540:	6f 91       	pop	r22
     542:	5f 91       	pop	r21
     544:	4f 91       	pop	r20
     546:	3f 91       	pop	r19
     548:	2f 91       	pop	r18
     54a:	0f 90       	pop	r0
     54c:	0f be       	out	0x3f, r0	; 63
     54e:	0f 90       	pop	r0
     550:	1f 90       	pop	r1
     552:	18 95       	reti

00000554 <protocolCom>:
#include "Zonnescherm.h"


char in_buf[30]; // Invoerbuffer

void protocolCom(){
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
	//while (1) {
		ser_write("Wat kan ik voor u doen?");
     558:	8b e2       	ldi	r24, 0x2B	; 43
     55a:	91 e0       	ldi	r25, 0x01	; 1
     55c:	0e 94 2d 04 	call	0x85a	; 0x85a <ser_write>
		ser_readln(in_buf, sizeof(in_buf), 1);
     560:	c6 ea       	ldi	r28, 0xA6	; 166
     562:	d5 e0       	ldi	r29, 0x05	; 5
     564:	ce 01       	movw	r24, r28
     566:	6e e1       	ldi	r22, 0x1E	; 30
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	41 e0       	ldi	r20, 0x01	; 1
     56c:	0e 94 45 04 	call	0x88a	; 0x88a <ser_readln>
/**********************************************************Zonnescherm uitrollen************************************************************/
			if (strcmp("Uitrollen", in_buf) == 0){ //Wanneer uitrollen wordt gerequest
     570:	83 e4       	ldi	r24, 0x43	; 67
     572:	91 e0       	ldi	r25, 0x01	; 1
     574:	be 01       	movw	r22, r28
     576:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     57a:	28 2f       	mov	r18, r24
     57c:	39 2f       	mov	r19, r25
     57e:	21 15       	cp	r18, r1
     580:	31 05       	cpc	r19, r1
     582:	a1 f4       	brne	.+40     	; 0x5ac <protocolCom+0x58>
				if ((getOut() % 2) == 1){
     584:	0e 94 84 04 	call	0x908	; 0x908 <getOut>
     588:	62 e0       	ldi	r22, 0x02	; 2
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	0e 94 2b 0a 	call	0x1456	; 0x1456 <__divmodhi4>
     590:	81 30       	cpi	r24, 0x01	; 1
     592:	91 05       	cpc	r25, r1
     594:	21 f4       	brne	.+8      	; 0x59e <protocolCom+0x4a>
					ser_writeln("Zonnescherm is al uitgerold!");
     596:	8d e4       	ldi	r24, 0x4D	; 77
     598:	91 e0       	ldi	r25, 0x01	; 1
     59a:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
				} if((getOut() % 2) == 0){
     59e:	0e 94 84 04 	call	0x908	; 0x908 <getOut>
     5a2:	80 fd       	sbrc	r24, 0
     5a4:	21 c0       	rjmp	.+66     	; 0x5e8 <protocolCom+0x94>
					uitrollen();
     5a6:	0e 94 95 04 	call	0x92a	; 0x92a <uitrollen>
     5aa:	1e c0       	rjmp	.+60     	; 0x5e8 <protocolCom+0x94>
				}				
			}
/*---------------------------------------------------------Zonnescherm oprollen------------------------------------------------------------*/ 
			else if(strcmp("Oprollen", in_buf) == 0){
     5ac:	8a e6       	ldi	r24, 0x6A	; 106
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	66 ea       	ldi	r22, 0xA6	; 166
     5b2:	75 e0       	ldi	r23, 0x05	; 5
     5b4:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     5b8:	28 2f       	mov	r18, r24
     5ba:	39 2f       	mov	r19, r25
     5bc:	21 15       	cp	r18, r1
     5be:	31 05       	cpc	r19, r1
     5c0:	99 f4       	brne	.+38     	; 0x5e8 <protocolCom+0x94>
				if ((getIn() % 2) == 0){
     5c2:	0e 94 7f 04 	call	0x8fe	; 0x8fe <getIn>
     5c6:	80 fd       	sbrc	r24, 0
     5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <protocolCom+0x7e>
					ser_writeln("Zonnescherm is al opgerold!");
     5ca:	83 e7       	ldi	r24, 0x73	; 115
     5cc:	91 e0       	ldi	r25, 0x01	; 1
     5ce:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
				} if((getIn() % 2) == 1){
     5d2:	0e 94 7f 04 	call	0x8fe	; 0x8fe <getIn>
     5d6:	62 e0       	ldi	r22, 0x02	; 2
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	0e 94 2b 0a 	call	0x1456	; 0x1456 <__divmodhi4>
     5de:	81 30       	cpi	r24, 0x01	; 1
     5e0:	91 05       	cpc	r25, r1
     5e2:	11 f4       	brne	.+4      	; 0x5e8 <protocolCom+0x94>
					oprollen();
     5e4:	0e 94 ef 04 	call	0x9de	; 0x9de <oprollen>
				}				
			} 
/**********************************************************Zonnescherm uitrollen************************************************************/
			if (strcmp("STATUS", in_buf) == 0){ //Wanneer uitrollen wordt gerequest
     5e8:	8f e8       	ldi	r24, 0x8F	; 143
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	66 ea       	ldi	r22, 0xA6	; 166
     5ee:	75 e0       	ldi	r23, 0x05	; 5
     5f0:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     5f4:	28 2f       	mov	r18, r24
     5f6:	39 2f       	mov	r19, r25
     5f8:	21 15       	cp	r18, r1
     5fa:	31 05       	cpc	r19, r1
     5fc:	09 f4       	brne	.+2      	; 0x600 <protocolCom+0xac>
     5fe:	fa c0       	rjmp	.+500    	; 0x7f4 <protocolCom+0x2a0>

			}
/*--------------------------------------------------------Get Temperatuur -----------------------------------------------------------------*/
			else if(strcmp("GET_TEMP", in_buf) == 0){
     600:	86 e9       	ldi	r24, 0x96	; 150
     602:	91 e0       	ldi	r25, 0x01	; 1
     604:	66 ea       	ldi	r22, 0xA6	; 166
     606:	75 e0       	ldi	r23, 0x05	; 5
     608:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     60c:	28 2f       	mov	r18, r24
     60e:	39 2f       	mov	r19, r25
     610:	21 15       	cp	r18, r1
     612:	31 05       	cpc	r19, r1
     614:	99 f4       	brne	.+38     	; 0x63c <protocolCom+0xe8>
				printf("202 TEMP= % 6.2f \n", getTemp());
     616:	0e 94 11 01 	call	0x222	; 0x222 <getTemp>
     61a:	00 d0       	rcall	.+0      	; 0x61c <protocolCom+0xc8>
     61c:	00 d0       	rcall	.+0      	; 0x61e <protocolCom+0xca>
     61e:	2f e9       	ldi	r18, 0x9F	; 159
     620:	31 e0       	ldi	r19, 0x01	; 1
     622:	ed b7       	in	r30, 0x3d	; 61
     624:	fe b7       	in	r31, 0x3e	; 62
     626:	32 83       	std	Z+2, r19	; 0x02
     628:	21 83       	std	Z+1, r18	; 0x01
     62a:	94 83       	std	Z+4, r25	; 0x04
     62c:	83 83       	std	Z+3, r24	; 0x03
     62e:	0e 94 b1 0b 	call	0x1762	; 0x1762 <printf>
     632:	0f 90       	pop	r0
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	dc c0       	rjmp	.+440    	; 0x7f4 <protocolCom+0x2a0>
				char ADCOut[24];
				sprintf(ADCOut, "% 6.2f", ADCRes);
				printf("%f", ADCRes);
				ser_write("202 TEMP: "); ser_writeln(ADCOut);*/
			}
			else if(strcmp("GET_GRENS_TEMP", in_buf) == 0){
     63c:	82 eb       	ldi	r24, 0xB2	; 178
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	66 ea       	ldi	r22, 0xA6	; 166
     642:	75 e0       	ldi	r23, 0x05	; 5
     644:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     648:	28 2f       	mov	r18, r24
     64a:	39 2f       	mov	r19, r25
     64c:	21 15       	cp	r18, r1
     64e:	31 05       	cpc	r19, r1
     650:	09 f4       	brne	.+2      	; 0x654 <protocolCom+0x100>
     652:	d0 c0       	rjmp	.+416    	; 0x7f4 <protocolCom+0x2a0>
				
			}
			else if(strcmp("SET_GRENS_TEMP(Z)", in_buf) == 0){
     654:	81 ec       	ldi	r24, 0xC1	; 193
     656:	91 e0       	ldi	r25, 0x01	; 1
     658:	66 ea       	ldi	r22, 0xA6	; 166
     65a:	75 e0       	ldi	r23, 0x05	; 5
     65c:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     660:	28 2f       	mov	r18, r24
     662:	39 2f       	mov	r19, r25
     664:	21 15       	cp	r18, r1
     666:	31 05       	cpc	r19, r1
     668:	09 f4       	brne	.+2      	; 0x66c <protocolCom+0x118>
     66a:	c4 c0       	rjmp	.+392    	; 0x7f4 <protocolCom+0x2a0>
				
			}
/*----------------------------------------------------------Get Lichtintensiteit---------------------------------------------------------------------*/
			else if(strcmp("GET_LIGHT", in_buf) == 0){
     66c:	83 ed       	ldi	r24, 0xD3	; 211
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	66 ea       	ldi	r22, 0xA6	; 166
     672:	75 e0       	ldi	r23, 0x05	; 5
     674:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     678:	28 2f       	mov	r18, r24
     67a:	39 2f       	mov	r19, r25
     67c:	21 15       	cp	r18, r1
     67e:	31 05       	cpc	r19, r1
     680:	99 f4       	brne	.+38     	; 0x6a8 <protocolCom+0x154>
				printf("202 LIGHT %i \n", getLight());
     682:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     686:	00 d0       	rcall	.+0      	; 0x688 <protocolCom+0x134>
     688:	00 d0       	rcall	.+0      	; 0x68a <protocolCom+0x136>
     68a:	2d ed       	ldi	r18, 0xDD	; 221
     68c:	31 e0       	ldi	r19, 0x01	; 1
     68e:	ed b7       	in	r30, 0x3d	; 61
     690:	fe b7       	in	r31, 0x3e	; 62
     692:	32 83       	std	Z+2, r19	; 0x02
     694:	21 83       	std	Z+1, r18	; 0x01
     696:	94 83       	std	Z+4, r25	; 0x04
     698:	83 83       	std	Z+3, r24	; 0x03
     69a:	0e 94 b1 0b 	call	0x1762	; 0x1762 <printf>
     69e:	0f 90       	pop	r0
     6a0:	0f 90       	pop	r0
     6a2:	0f 90       	pop	r0
     6a4:	0f 90       	pop	r0
     6a6:	a6 c0       	rjmp	.+332    	; 0x7f4 <protocolCom+0x2a0>
			}
			
			else if(strcmp("GET_GRENS_LIGHT", in_buf) == 0){
     6a8:	8c ee       	ldi	r24, 0xEC	; 236
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	66 ea       	ldi	r22, 0xA6	; 166
     6ae:	75 e0       	ldi	r23, 0x05	; 5
     6b0:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     6b4:	28 2f       	mov	r18, r24
     6b6:	39 2f       	mov	r19, r25
     6b8:	21 15       	cp	r18, r1
     6ba:	31 05       	cpc	r19, r1
     6bc:	09 f4       	brne	.+2      	; 0x6c0 <protocolCom+0x16c>
     6be:	9a c0       	rjmp	.+308    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("SET_GRENS_LIGHT(Z)", in_buf) == 0){
     6c0:	8c ef       	ldi	r24, 0xFC	; 252
     6c2:	91 e0       	ldi	r25, 0x01	; 1
     6c4:	66 ea       	ldi	r22, 0xA6	; 166
     6c6:	75 e0       	ldi	r23, 0x05	; 5
     6c8:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     6cc:	28 2f       	mov	r18, r24
     6ce:	39 2f       	mov	r19, r25
     6d0:	21 15       	cp	r18, r1
     6d2:	31 05       	cpc	r19, r1
     6d4:	09 f4       	brne	.+2      	; 0x6d8 <protocolCom+0x184>
     6d6:	8e c0       	rjmp	.+284    	; 0x7f4 <protocolCom+0x2a0>

			}
/*----------------------------------------------------------Afstandsensor---------------------------------------------------------------------*/
			else if(strcmp("GET_MAX_UNROLL", in_buf) == 0){
     6d8:	8f e0       	ldi	r24, 0x0F	; 15
     6da:	92 e0       	ldi	r25, 0x02	; 2
     6dc:	66 ea       	ldi	r22, 0xA6	; 166
     6de:	75 e0       	ldi	r23, 0x05	; 5
     6e0:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     6e4:	28 2f       	mov	r18, r24
     6e6:	39 2f       	mov	r19, r25
     6e8:	21 15       	cp	r18, r1
     6ea:	31 05       	cpc	r19, r1
     6ec:	09 f4       	brne	.+2      	; 0x6f0 <protocolCom+0x19c>
     6ee:	82 c0       	rjmp	.+260    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("SET_MAX_UNROLL(Z)", in_buf) == 0){
     6f0:	8e e1       	ldi	r24, 0x1E	; 30
     6f2:	92 e0       	ldi	r25, 0x02	; 2
     6f4:	66 ea       	ldi	r22, 0xA6	; 166
     6f6:	75 e0       	ldi	r23, 0x05	; 5
     6f8:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     6fc:	28 2f       	mov	r18, r24
     6fe:	39 2f       	mov	r19, r25
     700:	21 15       	cp	r18, r1
     702:	31 05       	cpc	r19, r1
     704:	09 f4       	brne	.+2      	; 0x708 <protocolCom+0x1b4>
     706:	76 c0       	rjmp	.+236    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("GET_MIN_UNROLL", in_buf) == 0){
     708:	80 e3       	ldi	r24, 0x30	; 48
     70a:	92 e0       	ldi	r25, 0x02	; 2
     70c:	66 ea       	ldi	r22, 0xA6	; 166
     70e:	75 e0       	ldi	r23, 0x05	; 5
     710:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     714:	28 2f       	mov	r18, r24
     716:	39 2f       	mov	r19, r25
     718:	21 15       	cp	r18, r1
     71a:	31 05       	cpc	r19, r1
     71c:	09 f4       	brne	.+2      	; 0x720 <protocolCom+0x1cc>
     71e:	6a c0       	rjmp	.+212    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("SET_MIN_UNROLL(Z)", in_buf) == 0){
     720:	8f e3       	ldi	r24, 0x3F	; 63
     722:	92 e0       	ldi	r25, 0x02	; 2
     724:	66 ea       	ldi	r22, 0xA6	; 166
     726:	75 e0       	ldi	r23, 0x05	; 5
     728:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     72c:	28 2f       	mov	r18, r24
     72e:	39 2f       	mov	r19, r25
     730:	21 15       	cp	r18, r1
     732:	31 05       	cpc	r19, r1
     734:	09 f4       	brne	.+2      	; 0x738 <protocolCom+0x1e4>
     736:	5e c0       	rjmp	.+188    	; 0x7f4 <protocolCom+0x2a0>

			}
/*----------------------------------------------------------Information---------------------------------------------------------------------*/
			else if(strcmp("GET_NAME", in_buf) == 0){
     738:	81 e5       	ldi	r24, 0x51	; 81
     73a:	92 e0       	ldi	r25, 0x02	; 2
     73c:	66 ea       	ldi	r22, 0xA6	; 166
     73e:	75 e0       	ldi	r23, 0x05	; 5
     740:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     744:	28 2f       	mov	r18, r24
     746:	39 2f       	mov	r19, r25
     748:	21 15       	cp	r18, r1
     74a:	31 05       	cpc	r19, r1
     74c:	09 f4       	brne	.+2      	; 0x750 <protocolCom+0x1fc>
     74e:	52 c0       	rjmp	.+164    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("SET_NAME", in_buf) == 0){
     750:	8a e5       	ldi	r24, 0x5A	; 90
     752:	92 e0       	ldi	r25, 0x02	; 2
     754:	66 ea       	ldi	r22, 0xA6	; 166
     756:	75 e0       	ldi	r23, 0x05	; 5
     758:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     75c:	28 2f       	mov	r18, r24
     75e:	39 2f       	mov	r19, r25
     760:	21 15       	cp	r18, r1
     762:	31 05       	cpc	r19, r1
     764:	09 f4       	brne	.+2      	; 0x768 <protocolCom+0x214>
     766:	46 c0       	rjmp	.+140    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("GET_LOCATION", in_buf) == 0){
     768:	83 e6       	ldi	r24, 0x63	; 99
     76a:	92 e0       	ldi	r25, 0x02	; 2
     76c:	66 ea       	ldi	r22, 0xA6	; 166
     76e:	75 e0       	ldi	r23, 0x05	; 5
     770:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     774:	28 2f       	mov	r18, r24
     776:	39 2f       	mov	r19, r25
     778:	21 15       	cp	r18, r1
     77a:	31 05       	cpc	r19, r1
     77c:	d9 f1       	breq	.+118    	; 0x7f4 <protocolCom+0x2a0>

			}
			else if(strcmp("SET_LOCATION(Z)", in_buf) == 0){
     77e:	80 e7       	ldi	r24, 0x70	; 112
     780:	92 e0       	ldi	r25, 0x02	; 2
     782:	66 ea       	ldi	r22, 0xA6	; 166
     784:	75 e0       	ldi	r23, 0x05	; 5
     786:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     78a:	28 2f       	mov	r18, r24
     78c:	39 2f       	mov	r19, r25
     78e:	21 15       	cp	r18, r1
     790:	31 05       	cpc	r19, r1
     792:	81 f1       	breq	.+96     	; 0x7f4 <protocolCom+0x2a0>

			}

/*****************************************************************Exit**********************************************************************/			
			else if(strcmp("Exit", in_buf) == 0){
     794:	80 e8       	ldi	r24, 0x80	; 128
     796:	92 e0       	ldi	r25, 0x02	; 2
     798:	66 ea       	ldi	r22, 0xA6	; 166
     79a:	75 e0       	ldi	r23, 0x05	; 5
     79c:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     7a0:	28 2f       	mov	r18, r24
     7a2:	39 2f       	mov	r19, r25
     7a4:	21 15       	cp	r18, r1
     7a6:	31 05       	cpc	r19, r1
     7a8:	89 f4       	brne	.+34     	; 0x7cc <protocolCom+0x278>
				if ((getOut() % 2) == 1){
     7aa:	0e 94 84 04 	call	0x908	; 0x908 <getOut>
     7ae:	62 e0       	ldi	r22, 0x02	; 2
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	0e 94 2b 0a 	call	0x1456	; 0x1456 <__divmodhi4>
     7b6:	81 30       	cpi	r24, 0x01	; 1
     7b8:	91 05       	cpc	r25, r1
     7ba:	11 f4       	brne	.+4      	; 0x7c0 <protocolCom+0x26c>
					uitrollen();					
     7bc:	0e 94 95 04 	call	0x92a	; 0x92a <uitrollen>
				}
				ser_writeln("221 Bye!"); //Groeting wanneer je het programma sluit
     7c0:	85 e8       	ldi	r24, 0x85	; 133
     7c2:	92 e0       	ldi	r25, 0x02	; 2
     7c4:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
				abort();
     7c8:	0e 94 89 0a 	call	0x1512	; 0x1512 <abort>
			}

/*----------------------------------------------------------------Help---------------------------------------------------------------------*/
			else if(strcmp("Help", in_buf) == 0){
     7cc:	8e e8       	ldi	r24, 0x8E	; 142
     7ce:	92 e0       	ldi	r25, 0x02	; 2
     7d0:	66 ea       	ldi	r22, 0xA6	; 166
     7d2:	75 e0       	ldi	r23, 0x05	; 5
     7d4:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <strcmp>
     7d8:	28 2f       	mov	r18, r24
     7da:	39 2f       	mov	r19, r25
     7dc:	21 15       	cp	r18, r1
     7de:	31 05       	cpc	r19, r1
     7e0:	29 f4       	brne	.+10     	; 0x7ec <protocolCom+0x298>
				ser_writeln(
     7e2:	83 e9       	ldi	r24, 0x93	; 147
     7e4:	92 e0       	ldi	r25, 0x02	; 2
     7e6:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
     7ea:	04 c0       	rjmp	.+8      	; 0x7f4 <protocolCom+0x2a0>
				"Exit\t\t\tSluit het programma\n"
				);
			}
/*********************************************************Commando niet gevonden************************************************************/		
			else{
				ser_writeln("510 Commando niet gevonden! Type Help voor alle commando's\n");
     7ec:	82 ed       	ldi	r24, 0xD2	; 210
     7ee:	94 e0       	ldi	r25, 0x04	; 4
     7f0:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
			}		
}
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	08 95       	ret

000007fa <ser_init>:

FILE uart_output = FDEV_SETUP_STREAM(ser_stdio_putchar, NULL, _FDEV_SETUP_WRITE);

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
     7fa:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
     7fe:	83 e3       	ldi	r24, 0x33	; 51
     800:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
     804:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
     808:	88 e1       	ldi	r24, 0x18	; 24
     80a:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
     80e:	86 e0       	ldi	r24, 0x06	; 6
     810:	80 93 c2 00 	sts	0x00C2, r24
	// Setup stdout
	stdout=&uart_output;
     814:	8e e0       	ldi	r24, 0x0E	; 14
     816:	95 e0       	ldi	r25, 0x05	; 5
     818:	90 93 cb 05 	sts	0x05CB, r25
     81c:	80 93 ca 05 	sts	0x05CA, r24
}
     820:	08 95       	ret

00000822 <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
     822:	e0 ec       	ldi	r30, 0xC0	; 192
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	90 81       	ld	r25, Z
     828:	95 ff       	sbrs	r25, 5
     82a:	fd cf       	rjmp	.-6      	; 0x826 <ser_transmit+0x4>
	// send the data
	UDR0 = data;
     82c:	80 93 c6 00 	sts	0x00C6, r24
}
     830:	08 95       	ret

00000832 <ser_stdio_putchar>:
// output on USB = PD1 = board pin 1
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

// Getchar en putchar tbv. stdio.h
void ser_stdio_putchar(char c, FILE *stream) {
     832:	cf 93       	push	r28
     834:	c8 2f       	mov	r28, r24
	if (c=='\n') {
     836:	8a 30       	cpi	r24, 0x0A	; 10
     838:	19 f4       	brne	.+6      	; 0x840 <ser_stdio_putchar+0xe>
		ser_transmit('\r');
     83a:	8d e0       	ldi	r24, 0x0D	; 13
     83c:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>
	}
	ser_transmit(c);
     840:	8c 2f       	mov	r24, r28
     842:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>
}
     846:	cf 91       	pop	r28
     848:	08 95       	ret

0000084a <ser_receive>:
	UDR0 = data;
}

// Low level receive
uint8_t ser_receive() {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
     84a:	e0 ec       	ldi	r30, 0xC0	; 192
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	80 81       	ld	r24, Z
     850:	88 23       	and	r24, r24
     852:	ec f7       	brge	.-6      	; 0x84e <ser_receive+0x4>
	return UDR0;
     854:	80 91 c6 00 	lds	r24, 0x00C6
}
     858:	08 95       	ret

0000085a <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
     85a:	cf 93       	push	r28
     85c:	df 93       	push	r29
     85e:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
     860:	88 81       	ld	r24, Y
     862:	88 23       	and	r24, r24
     864:	31 f0       	breq	.+12     	; 0x872 <ser_write+0x18>
	return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
     866:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
     868:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
     86c:	89 91       	ld	r24, Y+
     86e:	88 23       	and	r24, r24
     870:	d9 f7       	brne	.-10     	; 0x868 <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
     872:	df 91       	pop	r29
     874:	cf 91       	pop	r28
     876:	08 95       	ret

00000878 <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
     878:	0e 94 2d 04 	call	0x85a	; 0x85a <ser_write>
	ser_transmit('\r');
     87c:	8d e0       	ldi	r24, 0x0D	; 13
     87e:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>
	ser_transmit('\n');
     882:	8a e0       	ldi	r24, 0x0A	; 10
     884:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>
}
     888:	08 95       	ret

0000088a <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
     88a:	af 92       	push	r10
     88c:	bf 92       	push	r11
     88e:	cf 92       	push	r12
     890:	df 92       	push	r13
     892:	ef 92       	push	r14
     894:	ff 92       	push	r15
     896:	0f 93       	push	r16
     898:	1f 93       	push	r17
     89a:	cf 93       	push	r28
     89c:	df 93       	push	r29
     89e:	5c 01       	movw	r10, r24
     8a0:	d4 2f       	mov	r29, r20
	int i=0;
     8a2:	6c 01       	movw	r12, r24
     8a4:	ee 24       	eor	r14, r14
     8a6:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     8a8:	8b 01       	movw	r16, r22
     8aa:	01 50       	subi	r16, 0x01	; 1
     8ac:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
     8ae:	0e 94 25 04 	call	0x84a	; 0x84a <ser_receive>
     8b2:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
     8b4:	dd 23       	and	r29, r29
     8b6:	11 f0       	breq	.+4      	; 0x8bc <ser_readln+0x32>
     8b8:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>
		if (c=='\r') {
     8bc:	cd 30       	cpi	r28, 0x0D	; 13
     8be:	31 f4       	brne	.+12     	; 0x8cc <ser_readln+0x42>
			if (echo) ser_transmit('\n');
     8c0:	dd 23       	and	r29, r29
     8c2:	71 f0       	breq	.+28     	; 0x8e0 <ser_readln+0x56>
     8c4:	8a e0       	ldi	r24, 0x0A	; 10
     8c6:	0e 94 11 04 	call	0x822	; 0x822 <ser_transmit>
     8ca:	0a c0       	rjmp	.+20     	; 0x8e0 <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     8cc:	e0 16       	cp	r14, r16
     8ce:	f1 06       	cpc	r15, r17
     8d0:	74 f7       	brge	.-36     	; 0x8ae <ser_readln+0x24>
			buf[i++]=c;
     8d2:	f6 01       	movw	r30, r12
     8d4:	c1 93       	st	Z+, r28
     8d6:	6f 01       	movw	r12, r30
     8d8:	08 94       	sec
     8da:	e1 1c       	adc	r14, r1
     8dc:	f1 1c       	adc	r15, r1
     8de:	e7 cf       	rjmp	.-50     	; 0x8ae <ser_readln+0x24>
		}
	}
	buf[i]='\0';
     8e0:	ea 0c       	add	r14, r10
     8e2:	fb 1c       	adc	r15, r11
     8e4:	f7 01       	movw	r30, r14
     8e6:	10 82       	st	Z, r1
}
     8e8:	df 91       	pop	r29
     8ea:	cf 91       	pop	r28
     8ec:	1f 91       	pop	r17
     8ee:	0f 91       	pop	r16
     8f0:	ff 90       	pop	r15
     8f2:	ef 90       	pop	r14
     8f4:	df 90       	pop	r13
     8f6:	cf 90       	pop	r12
     8f8:	bf 90       	pop	r11
     8fa:	af 90       	pop	r10
     8fc:	08 95       	ret

000008fe <getIn>:

int j, IN, OUT = 0; //Voor knipperen van zonnescherm | Voor het kijken of hij uitgerold/opgerold is

int getIn(){
	return IN;
}
     8fe:	80 91 c6 05 	lds	r24, 0x05C6
     902:	90 91 c7 05 	lds	r25, 0x05C7
     906:	08 95       	ret

00000908 <getOut>:

int getOut(){
	return OUT;
}
     908:	80 91 70 05 	lds	r24, 0x0570
     90c:	90 91 71 05 	lds	r25, 0x0571
     910:	08 95       	ret

00000912 <init_scherm_ports>:

init_scherm_ports(){
	// set pin 3,4,5 of PORTB for output
	DDRB |= _BV(DDB3);
     912:	23 9a       	sbi	0x04, 3	; 4
	DDRB |= _BV(DDB4);
     914:	24 9a       	sbi	0x04, 4	; 4
	DDRB |= _BV(DDB5);
     916:	25 9a       	sbi	0x04, 5	; 4
	//DDRD = 0xff; //													DELETE AFTER
	
	//EIMSK = 1 << INT0;//													DELETE AFTER
	EICRA |= 1 << ISC00;
     918:	e9 e6       	ldi	r30, 0x69	; 105
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	80 81       	ld	r24, Z
     91e:	81 60       	ori	r24, 0x01	; 1
     920:	80 83       	st	Z, r24
	EIFR =  1 << INTF0;
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	8c bb       	out	0x1c, r24	; 28

	// LED op Portb5 aan = Zonnescherm opgerold (rode lampje)
	PORTB |= _BV(PORTB5);
     926:	2d 9a       	sbi	0x05, 5	; 5
}
     928:	08 95       	ret

0000092a <uitrollen>:
void uitrollen(){
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
	OUT = (OUT + 1);
     92e:	80 91 70 05 	lds	r24, 0x0570
     932:	90 91 71 05 	lds	r25, 0x0571
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	90 93 71 05 	sts	0x0571, r25
     93c:	80 93 70 05 	sts	0x0570, r24
	IN = (IN + 1);
     940:	80 91 c6 05 	lds	r24, 0x05C6
     944:	90 91 c7 05 	lds	r25, 0x05C7
     948:	01 96       	adiw	r24, 0x01	; 1
     94a:	90 93 c7 05 	sts	0x05C7, r25
     94e:	80 93 c6 05 	sts	0x05C6, r24
	ser_write("250 "); //Geef aan dat het commando is gelukt
     952:	8c e1       	ldi	r24, 0x1C	; 28
     954:	95 e0       	ldi	r25, 0x05	; 5
     956:	0e 94 2d 04 	call	0x85a	; 0x85a <ser_write>
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
     95a:	2d 98       	cbi	0x05, 5	; 5
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
     95c:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= _BV(PORTB4);
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		j += 1;
	if (j % 2 == 0){ser_write(".");}
     95e:	c1 e2       	ldi	r28, 0x21	; 33
     960:	d5 e0       	ldi	r29, 0x05	; 5
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
	while (j < 25){
     962:	22 c0       	rjmp	.+68     	; 0x9a8 <uitrollen+0x7e>
		// Laat pin 4 knippen (gele lampje)
		PORTB |= _BV(PORTB4);
     964:	2c 9a       	sbi	0x05, 4	; 5
     966:	8f e3       	ldi	r24, 0x3F	; 63
     968:	9d e0       	ldi	r25, 0x0D	; 13
     96a:	a3 e0       	ldi	r26, 0x03	; 3
     96c:	81 50       	subi	r24, 0x01	; 1
     96e:	90 40       	sbci	r25, 0x00	; 0
     970:	a0 40       	sbci	r26, 0x00	; 0
     972:	e1 f7       	brne	.-8      	; 0x96c <uitrollen+0x42>
     974:	00 c0       	rjmp	.+0      	; 0x976 <uitrollen+0x4c>
     976:	00 00       	nop
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
     978:	2c 98       	cbi	0x05, 4	; 5
     97a:	8f e3       	ldi	r24, 0x3F	; 63
     97c:	9d e0       	ldi	r25, 0x0D	; 13
     97e:	a3 e0       	ldi	r26, 0x03	; 3
     980:	81 50       	subi	r24, 0x01	; 1
     982:	90 40       	sbci	r25, 0x00	; 0
     984:	a0 40       	sbci	r26, 0x00	; 0
     986:	e1 f7       	brne	.-8      	; 0x980 <uitrollen+0x56>
     988:	00 c0       	rjmp	.+0      	; 0x98a <uitrollen+0x60>
     98a:	00 00       	nop
		_delay_ms(DELAY_MS);
		j += 1;
     98c:	80 91 c4 05 	lds	r24, 0x05C4
     990:	90 91 c5 05 	lds	r25, 0x05C5
     994:	01 96       	adiw	r24, 0x01	; 1
     996:	90 93 c5 05 	sts	0x05C5, r25
     99a:	80 93 c4 05 	sts	0x05C4, r24
	if (j % 2 == 0){ser_write(".");}
     99e:	80 fd       	sbrc	r24, 0
     9a0:	03 c0       	rjmp	.+6      	; 0x9a8 <uitrollen+0x7e>
     9a2:	ce 01       	movw	r24, r28
     9a4:	0e 94 2d 04 	call	0x85a	; 0x85a <ser_write>
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
	while (j < 25){
     9a8:	80 91 c4 05 	lds	r24, 0x05C4
     9ac:	90 91 c5 05 	lds	r25, 0x05C5
     9b0:	89 31       	cpi	r24, 0x19	; 25
     9b2:	91 05       	cpc	r25, r1
     9b4:	bc f2       	brlt	.-82     	; 0x964 <uitrollen+0x3a>
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		j += 1;
	if (j % 2 == 0){ser_write(".");}
}
j = 0;
     9b6:	10 92 c5 05 	sts	0x05C5, r1
     9ba:	10 92 c4 05 	sts	0x05C4, r1
ser_writeln("\n\r201 Zonnescherm is uitgerold\n");
     9be:	83 e2       	ldi	r24, 0x23	; 35
     9c0:	95 e0       	ldi	r25, 0x05	; 5
     9c2:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
     9c6:	8f e3       	ldi	r24, 0x3F	; 63
     9c8:	9d e0       	ldi	r25, 0x0D	; 13
     9ca:	a3 e0       	ldi	r26, 0x03	; 3
     9cc:	81 50       	subi	r24, 0x01	; 1
     9ce:	90 40       	sbci	r25, 0x00	; 0
     9d0:	a0 40       	sbci	r26, 0x00	; 0
     9d2:	e1 f7       	brne	.-8      	; 0x9cc <uitrollen+0xa2>
     9d4:	00 c0       	rjmp	.+0      	; 0x9d6 <uitrollen+0xac>
     9d6:	00 00       	nop
_delay_ms(DELAY_MS);
}
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	08 95       	ret

000009de <oprollen>:

void oprollen(){
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
	IN = (IN + 1);
     9e2:	80 91 c6 05 	lds	r24, 0x05C6
     9e6:	90 91 c7 05 	lds	r25, 0x05C7
     9ea:	01 96       	adiw	r24, 0x01	; 1
     9ec:	90 93 c7 05 	sts	0x05C7, r25
     9f0:	80 93 c6 05 	sts	0x05C6, r24
	OUT = (OUT + 1);
     9f4:	80 91 70 05 	lds	r24, 0x0570
     9f8:	90 91 71 05 	lds	r25, 0x0571
     9fc:	01 96       	adiw	r24, 0x01	; 1
     9fe:	90 93 71 05 	sts	0x0571, r25
     a02:	80 93 70 05 	sts	0x0570, r24
	ser_write("250 "); //Geef aan dat het commando is gelukt
     a06:	8c e1       	ldi	r24, 0x1C	; 28
     a08:	95 e0       	ldi	r25, 0x05	; 5
     a0a:	0e 94 2d 04 	call	0x85a	; 0x85a <ser_write>
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
     a0e:	2b 98       	cbi	0x05, 3	; 5
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
     a10:	2d 9a       	sbi	0x05, 5	; 5
		PORTB |= _BV(PORTB4);
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		j += 1;
	if (j % 2 == 0){ser_write(".");}
     a12:	c1 e2       	ldi	r28, 0x21	; 33
     a14:	d5 e0       	ldi	r29, 0x05	; 5
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
	while (j < 25){
     a16:	22 c0       	rjmp	.+68     	; 0xa5c <oprollen+0x7e>
		// Laat pin 4 knippen (gele lampje)
		PORTB |= _BV(PORTB4);
     a18:	2c 9a       	sbi	0x05, 4	; 5
     a1a:	8f e3       	ldi	r24, 0x3F	; 63
     a1c:	9d e0       	ldi	r25, 0x0D	; 13
     a1e:	a3 e0       	ldi	r26, 0x03	; 3
     a20:	81 50       	subi	r24, 0x01	; 1
     a22:	90 40       	sbci	r25, 0x00	; 0
     a24:	a0 40       	sbci	r26, 0x00	; 0
     a26:	e1 f7       	brne	.-8      	; 0xa20 <oprollen+0x42>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <oprollen+0x4c>
     a2a:	00 00       	nop
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
     a2c:	2c 98       	cbi	0x05, 4	; 5
     a2e:	8f e3       	ldi	r24, 0x3F	; 63
     a30:	9d e0       	ldi	r25, 0x0D	; 13
     a32:	a3 e0       	ldi	r26, 0x03	; 3
     a34:	81 50       	subi	r24, 0x01	; 1
     a36:	90 40       	sbci	r25, 0x00	; 0
     a38:	a0 40       	sbci	r26, 0x00	; 0
     a3a:	e1 f7       	brne	.-8      	; 0xa34 <oprollen+0x56>
     a3c:	00 c0       	rjmp	.+0      	; 0xa3e <oprollen+0x60>
     a3e:	00 00       	nop
		_delay_ms(DELAY_MS);
		j += 1;
     a40:	80 91 c4 05 	lds	r24, 0x05C4
     a44:	90 91 c5 05 	lds	r25, 0x05C5
     a48:	01 96       	adiw	r24, 0x01	; 1
     a4a:	90 93 c5 05 	sts	0x05C5, r25
     a4e:	80 93 c4 05 	sts	0x05C4, r24
	if (j % 2 == 0){ser_write(".");}
     a52:	80 fd       	sbrc	r24, 0
     a54:	03 c0       	rjmp	.+6      	; 0xa5c <oprollen+0x7e>
     a56:	ce 01       	movw	r24, r28
     a58:	0e 94 2d 04 	call	0x85a	; 0x85a <ser_write>
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
	while (j < 25){
     a5c:	80 91 c4 05 	lds	r24, 0x05C4
     a60:	90 91 c5 05 	lds	r25, 0x05C5
     a64:	89 31       	cpi	r24, 0x19	; 25
     a66:	91 05       	cpc	r25, r1
     a68:	bc f2       	brlt	.-82     	; 0xa18 <oprollen+0x3a>
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		j += 1;
	if (j % 2 == 0){ser_write(".");}
	}
	j = 0;
     a6a:	10 92 c5 05 	sts	0x05C5, r1
     a6e:	10 92 c4 05 	sts	0x05C4, r1
	ser_writeln("\n\r201 Zonnescherm is opgerold\n");
     a72:	83 e4       	ldi	r24, 0x43	; 67
     a74:	95 e0       	ldi	r25, 0x05	; 5
     a76:	0e 94 3c 04 	call	0x878	; 0x878 <ser_writeln>
     a7a:	8f e3       	ldi	r24, 0x3F	; 63
     a7c:	9d e0       	ldi	r25, 0x0D	; 13
     a7e:	a3 e0       	ldi	r26, 0x03	; 3
     a80:	81 50       	subi	r24, 0x01	; 1
     a82:	90 40       	sbci	r25, 0x00	; 0
     a84:	a0 40       	sbci	r26, 0x00	; 0
     a86:	e1 f7       	brne	.-8      	; 0xa80 <oprollen+0xa2>
     a88:	00 c0       	rjmp	.+0      	; 0xa8a <oprollen+0xac>
     a8a:	00 00       	nop
	_delay_ms(DELAY_MS);	
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	08 95       	ret

00000a92 <__subsf3>:
     a92:	50 58       	subi	r21, 0x80	; 128

00000a94 <__addsf3>:
     a94:	bb 27       	eor	r27, r27
     a96:	aa 27       	eor	r26, r26
     a98:	0e d0       	rcall	.+28     	; 0xab6 <__addsf3x>
     a9a:	b4 c0       	rjmp	.+360    	; 0xc04 <__fp_round>
     a9c:	a5 d0       	rcall	.+330    	; 0xbe8 <__fp_pscA>
     a9e:	30 f0       	brcs	.+12     	; 0xaac <__addsf3+0x18>
     aa0:	aa d0       	rcall	.+340    	; 0xbf6 <__fp_pscB>
     aa2:	20 f0       	brcs	.+8      	; 0xaac <__addsf3+0x18>
     aa4:	31 f4       	brne	.+12     	; 0xab2 <__addsf3+0x1e>
     aa6:	9f 3f       	cpi	r25, 0xFF	; 255
     aa8:	11 f4       	brne	.+4      	; 0xaae <__addsf3+0x1a>
     aaa:	1e f4       	brtc	.+6      	; 0xab2 <__addsf3+0x1e>
     aac:	9a c0       	rjmp	.+308    	; 0xbe2 <__fp_nan>
     aae:	0e f4       	brtc	.+2      	; 0xab2 <__addsf3+0x1e>
     ab0:	e0 95       	com	r30
     ab2:	e7 fb       	bst	r30, 7
     ab4:	90 c0       	rjmp	.+288    	; 0xbd6 <__fp_inf>

00000ab6 <__addsf3x>:
     ab6:	e9 2f       	mov	r30, r25
     ab8:	b6 d0       	rcall	.+364    	; 0xc26 <__fp_split3>
     aba:	80 f3       	brcs	.-32     	; 0xa9c <__addsf3+0x8>
     abc:	ba 17       	cp	r27, r26
     abe:	62 07       	cpc	r22, r18
     ac0:	73 07       	cpc	r23, r19
     ac2:	84 07       	cpc	r24, r20
     ac4:	95 07       	cpc	r25, r21
     ac6:	18 f0       	brcs	.+6      	; 0xace <__addsf3x+0x18>
     ac8:	71 f4       	brne	.+28     	; 0xae6 <__addsf3x+0x30>
     aca:	9e f5       	brtc	.+102    	; 0xb32 <__addsf3x+0x7c>
     acc:	ce c0       	rjmp	.+412    	; 0xc6a <__fp_zero>
     ace:	0e f4       	brtc	.+2      	; 0xad2 <__addsf3x+0x1c>
     ad0:	e0 95       	com	r30
     ad2:	0b 2e       	mov	r0, r27
     ad4:	ba 2f       	mov	r27, r26
     ad6:	a0 2d       	mov	r26, r0
     ad8:	0b 01       	movw	r0, r22
     ada:	b9 01       	movw	r22, r18
     adc:	90 01       	movw	r18, r0
     ade:	0c 01       	movw	r0, r24
     ae0:	ca 01       	movw	r24, r20
     ae2:	a0 01       	movw	r20, r0
     ae4:	11 24       	eor	r1, r1
     ae6:	ff 27       	eor	r31, r31
     ae8:	59 1b       	sub	r21, r25
     aea:	99 f0       	breq	.+38     	; 0xb12 <__addsf3x+0x5c>
     aec:	59 3f       	cpi	r21, 0xF9	; 249
     aee:	50 f4       	brcc	.+20     	; 0xb04 <__addsf3x+0x4e>
     af0:	50 3e       	cpi	r21, 0xE0	; 224
     af2:	68 f1       	brcs	.+90     	; 0xb4e <__addsf3x+0x98>
     af4:	1a 16       	cp	r1, r26
     af6:	f0 40       	sbci	r31, 0x00	; 0
     af8:	a2 2f       	mov	r26, r18
     afa:	23 2f       	mov	r18, r19
     afc:	34 2f       	mov	r19, r20
     afe:	44 27       	eor	r20, r20
     b00:	58 5f       	subi	r21, 0xF8	; 248
     b02:	f3 cf       	rjmp	.-26     	; 0xaea <__addsf3x+0x34>
     b04:	46 95       	lsr	r20
     b06:	37 95       	ror	r19
     b08:	27 95       	ror	r18
     b0a:	a7 95       	ror	r26
     b0c:	f0 40       	sbci	r31, 0x00	; 0
     b0e:	53 95       	inc	r21
     b10:	c9 f7       	brne	.-14     	; 0xb04 <__addsf3x+0x4e>
     b12:	7e f4       	brtc	.+30     	; 0xb32 <__addsf3x+0x7c>
     b14:	1f 16       	cp	r1, r31
     b16:	ba 0b       	sbc	r27, r26
     b18:	62 0b       	sbc	r22, r18
     b1a:	73 0b       	sbc	r23, r19
     b1c:	84 0b       	sbc	r24, r20
     b1e:	ba f0       	brmi	.+46     	; 0xb4e <__addsf3x+0x98>
     b20:	91 50       	subi	r25, 0x01	; 1
     b22:	a1 f0       	breq	.+40     	; 0xb4c <__addsf3x+0x96>
     b24:	ff 0f       	add	r31, r31
     b26:	bb 1f       	adc	r27, r27
     b28:	66 1f       	adc	r22, r22
     b2a:	77 1f       	adc	r23, r23
     b2c:	88 1f       	adc	r24, r24
     b2e:	c2 f7       	brpl	.-16     	; 0xb20 <__addsf3x+0x6a>
     b30:	0e c0       	rjmp	.+28     	; 0xb4e <__addsf3x+0x98>
     b32:	ba 0f       	add	r27, r26
     b34:	62 1f       	adc	r22, r18
     b36:	73 1f       	adc	r23, r19
     b38:	84 1f       	adc	r24, r20
     b3a:	48 f4       	brcc	.+18     	; 0xb4e <__addsf3x+0x98>
     b3c:	87 95       	ror	r24
     b3e:	77 95       	ror	r23
     b40:	67 95       	ror	r22
     b42:	b7 95       	ror	r27
     b44:	f7 95       	ror	r31
     b46:	9e 3f       	cpi	r25, 0xFE	; 254
     b48:	08 f0       	brcs	.+2      	; 0xb4c <__addsf3x+0x96>
     b4a:	b3 cf       	rjmp	.-154    	; 0xab2 <__addsf3+0x1e>
     b4c:	93 95       	inc	r25
     b4e:	88 0f       	add	r24, r24
     b50:	08 f0       	brcs	.+2      	; 0xb54 <__addsf3x+0x9e>
     b52:	99 27       	eor	r25, r25
     b54:	ee 0f       	add	r30, r30
     b56:	97 95       	ror	r25
     b58:	87 95       	ror	r24
     b5a:	08 95       	ret

00000b5c <__floatunsisf>:
     b5c:	e8 94       	clt
     b5e:	09 c0       	rjmp	.+18     	; 0xb72 <__floatsisf+0x12>

00000b60 <__floatsisf>:
     b60:	97 fb       	bst	r25, 7
     b62:	3e f4       	brtc	.+14     	; 0xb72 <__floatsisf+0x12>
     b64:	90 95       	com	r25
     b66:	80 95       	com	r24
     b68:	70 95       	com	r23
     b6a:	61 95       	neg	r22
     b6c:	7f 4f       	sbci	r23, 0xFF	; 255
     b6e:	8f 4f       	sbci	r24, 0xFF	; 255
     b70:	9f 4f       	sbci	r25, 0xFF	; 255
     b72:	99 23       	and	r25, r25
     b74:	a9 f0       	breq	.+42     	; 0xba0 <__floatsisf+0x40>
     b76:	f9 2f       	mov	r31, r25
     b78:	96 e9       	ldi	r25, 0x96	; 150
     b7a:	bb 27       	eor	r27, r27
     b7c:	93 95       	inc	r25
     b7e:	f6 95       	lsr	r31
     b80:	87 95       	ror	r24
     b82:	77 95       	ror	r23
     b84:	67 95       	ror	r22
     b86:	b7 95       	ror	r27
     b88:	f1 11       	cpse	r31, r1
     b8a:	f8 cf       	rjmp	.-16     	; 0xb7c <__floatsisf+0x1c>
     b8c:	fa f4       	brpl	.+62     	; 0xbcc <__floatsisf+0x6c>
     b8e:	bb 0f       	add	r27, r27
     b90:	11 f4       	brne	.+4      	; 0xb96 <__floatsisf+0x36>
     b92:	60 ff       	sbrs	r22, 0
     b94:	1b c0       	rjmp	.+54     	; 0xbcc <__floatsisf+0x6c>
     b96:	6f 5f       	subi	r22, 0xFF	; 255
     b98:	7f 4f       	sbci	r23, 0xFF	; 255
     b9a:	8f 4f       	sbci	r24, 0xFF	; 255
     b9c:	9f 4f       	sbci	r25, 0xFF	; 255
     b9e:	16 c0       	rjmp	.+44     	; 0xbcc <__floatsisf+0x6c>
     ba0:	88 23       	and	r24, r24
     ba2:	11 f0       	breq	.+4      	; 0xba8 <__floatsisf+0x48>
     ba4:	96 e9       	ldi	r25, 0x96	; 150
     ba6:	11 c0       	rjmp	.+34     	; 0xbca <__floatsisf+0x6a>
     ba8:	77 23       	and	r23, r23
     baa:	21 f0       	breq	.+8      	; 0xbb4 <__floatsisf+0x54>
     bac:	9e e8       	ldi	r25, 0x8E	; 142
     bae:	87 2f       	mov	r24, r23
     bb0:	76 2f       	mov	r23, r22
     bb2:	05 c0       	rjmp	.+10     	; 0xbbe <__floatsisf+0x5e>
     bb4:	66 23       	and	r22, r22
     bb6:	71 f0       	breq	.+28     	; 0xbd4 <__floatsisf+0x74>
     bb8:	96 e8       	ldi	r25, 0x86	; 134
     bba:	86 2f       	mov	r24, r22
     bbc:	70 e0       	ldi	r23, 0x00	; 0
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	2a f0       	brmi	.+10     	; 0xbcc <__floatsisf+0x6c>
     bc2:	9a 95       	dec	r25
     bc4:	66 0f       	add	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	88 1f       	adc	r24, r24
     bca:	da f7       	brpl	.-10     	; 0xbc2 <__floatsisf+0x62>
     bcc:	88 0f       	add	r24, r24
     bce:	96 95       	lsr	r25
     bd0:	87 95       	ror	r24
     bd2:	97 f9       	bld	r25, 7
     bd4:	08 95       	ret

00000bd6 <__fp_inf>:
     bd6:	97 f9       	bld	r25, 7
     bd8:	9f 67       	ori	r25, 0x7F	; 127
     bda:	80 e8       	ldi	r24, 0x80	; 128
     bdc:	70 e0       	ldi	r23, 0x00	; 0
     bde:	60 e0       	ldi	r22, 0x00	; 0
     be0:	08 95       	ret

00000be2 <__fp_nan>:
     be2:	9f ef       	ldi	r25, 0xFF	; 255
     be4:	80 ec       	ldi	r24, 0xC0	; 192
     be6:	08 95       	ret

00000be8 <__fp_pscA>:
     be8:	00 24       	eor	r0, r0
     bea:	0a 94       	dec	r0
     bec:	16 16       	cp	r1, r22
     bee:	17 06       	cpc	r1, r23
     bf0:	18 06       	cpc	r1, r24
     bf2:	09 06       	cpc	r0, r25
     bf4:	08 95       	ret

00000bf6 <__fp_pscB>:
     bf6:	00 24       	eor	r0, r0
     bf8:	0a 94       	dec	r0
     bfa:	12 16       	cp	r1, r18
     bfc:	13 06       	cpc	r1, r19
     bfe:	14 06       	cpc	r1, r20
     c00:	05 06       	cpc	r0, r21
     c02:	08 95       	ret

00000c04 <__fp_round>:
     c04:	09 2e       	mov	r0, r25
     c06:	03 94       	inc	r0
     c08:	00 0c       	add	r0, r0
     c0a:	11 f4       	brne	.+4      	; 0xc10 <__fp_round+0xc>
     c0c:	88 23       	and	r24, r24
     c0e:	52 f0       	brmi	.+20     	; 0xc24 <__fp_round+0x20>
     c10:	bb 0f       	add	r27, r27
     c12:	40 f4       	brcc	.+16     	; 0xc24 <__fp_round+0x20>
     c14:	bf 2b       	or	r27, r31
     c16:	11 f4       	brne	.+4      	; 0xc1c <__fp_round+0x18>
     c18:	60 ff       	sbrs	r22, 0
     c1a:	04 c0       	rjmp	.+8      	; 0xc24 <__fp_round+0x20>
     c1c:	6f 5f       	subi	r22, 0xFF	; 255
     c1e:	7f 4f       	sbci	r23, 0xFF	; 255
     c20:	8f 4f       	sbci	r24, 0xFF	; 255
     c22:	9f 4f       	sbci	r25, 0xFF	; 255
     c24:	08 95       	ret

00000c26 <__fp_split3>:
     c26:	57 fd       	sbrc	r21, 7
     c28:	90 58       	subi	r25, 0x80	; 128
     c2a:	44 0f       	add	r20, r20
     c2c:	55 1f       	adc	r21, r21
     c2e:	59 f0       	breq	.+22     	; 0xc46 <__fp_splitA+0x10>
     c30:	5f 3f       	cpi	r21, 0xFF	; 255
     c32:	71 f0       	breq	.+28     	; 0xc50 <__fp_splitA+0x1a>
     c34:	47 95       	ror	r20

00000c36 <__fp_splitA>:
     c36:	88 0f       	add	r24, r24
     c38:	97 fb       	bst	r25, 7
     c3a:	99 1f       	adc	r25, r25
     c3c:	61 f0       	breq	.+24     	; 0xc56 <__fp_splitA+0x20>
     c3e:	9f 3f       	cpi	r25, 0xFF	; 255
     c40:	79 f0       	breq	.+30     	; 0xc60 <__fp_splitA+0x2a>
     c42:	87 95       	ror	r24
     c44:	08 95       	ret
     c46:	12 16       	cp	r1, r18
     c48:	13 06       	cpc	r1, r19
     c4a:	14 06       	cpc	r1, r20
     c4c:	55 1f       	adc	r21, r21
     c4e:	f2 cf       	rjmp	.-28     	; 0xc34 <__fp_split3+0xe>
     c50:	46 95       	lsr	r20
     c52:	f1 df       	rcall	.-30     	; 0xc36 <__fp_splitA>
     c54:	08 c0       	rjmp	.+16     	; 0xc66 <__fp_splitA+0x30>
     c56:	16 16       	cp	r1, r22
     c58:	17 06       	cpc	r1, r23
     c5a:	18 06       	cpc	r1, r24
     c5c:	99 1f       	adc	r25, r25
     c5e:	f1 cf       	rjmp	.-30     	; 0xc42 <__fp_splitA+0xc>
     c60:	86 95       	lsr	r24
     c62:	71 05       	cpc	r23, r1
     c64:	61 05       	cpc	r22, r1
     c66:	08 94       	sec
     c68:	08 95       	ret

00000c6a <__fp_zero>:
     c6a:	e8 94       	clt

00000c6c <__fp_szero>:
     c6c:	bb 27       	eor	r27, r27
     c6e:	66 27       	eor	r22, r22
     c70:	77 27       	eor	r23, r23
     c72:	cb 01       	movw	r24, r22
     c74:	97 f9       	bld	r25, 7
     c76:	08 95       	ret

00000c78 <__mulsf3>:
     c78:	0b d0       	rcall	.+22     	; 0xc90 <__mulsf3x>
     c7a:	c4 cf       	rjmp	.-120    	; 0xc04 <__fp_round>
     c7c:	b5 df       	rcall	.-150    	; 0xbe8 <__fp_pscA>
     c7e:	28 f0       	brcs	.+10     	; 0xc8a <__mulsf3+0x12>
     c80:	ba df       	rcall	.-140    	; 0xbf6 <__fp_pscB>
     c82:	18 f0       	brcs	.+6      	; 0xc8a <__mulsf3+0x12>
     c84:	95 23       	and	r25, r21
     c86:	09 f0       	breq	.+2      	; 0xc8a <__mulsf3+0x12>
     c88:	a6 cf       	rjmp	.-180    	; 0xbd6 <__fp_inf>
     c8a:	ab cf       	rjmp	.-170    	; 0xbe2 <__fp_nan>
     c8c:	11 24       	eor	r1, r1
     c8e:	ee cf       	rjmp	.-36     	; 0xc6c <__fp_szero>

00000c90 <__mulsf3x>:
     c90:	ca df       	rcall	.-108    	; 0xc26 <__fp_split3>
     c92:	a0 f3       	brcs	.-24     	; 0xc7c <__mulsf3+0x4>

00000c94 <__mulsf3_pse>:
     c94:	95 9f       	mul	r25, r21
     c96:	d1 f3       	breq	.-12     	; 0xc8c <__mulsf3+0x14>
     c98:	95 0f       	add	r25, r21
     c9a:	50 e0       	ldi	r21, 0x00	; 0
     c9c:	55 1f       	adc	r21, r21
     c9e:	62 9f       	mul	r22, r18
     ca0:	f0 01       	movw	r30, r0
     ca2:	72 9f       	mul	r23, r18
     ca4:	bb 27       	eor	r27, r27
     ca6:	f0 0d       	add	r31, r0
     ca8:	b1 1d       	adc	r27, r1
     caa:	63 9f       	mul	r22, r19
     cac:	aa 27       	eor	r26, r26
     cae:	f0 0d       	add	r31, r0
     cb0:	b1 1d       	adc	r27, r1
     cb2:	aa 1f       	adc	r26, r26
     cb4:	64 9f       	mul	r22, r20
     cb6:	66 27       	eor	r22, r22
     cb8:	b0 0d       	add	r27, r0
     cba:	a1 1d       	adc	r26, r1
     cbc:	66 1f       	adc	r22, r22
     cbe:	82 9f       	mul	r24, r18
     cc0:	22 27       	eor	r18, r18
     cc2:	b0 0d       	add	r27, r0
     cc4:	a1 1d       	adc	r26, r1
     cc6:	62 1f       	adc	r22, r18
     cc8:	73 9f       	mul	r23, r19
     cca:	b0 0d       	add	r27, r0
     ccc:	a1 1d       	adc	r26, r1
     cce:	62 1f       	adc	r22, r18
     cd0:	83 9f       	mul	r24, r19
     cd2:	a0 0d       	add	r26, r0
     cd4:	61 1d       	adc	r22, r1
     cd6:	22 1f       	adc	r18, r18
     cd8:	74 9f       	mul	r23, r20
     cda:	33 27       	eor	r19, r19
     cdc:	a0 0d       	add	r26, r0
     cde:	61 1d       	adc	r22, r1
     ce0:	23 1f       	adc	r18, r19
     ce2:	84 9f       	mul	r24, r20
     ce4:	60 0d       	add	r22, r0
     ce6:	21 1d       	adc	r18, r1
     ce8:	82 2f       	mov	r24, r18
     cea:	76 2f       	mov	r23, r22
     cec:	6a 2f       	mov	r22, r26
     cee:	11 24       	eor	r1, r1
     cf0:	9f 57       	subi	r25, 0x7F	; 127
     cf2:	50 40       	sbci	r21, 0x00	; 0
     cf4:	8a f0       	brmi	.+34     	; 0xd18 <__mulsf3_pse+0x84>
     cf6:	e1 f0       	breq	.+56     	; 0xd30 <__mulsf3_pse+0x9c>
     cf8:	88 23       	and	r24, r24
     cfa:	4a f0       	brmi	.+18     	; 0xd0e <__mulsf3_pse+0x7a>
     cfc:	ee 0f       	add	r30, r30
     cfe:	ff 1f       	adc	r31, r31
     d00:	bb 1f       	adc	r27, r27
     d02:	66 1f       	adc	r22, r22
     d04:	77 1f       	adc	r23, r23
     d06:	88 1f       	adc	r24, r24
     d08:	91 50       	subi	r25, 0x01	; 1
     d0a:	50 40       	sbci	r21, 0x00	; 0
     d0c:	a9 f7       	brne	.-22     	; 0xcf8 <__mulsf3_pse+0x64>
     d0e:	9e 3f       	cpi	r25, 0xFE	; 254
     d10:	51 05       	cpc	r21, r1
     d12:	70 f0       	brcs	.+28     	; 0xd30 <__mulsf3_pse+0x9c>
     d14:	60 cf       	rjmp	.-320    	; 0xbd6 <__fp_inf>
     d16:	aa cf       	rjmp	.-172    	; 0xc6c <__fp_szero>
     d18:	5f 3f       	cpi	r21, 0xFF	; 255
     d1a:	ec f3       	brlt	.-6      	; 0xd16 <__mulsf3_pse+0x82>
     d1c:	98 3e       	cpi	r25, 0xE8	; 232
     d1e:	dc f3       	brlt	.-10     	; 0xd16 <__mulsf3_pse+0x82>
     d20:	86 95       	lsr	r24
     d22:	77 95       	ror	r23
     d24:	67 95       	ror	r22
     d26:	b7 95       	ror	r27
     d28:	f7 95       	ror	r31
     d2a:	e7 95       	ror	r30
     d2c:	9f 5f       	subi	r25, 0xFF	; 255
     d2e:	c1 f7       	brne	.-16     	; 0xd20 <__mulsf3_pse+0x8c>
     d30:	fe 2b       	or	r31, r30
     d32:	88 0f       	add	r24, r24
     d34:	91 1d       	adc	r25, r1
     d36:	96 95       	lsr	r25
     d38:	87 95       	ror	r24
     d3a:	97 f9       	bld	r25, 7
     d3c:	08 95       	ret

00000d3e <vfprintf>:
     d3e:	a5 e1       	ldi	r26, 0x15	; 21
     d40:	b0 e0       	ldi	r27, 0x00	; 0
     d42:	e5 ea       	ldi	r30, 0xA5	; 165
     d44:	f6 e0       	ldi	r31, 0x06	; 6
     d46:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__prologue_saves__>
     d4a:	4c 01       	movw	r8, r24
     d4c:	7f 87       	std	Y+15, r23	; 0x0f
     d4e:	6e 87       	std	Y+14, r22	; 0x0e
     d50:	fc 01       	movw	r30, r24
     d52:	17 82       	std	Z+7, r1	; 0x07
     d54:	16 82       	std	Z+6, r1	; 0x06
     d56:	83 81       	ldd	r24, Z+3	; 0x03
     d58:	81 fd       	sbrc	r24, 1
     d5a:	04 c0       	rjmp	.+8      	; 0xd64 <vfprintf+0x26>
     d5c:	76 c3       	rjmp	.+1772   	; 0x144a <vfprintf+0x70c>
     d5e:	4c 85       	ldd	r20, Y+12	; 0x0c
     d60:	5d 85       	ldd	r21, Y+13	; 0x0d
     d62:	04 c0       	rjmp	.+8      	; 0xd6c <vfprintf+0x2e>
     d64:	1e 01       	movw	r2, r28
     d66:	08 94       	sec
     d68:	21 1c       	adc	r2, r1
     d6a:	31 1c       	adc	r3, r1
     d6c:	f4 01       	movw	r30, r8
     d6e:	93 81       	ldd	r25, Z+3	; 0x03
     d70:	ee 85       	ldd	r30, Y+14	; 0x0e
     d72:	ff 85       	ldd	r31, Y+15	; 0x0f
     d74:	93 fd       	sbrc	r25, 3
     d76:	85 91       	lpm	r24, Z+
     d78:	93 ff       	sbrs	r25, 3
     d7a:	81 91       	ld	r24, Z+
     d7c:	ff 87       	std	Y+15, r31	; 0x0f
     d7e:	ee 87       	std	Y+14, r30	; 0x0e
     d80:	88 23       	and	r24, r24
     d82:	09 f4       	brne	.+2      	; 0xd86 <vfprintf+0x48>
     d84:	5e c3       	rjmp	.+1724   	; 0x1442 <vfprintf+0x704>
     d86:	85 32       	cpi	r24, 0x25	; 37
     d88:	41 f4       	brne	.+16     	; 0xd9a <vfprintf+0x5c>
     d8a:	93 fd       	sbrc	r25, 3
     d8c:	85 91       	lpm	r24, Z+
     d8e:	93 ff       	sbrs	r25, 3
     d90:	81 91       	ld	r24, Z+
     d92:	ff 87       	std	Y+15, r31	; 0x0f
     d94:	ee 87       	std	Y+14, r30	; 0x0e
     d96:	85 32       	cpi	r24, 0x25	; 37
     d98:	59 f4       	brne	.+22     	; 0xdb0 <vfprintf+0x72>
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	b4 01       	movw	r22, r8
     d9e:	4c 8b       	std	Y+20, r20	; 0x14
     da0:	5d 8b       	std	Y+21, r21	; 0x15
     da2:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
     da6:	4c 89       	ldd	r20, Y+20	; 0x14
     da8:	5d 89       	ldd	r21, Y+21	; 0x15
     daa:	5d 87       	std	Y+13, r21	; 0x0d
     dac:	4c 87       	std	Y+12, r20	; 0x0c
     dae:	d7 cf       	rjmp	.-82     	; 0xd5e <vfprintf+0x20>
     db0:	ff 24       	eor	r15, r15
     db2:	dd 24       	eor	r13, r13
     db4:	10 e0       	ldi	r17, 0x00	; 0
     db6:	10 32       	cpi	r17, 0x20	; 32
     db8:	b0 f4       	brcc	.+44     	; 0xde6 <vfprintf+0xa8>
     dba:	8b 32       	cpi	r24, 0x2B	; 43
     dbc:	69 f0       	breq	.+26     	; 0xdd8 <vfprintf+0x9a>
     dbe:	8c 32       	cpi	r24, 0x2C	; 44
     dc0:	28 f4       	brcc	.+10     	; 0xdcc <vfprintf+0x8e>
     dc2:	80 32       	cpi	r24, 0x20	; 32
     dc4:	51 f0       	breq	.+20     	; 0xdda <vfprintf+0x9c>
     dc6:	83 32       	cpi	r24, 0x23	; 35
     dc8:	71 f4       	brne	.+28     	; 0xde6 <vfprintf+0xa8>
     dca:	0b c0       	rjmp	.+22     	; 0xde2 <vfprintf+0xa4>
     dcc:	8d 32       	cpi	r24, 0x2D	; 45
     dce:	39 f0       	breq	.+14     	; 0xdde <vfprintf+0xa0>
     dd0:	80 33       	cpi	r24, 0x30	; 48
     dd2:	49 f4       	brne	.+18     	; 0xde6 <vfprintf+0xa8>
     dd4:	11 60       	ori	r17, 0x01	; 1
     dd6:	2c c0       	rjmp	.+88     	; 0xe30 <vfprintf+0xf2>
     dd8:	12 60       	ori	r17, 0x02	; 2
     dda:	14 60       	ori	r17, 0x04	; 4
     ddc:	29 c0       	rjmp	.+82     	; 0xe30 <vfprintf+0xf2>
     dde:	18 60       	ori	r17, 0x08	; 8
     de0:	27 c0       	rjmp	.+78     	; 0xe30 <vfprintf+0xf2>
     de2:	10 61       	ori	r17, 0x10	; 16
     de4:	25 c0       	rjmp	.+74     	; 0xe30 <vfprintf+0xf2>
     de6:	17 fd       	sbrc	r17, 7
     de8:	2e c0       	rjmp	.+92     	; 0xe46 <vfprintf+0x108>
     dea:	28 2f       	mov	r18, r24
     dec:	20 53       	subi	r18, 0x30	; 48
     dee:	2a 30       	cpi	r18, 0x0A	; 10
     df0:	98 f4       	brcc	.+38     	; 0xe18 <vfprintf+0xda>
     df2:	16 ff       	sbrs	r17, 6
     df4:	08 c0       	rjmp	.+16     	; 0xe06 <vfprintf+0xc8>
     df6:	8f 2d       	mov	r24, r15
     df8:	88 0f       	add	r24, r24
     dfa:	f8 2e       	mov	r15, r24
     dfc:	ff 0c       	add	r15, r15
     dfe:	ff 0c       	add	r15, r15
     e00:	f8 0e       	add	r15, r24
     e02:	f2 0e       	add	r15, r18
     e04:	15 c0       	rjmp	.+42     	; 0xe30 <vfprintf+0xf2>
     e06:	8d 2d       	mov	r24, r13
     e08:	88 0f       	add	r24, r24
     e0a:	d8 2e       	mov	r13, r24
     e0c:	dd 0c       	add	r13, r13
     e0e:	dd 0c       	add	r13, r13
     e10:	d8 0e       	add	r13, r24
     e12:	d2 0e       	add	r13, r18
     e14:	10 62       	ori	r17, 0x20	; 32
     e16:	0c c0       	rjmp	.+24     	; 0xe30 <vfprintf+0xf2>
     e18:	8e 32       	cpi	r24, 0x2E	; 46
     e1a:	21 f4       	brne	.+8      	; 0xe24 <vfprintf+0xe6>
     e1c:	16 fd       	sbrc	r17, 6
     e1e:	11 c3       	rjmp	.+1570   	; 0x1442 <vfprintf+0x704>
     e20:	10 64       	ori	r17, 0x40	; 64
     e22:	06 c0       	rjmp	.+12     	; 0xe30 <vfprintf+0xf2>
     e24:	8c 36       	cpi	r24, 0x6C	; 108
     e26:	11 f4       	brne	.+4      	; 0xe2c <vfprintf+0xee>
     e28:	10 68       	ori	r17, 0x80	; 128
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <vfprintf+0xf2>
     e2c:	88 36       	cpi	r24, 0x68	; 104
     e2e:	59 f4       	brne	.+22     	; 0xe46 <vfprintf+0x108>
     e30:	ee 85       	ldd	r30, Y+14	; 0x0e
     e32:	ff 85       	ldd	r31, Y+15	; 0x0f
     e34:	93 fd       	sbrc	r25, 3
     e36:	85 91       	lpm	r24, Z+
     e38:	93 ff       	sbrs	r25, 3
     e3a:	81 91       	ld	r24, Z+
     e3c:	ff 87       	std	Y+15, r31	; 0x0f
     e3e:	ee 87       	std	Y+14, r30	; 0x0e
     e40:	88 23       	and	r24, r24
     e42:	09 f0       	breq	.+2      	; 0xe46 <vfprintf+0x108>
     e44:	b8 cf       	rjmp	.-144    	; 0xdb6 <vfprintf+0x78>
     e46:	98 2f       	mov	r25, r24
     e48:	95 54       	subi	r25, 0x45	; 69
     e4a:	93 30       	cpi	r25, 0x03	; 3
     e4c:	18 f4       	brcc	.+6      	; 0xe54 <vfprintf+0x116>
     e4e:	10 61       	ori	r17, 0x10	; 16
     e50:	80 5e       	subi	r24, 0xE0	; 224
     e52:	06 c0       	rjmp	.+12     	; 0xe60 <vfprintf+0x122>
     e54:	98 2f       	mov	r25, r24
     e56:	95 56       	subi	r25, 0x65	; 101
     e58:	93 30       	cpi	r25, 0x03	; 3
     e5a:	08 f0       	brcs	.+2      	; 0xe5e <vfprintf+0x120>
     e5c:	a2 c1       	rjmp	.+836    	; 0x11a2 <vfprintf+0x464>
     e5e:	1f 7e       	andi	r17, 0xEF	; 239
     e60:	16 fd       	sbrc	r17, 6
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <vfprintf+0x12a>
     e64:	e6 e0       	ldi	r30, 0x06	; 6
     e66:	fe 2e       	mov	r15, r30
     e68:	1f 73       	andi	r17, 0x3F	; 63
     e6a:	85 36       	cpi	r24, 0x65	; 101
     e6c:	11 f4       	brne	.+4      	; 0xe72 <vfprintf+0x134>
     e6e:	10 64       	ori	r17, 0x40	; 64
     e70:	06 c0       	rjmp	.+12     	; 0xe7e <vfprintf+0x140>
     e72:	86 36       	cpi	r24, 0x66	; 102
     e74:	11 f4       	brne	.+4      	; 0xe7a <vfprintf+0x13c>
     e76:	10 68       	ori	r17, 0x80	; 128
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0x140>
     e7a:	f1 10       	cpse	r15, r1
     e7c:	fa 94       	dec	r15
     e7e:	17 ff       	sbrs	r17, 7
     e80:	07 c0       	rjmp	.+14     	; 0xe90 <vfprintf+0x152>
     e82:	fb e3       	ldi	r31, 0x3B	; 59
     e84:	ff 15       	cp	r31, r15
     e86:	48 f0       	brcs	.+18     	; 0xe9a <vfprintf+0x15c>
     e88:	ef 2c       	mov	r14, r15
     e8a:	e3 94       	inc	r14
     e8c:	27 e0       	ldi	r18, 0x07	; 7
     e8e:	0d c0       	rjmp	.+26     	; 0xeaa <vfprintf+0x16c>
     e90:	27 e0       	ldi	r18, 0x07	; 7
     e92:	2f 15       	cp	r18, r15
     e94:	30 f0       	brcs	.+12     	; 0xea2 <vfprintf+0x164>
     e96:	2f 2d       	mov	r18, r15
     e98:	07 c0       	rjmp	.+14     	; 0xea8 <vfprintf+0x16a>
     e9a:	27 e0       	ldi	r18, 0x07	; 7
     e9c:	7c e3       	ldi	r23, 0x3C	; 60
     e9e:	e7 2e       	mov	r14, r23
     ea0:	04 c0       	rjmp	.+8      	; 0xeaa <vfprintf+0x16c>
     ea2:	27 e0       	ldi	r18, 0x07	; 7
     ea4:	67 e0       	ldi	r22, 0x07	; 7
     ea6:	f6 2e       	mov	r15, r22
     ea8:	ee 24       	eor	r14, r14
     eaa:	ca 01       	movw	r24, r20
     eac:	04 96       	adiw	r24, 0x04	; 4
     eae:	9d 87       	std	Y+13, r25	; 0x0d
     eb0:	8c 87       	std	Y+12, r24	; 0x0c
     eb2:	fa 01       	movw	r30, r20
     eb4:	60 81       	ld	r22, Z
     eb6:	71 81       	ldd	r23, Z+1	; 0x01
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	a1 01       	movw	r20, r2
     ebe:	0e 2d       	mov	r16, r14
     ec0:	0e 94 8e 0a 	call	0x151c	; 0x151c <__ftoa_engine>
     ec4:	5c 01       	movw	r10, r24
     ec6:	c9 80       	ldd	r12, Y+1	; 0x01
     ec8:	2c 2d       	mov	r18, r12
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	39 8b       	std	Y+17, r19	; 0x11
     ece:	28 8b       	std	Y+16, r18	; 0x10
     ed0:	c0 fe       	sbrs	r12, 0
     ed2:	03 c0       	rjmp	.+6      	; 0xeda <vfprintf+0x19c>
     ed4:	38 89       	ldd	r19, Y+16	; 0x10
     ed6:	33 ff       	sbrs	r19, 3
     ed8:	06 c0       	rjmp	.+12     	; 0xee6 <vfprintf+0x1a8>
     eda:	11 fd       	sbrc	r17, 1
     edc:	06 c0       	rjmp	.+12     	; 0xeea <vfprintf+0x1ac>
     ede:	12 ff       	sbrs	r17, 2
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0x1b0>
     ee2:	00 e2       	ldi	r16, 0x20	; 32
     ee4:	05 c0       	rjmp	.+10     	; 0xef0 <vfprintf+0x1b2>
     ee6:	0d e2       	ldi	r16, 0x2D	; 45
     ee8:	03 c0       	rjmp	.+6      	; 0xef0 <vfprintf+0x1b2>
     eea:	0b e2       	ldi	r16, 0x2B	; 43
     eec:	01 c0       	rjmp	.+2      	; 0xef0 <vfprintf+0x1b2>
     eee:	00 e0       	ldi	r16, 0x00	; 0
     ef0:	88 89       	ldd	r24, Y+16	; 0x10
     ef2:	99 89       	ldd	r25, Y+17	; 0x11
     ef4:	8c 70       	andi	r24, 0x0C	; 12
     ef6:	90 70       	andi	r25, 0x00	; 0
     ef8:	00 97       	sbiw	r24, 0x00	; 0
     efa:	09 f4       	brne	.+2      	; 0xefe <vfprintf+0x1c0>
     efc:	3c c0       	rjmp	.+120    	; 0xf76 <vfprintf+0x238>
     efe:	00 23       	and	r16, r16
     f00:	11 f0       	breq	.+4      	; 0xf06 <vfprintf+0x1c8>
     f02:	84 e0       	ldi	r24, 0x04	; 4
     f04:	01 c0       	rjmp	.+2      	; 0xf08 <vfprintf+0x1ca>
     f06:	83 e0       	ldi	r24, 0x03	; 3
     f08:	8d 15       	cp	r24, r13
     f0a:	58 f4       	brcc	.+22     	; 0xf22 <vfprintf+0x1e4>
     f0c:	d8 1a       	sub	r13, r24
     f0e:	13 fd       	sbrc	r17, 3
     f10:	09 c0       	rjmp	.+18     	; 0xf24 <vfprintf+0x1e6>
     f12:	80 e2       	ldi	r24, 0x20	; 32
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	b4 01       	movw	r22, r8
     f18:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
     f1c:	da 94       	dec	r13
     f1e:	c9 f7       	brne	.-14     	; 0xf12 <vfprintf+0x1d4>
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <vfprintf+0x1e6>
     f22:	dd 24       	eor	r13, r13
     f24:	00 23       	and	r16, r16
     f26:	29 f0       	breq	.+10     	; 0xf32 <vfprintf+0x1f4>
     f28:	80 2f       	mov	r24, r16
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	b4 01       	movw	r22, r8
     f2e:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
     f32:	88 89       	ldd	r24, Y+16	; 0x10
     f34:	83 fd       	sbrc	r24, 3
     f36:	05 c0       	rjmp	.+10     	; 0xf42 <vfprintf+0x204>
     f38:	3c e6       	ldi	r19, 0x6C	; 108
     f3a:	e3 2e       	mov	r14, r19
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	f3 2e       	mov	r15, r19
     f40:	11 c0       	rjmp	.+34     	; 0xf64 <vfprintf+0x226>
     f42:	28 e6       	ldi	r18, 0x68	; 104
     f44:	e2 2e       	mov	r14, r18
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	f2 2e       	mov	r15, r18
     f4a:	0c c0       	rjmp	.+24     	; 0xf64 <vfprintf+0x226>
     f4c:	01 15       	cp	r16, r1
     f4e:	11 05       	cpc	r17, r1
     f50:	09 f0       	breq	.+2      	; 0xf54 <vfprintf+0x216>
     f52:	80 52       	subi	r24, 0x20	; 32
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	b4 01       	movw	r22, r8
     f58:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
     f5c:	08 94       	sec
     f5e:	e1 1c       	adc	r14, r1
     f60:	f1 1c       	adc	r15, r1
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <vfprintf+0x22e>
     f64:	01 2f       	mov	r16, r17
     f66:	10 e0       	ldi	r17, 0x00	; 0
     f68:	00 71       	andi	r16, 0x10	; 16
     f6a:	10 70       	andi	r17, 0x00	; 0
     f6c:	f7 01       	movw	r30, r14
     f6e:	84 91       	lpm	r24, Z
     f70:	88 23       	and	r24, r24
     f72:	61 f7       	brne	.-40     	; 0xf4c <vfprintf+0x20e>
     f74:	63 c2       	rjmp	.+1222   	; 0x143c <vfprintf+0x6fe>
     f76:	17 ff       	sbrs	r17, 7
     f78:	0e c0       	rjmp	.+28     	; 0xf96 <vfprintf+0x258>
     f7a:	ea 0c       	add	r14, r10
     f7c:	f8 89       	ldd	r31, Y+16	; 0x10
     f7e:	f4 ff       	sbrs	r31, 4
     f80:	04 c0       	rjmp	.+8      	; 0xf8a <vfprintf+0x24c>
     f82:	8a 81       	ldd	r24, Y+2	; 0x02
     f84:	81 33       	cpi	r24, 0x31	; 49
     f86:	09 f4       	brne	.+2      	; 0xf8a <vfprintf+0x24c>
     f88:	ea 94       	dec	r14
     f8a:	1e 14       	cp	r1, r14
     f8c:	4c f5       	brge	.+82     	; 0xfe0 <vfprintf+0x2a2>
     f8e:	28 e0       	ldi	r18, 0x08	; 8
     f90:	2e 15       	cp	r18, r14
     f92:	48 f1       	brcs	.+82     	; 0xfe6 <vfprintf+0x2a8>
     f94:	2c c0       	rjmp	.+88     	; 0xfee <vfprintf+0x2b0>
     f96:	16 fd       	sbrc	r17, 6
     f98:	2a c0       	rjmp	.+84     	; 0xfee <vfprintf+0x2b0>
     f9a:	8f 2d       	mov	r24, r15
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	8a 15       	cp	r24, r10
     fa0:	9b 05       	cpc	r25, r11
     fa2:	44 f0       	brlt	.+16     	; 0xfb4 <vfprintf+0x276>
     fa4:	3c ef       	ldi	r19, 0xFC	; 252
     fa6:	a3 16       	cp	r10, r19
     fa8:	3f ef       	ldi	r19, 0xFF	; 255
     faa:	b3 06       	cpc	r11, r19
     fac:	1c f0       	brlt	.+6      	; 0xfb4 <vfprintf+0x276>
     fae:	10 68       	ori	r17, 0x80	; 128
     fb0:	01 c0       	rjmp	.+2      	; 0xfb4 <vfprintf+0x276>
     fb2:	fa 94       	dec	r15
     fb4:	ff 20       	and	r15, r15
     fb6:	49 f0       	breq	.+18     	; 0xfca <vfprintf+0x28c>
     fb8:	e2 e0       	ldi	r30, 0x02	; 2
     fba:	f0 e0       	ldi	r31, 0x00	; 0
     fbc:	ec 0f       	add	r30, r28
     fbe:	fd 1f       	adc	r31, r29
     fc0:	ef 0d       	add	r30, r15
     fc2:	f1 1d       	adc	r31, r1
     fc4:	80 81       	ld	r24, Z
     fc6:	80 33       	cpi	r24, 0x30	; 48
     fc8:	a1 f3       	breq	.-24     	; 0xfb2 <vfprintf+0x274>
     fca:	17 ff       	sbrs	r17, 7
     fcc:	10 c0       	rjmp	.+32     	; 0xfee <vfprintf+0x2b0>
     fce:	ef 2c       	mov	r14, r15
     fd0:	e3 94       	inc	r14
     fd2:	8f 2d       	mov	r24, r15
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	a8 16       	cp	r10, r24
     fd8:	b9 06       	cpc	r11, r25
     fda:	44 f4       	brge	.+16     	; 0xfec <vfprintf+0x2ae>
     fdc:	fa 18       	sub	r15, r10
     fde:	07 c0       	rjmp	.+14     	; 0xfee <vfprintf+0x2b0>
     fe0:	ee 24       	eor	r14, r14
     fe2:	e3 94       	inc	r14
     fe4:	04 c0       	rjmp	.+8      	; 0xfee <vfprintf+0x2b0>
     fe6:	98 e0       	ldi	r25, 0x08	; 8
     fe8:	e9 2e       	mov	r14, r25
     fea:	01 c0       	rjmp	.+2      	; 0xfee <vfprintf+0x2b0>
     fec:	ff 24       	eor	r15, r15
     fee:	17 ff       	sbrs	r17, 7
     ff0:	07 c0       	rjmp	.+14     	; 0x1000 <vfprintf+0x2c2>
     ff2:	1a 14       	cp	r1, r10
     ff4:	1b 04       	cpc	r1, r11
     ff6:	3c f4       	brge	.+14     	; 0x1006 <vfprintf+0x2c8>
     ff8:	95 01       	movw	r18, r10
     ffa:	2f 5f       	subi	r18, 0xFF	; 255
     ffc:	3f 4f       	sbci	r19, 0xFF	; 255
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <vfprintf+0x2cc>
    1000:	25 e0       	ldi	r18, 0x05	; 5
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	02 c0       	rjmp	.+4      	; 0x100a <vfprintf+0x2cc>
    1006:	21 e0       	ldi	r18, 0x01	; 1
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	00 23       	and	r16, r16
    100c:	11 f0       	breq	.+4      	; 0x1012 <vfprintf+0x2d4>
    100e:	2f 5f       	subi	r18, 0xFF	; 255
    1010:	3f 4f       	sbci	r19, 0xFF	; 255
    1012:	ff 20       	and	r15, r15
    1014:	29 f0       	breq	.+10     	; 0x1020 <vfprintf+0x2e2>
    1016:	8f 2d       	mov	r24, r15
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	28 0f       	add	r18, r24
    101e:	39 1f       	adc	r19, r25
    1020:	8d 2d       	mov	r24, r13
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	28 17       	cp	r18, r24
    1026:	39 07       	cpc	r19, r25
    1028:	14 f4       	brge	.+4      	; 0x102e <vfprintf+0x2f0>
    102a:	d2 1a       	sub	r13, r18
    102c:	01 c0       	rjmp	.+2      	; 0x1030 <vfprintf+0x2f2>
    102e:	dd 24       	eor	r13, r13
    1030:	61 2e       	mov	r6, r17
    1032:	77 24       	eor	r7, r7
    1034:	c3 01       	movw	r24, r6
    1036:	89 70       	andi	r24, 0x09	; 9
    1038:	90 70       	andi	r25, 0x00	; 0
    103a:	00 97       	sbiw	r24, 0x00	; 0
    103c:	49 f4       	brne	.+18     	; 0x1050 <vfprintf+0x312>
    103e:	06 c0       	rjmp	.+12     	; 0x104c <vfprintf+0x30e>
    1040:	80 e2       	ldi	r24, 0x20	; 32
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	b4 01       	movw	r22, r8
    1046:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    104a:	da 94       	dec	r13
    104c:	dd 20       	and	r13, r13
    104e:	c1 f7       	brne	.-16     	; 0x1040 <vfprintf+0x302>
    1050:	00 23       	and	r16, r16
    1052:	29 f0       	breq	.+10     	; 0x105e <vfprintf+0x320>
    1054:	80 2f       	mov	r24, r16
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	b4 01       	movw	r22, r8
    105a:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    105e:	63 fc       	sbrc	r6, 3
    1060:	09 c0       	rjmp	.+18     	; 0x1074 <vfprintf+0x336>
    1062:	06 c0       	rjmp	.+12     	; 0x1070 <vfprintf+0x332>
    1064:	80 e3       	ldi	r24, 0x30	; 48
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	b4 01       	movw	r22, r8
    106a:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    106e:	da 94       	dec	r13
    1070:	dd 20       	and	r13, r13
    1072:	c1 f7       	brne	.-16     	; 0x1064 <vfprintf+0x326>
    1074:	17 ff       	sbrs	r17, 7
    1076:	48 c0       	rjmp	.+144    	; 0x1108 <vfprintf+0x3ca>
    1078:	85 01       	movw	r16, r10
    107a:	b7 fe       	sbrs	r11, 7
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <vfprintf+0x344>
    107e:	00 e0       	ldi	r16, 0x00	; 0
    1080:	10 e0       	ldi	r17, 0x00	; 0
    1082:	66 24       	eor	r6, r6
    1084:	77 24       	eor	r7, r7
    1086:	95 01       	movw	r18, r10
    1088:	2e 19       	sub	r18, r14
    108a:	31 09       	sbc	r19, r1
    108c:	3b 8b       	std	Y+19, r19	; 0x13
    108e:	2a 8b       	std	Y+18, r18	; 0x12
    1090:	25 01       	movw	r4, r10
    1092:	40 1a       	sub	r4, r16
    1094:	51 0a       	sbc	r5, r17
    1096:	42 0c       	add	r4, r2
    1098:	53 1c       	adc	r5, r3
    109a:	6f 2d       	mov	r22, r15
    109c:	70 e0       	ldi	r23, 0x00	; 0
    109e:	ee 24       	eor	r14, r14
    10a0:	ff 24       	eor	r15, r15
    10a2:	e6 1a       	sub	r14, r22
    10a4:	f7 0a       	sbc	r15, r23
    10a6:	3f ef       	ldi	r19, 0xFF	; 255
    10a8:	0f 3f       	cpi	r16, 0xFF	; 255
    10aa:	13 07       	cpc	r17, r19
    10ac:	29 f4       	brne	.+10     	; 0x10b8 <vfprintf+0x37a>
    10ae:	8e e2       	ldi	r24, 0x2E	; 46
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	b4 01       	movw	r22, r8
    10b4:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    10b8:	a0 16       	cp	r10, r16
    10ba:	b1 06       	cpc	r11, r17
    10bc:	54 f0       	brlt	.+20     	; 0x10d2 <vfprintf+0x394>
    10be:	2a 89       	ldd	r18, Y+18	; 0x12
    10c0:	3b 89       	ldd	r19, Y+19	; 0x13
    10c2:	20 17       	cp	r18, r16
    10c4:	31 07       	cpc	r19, r17
    10c6:	2c f4       	brge	.+10     	; 0x10d2 <vfprintf+0x394>
    10c8:	f2 01       	movw	r30, r4
    10ca:	e6 0d       	add	r30, r6
    10cc:	f7 1d       	adc	r31, r7
    10ce:	81 81       	ldd	r24, Z+1	; 0x01
    10d0:	01 c0       	rjmp	.+2      	; 0x10d4 <vfprintf+0x396>
    10d2:	80 e3       	ldi	r24, 0x30	; 48
    10d4:	01 50       	subi	r16, 0x01	; 1
    10d6:	10 40       	sbci	r17, 0x00	; 0
    10d8:	08 94       	sec
    10da:	61 1c       	adc	r6, r1
    10dc:	71 1c       	adc	r7, r1
    10de:	0e 15       	cp	r16, r14
    10e0:	1f 05       	cpc	r17, r15
    10e2:	2c f0       	brlt	.+10     	; 0x10ee <vfprintf+0x3b0>
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	b4 01       	movw	r22, r8
    10e8:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    10ec:	dc cf       	rjmp	.-72     	; 0x10a6 <vfprintf+0x368>
    10ee:	0a 15       	cp	r16, r10
    10f0:	1b 05       	cpc	r17, r11
    10f2:	41 f4       	brne	.+16     	; 0x1104 <vfprintf+0x3c6>
    10f4:	9a 81       	ldd	r25, Y+2	; 0x02
    10f6:	96 33       	cpi	r25, 0x36	; 54
    10f8:	20 f4       	brcc	.+8      	; 0x1102 <vfprintf+0x3c4>
    10fa:	95 33       	cpi	r25, 0x35	; 53
    10fc:	19 f4       	brne	.+6      	; 0x1104 <vfprintf+0x3c6>
    10fe:	38 89       	ldd	r19, Y+16	; 0x10
    1100:	34 ff       	sbrs	r19, 4
    1102:	81 e3       	ldi	r24, 0x31	; 49
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	49 c0       	rjmp	.+146    	; 0x119a <vfprintf+0x45c>
    1108:	8a 81       	ldd	r24, Y+2	; 0x02
    110a:	81 33       	cpi	r24, 0x31	; 49
    110c:	11 f0       	breq	.+4      	; 0x1112 <vfprintf+0x3d4>
    110e:	9f ee       	ldi	r25, 0xEF	; 239
    1110:	c9 22       	and	r12, r25
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	b4 01       	movw	r22, r8
    1116:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    111a:	ff 20       	and	r15, r15
    111c:	89 f0       	breq	.+34     	; 0x1140 <vfprintf+0x402>
    111e:	8e e2       	ldi	r24, 0x2E	; 46
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	b4 01       	movw	r22, r8
    1124:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1128:	12 e0       	ldi	r17, 0x02	; 2
    112a:	f1 01       	movw	r30, r2
    112c:	e1 0f       	add	r30, r17
    112e:	f1 1d       	adc	r31, r1
    1130:	1f 5f       	subi	r17, 0xFF	; 255
    1132:	80 81       	ld	r24, Z
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	b4 01       	movw	r22, r8
    1138:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    113c:	fa 94       	dec	r15
    113e:	a9 f7       	brne	.-22     	; 0x112a <vfprintf+0x3ec>
    1140:	64 fe       	sbrs	r6, 4
    1142:	03 c0       	rjmp	.+6      	; 0x114a <vfprintf+0x40c>
    1144:	85 e4       	ldi	r24, 0x45	; 69
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	02 c0       	rjmp	.+4      	; 0x114e <vfprintf+0x410>
    114a:	85 e6       	ldi	r24, 0x65	; 101
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	b4 01       	movw	r22, r8
    1150:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1154:	b7 fc       	sbrc	r11, 7
    1156:	05 c0       	rjmp	.+10     	; 0x1162 <vfprintf+0x424>
    1158:	a1 14       	cp	r10, r1
    115a:	b1 04       	cpc	r11, r1
    115c:	41 f4       	brne	.+16     	; 0x116e <vfprintf+0x430>
    115e:	c4 fe       	sbrs	r12, 4
    1160:	06 c0       	rjmp	.+12     	; 0x116e <vfprintf+0x430>
    1162:	b0 94       	com	r11
    1164:	a1 94       	neg	r10
    1166:	b1 08       	sbc	r11, r1
    1168:	b3 94       	inc	r11
    116a:	8d e2       	ldi	r24, 0x2D	; 45
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <vfprintf+0x432>
    116e:	8b e2       	ldi	r24, 0x2B	; 43
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	b4 01       	movw	r22, r8
    1174:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1178:	80 e3       	ldi	r24, 0x30	; 48
    117a:	05 c0       	rjmp	.+10     	; 0x1186 <vfprintf+0x448>
    117c:	8f 5f       	subi	r24, 0xFF	; 255
    117e:	e6 ef       	ldi	r30, 0xF6	; 246
    1180:	ff ef       	ldi	r31, 0xFF	; 255
    1182:	ae 0e       	add	r10, r30
    1184:	bf 1e       	adc	r11, r31
    1186:	fa e0       	ldi	r31, 0x0A	; 10
    1188:	af 16       	cp	r10, r31
    118a:	b1 04       	cpc	r11, r1
    118c:	bc f7       	brge	.-18     	; 0x117c <vfprintf+0x43e>
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	b4 01       	movw	r22, r8
    1192:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1196:	c5 01       	movw	r24, r10
    1198:	c0 96       	adiw	r24, 0x30	; 48
    119a:	b4 01       	movw	r22, r8
    119c:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    11a0:	4d c1       	rjmp	.+666    	; 0x143c <vfprintf+0x6fe>
    11a2:	83 36       	cpi	r24, 0x63	; 99
    11a4:	31 f0       	breq	.+12     	; 0x11b2 <vfprintf+0x474>
    11a6:	83 37       	cpi	r24, 0x73	; 115
    11a8:	89 f0       	breq	.+34     	; 0x11cc <vfprintf+0x48e>
    11aa:	83 35       	cpi	r24, 0x53	; 83
    11ac:	09 f0       	breq	.+2      	; 0x11b0 <vfprintf+0x472>
    11ae:	59 c0       	rjmp	.+178    	; 0x1262 <vfprintf+0x524>
    11b0:	22 c0       	rjmp	.+68     	; 0x11f6 <vfprintf+0x4b8>
    11b2:	9a 01       	movw	r18, r20
    11b4:	2e 5f       	subi	r18, 0xFE	; 254
    11b6:	3f 4f       	sbci	r19, 0xFF	; 255
    11b8:	3d 87       	std	Y+13, r19	; 0x0d
    11ba:	2c 87       	std	Y+12, r18	; 0x0c
    11bc:	fa 01       	movw	r30, r20
    11be:	80 81       	ld	r24, Z
    11c0:	89 83       	std	Y+1, r24	; 0x01
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	e8 2e       	mov	r14, r24
    11c6:	f1 2c       	mov	r15, r1
    11c8:	51 01       	movw	r10, r2
    11ca:	13 c0       	rjmp	.+38     	; 0x11f2 <vfprintf+0x4b4>
    11cc:	9a 01       	movw	r18, r20
    11ce:	2e 5f       	subi	r18, 0xFE	; 254
    11d0:	3f 4f       	sbci	r19, 0xFF	; 255
    11d2:	3d 87       	std	Y+13, r19	; 0x0d
    11d4:	2c 87       	std	Y+12, r18	; 0x0c
    11d6:	fa 01       	movw	r30, r20
    11d8:	a0 80       	ld	r10, Z
    11da:	b1 80       	ldd	r11, Z+1	; 0x01
    11dc:	16 ff       	sbrs	r17, 6
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <vfprintf+0x4a8>
    11e0:	6f 2d       	mov	r22, r15
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	02 c0       	rjmp	.+4      	; 0x11ea <vfprintf+0x4ac>
    11e6:	6f ef       	ldi	r22, 0xFF	; 255
    11e8:	7f ef       	ldi	r23, 0xFF	; 255
    11ea:	c5 01       	movw	r24, r10
    11ec:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <strnlen>
    11f0:	7c 01       	movw	r14, r24
    11f2:	1f 77       	andi	r17, 0x7F	; 127
    11f4:	14 c0       	rjmp	.+40     	; 0x121e <vfprintf+0x4e0>
    11f6:	9a 01       	movw	r18, r20
    11f8:	2e 5f       	subi	r18, 0xFE	; 254
    11fa:	3f 4f       	sbci	r19, 0xFF	; 255
    11fc:	3d 87       	std	Y+13, r19	; 0x0d
    11fe:	2c 87       	std	Y+12, r18	; 0x0c
    1200:	fa 01       	movw	r30, r20
    1202:	a0 80       	ld	r10, Z
    1204:	b1 80       	ldd	r11, Z+1	; 0x01
    1206:	16 ff       	sbrs	r17, 6
    1208:	03 c0       	rjmp	.+6      	; 0x1210 <vfprintf+0x4d2>
    120a:	6f 2d       	mov	r22, r15
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <vfprintf+0x4d6>
    1210:	6f ef       	ldi	r22, 0xFF	; 255
    1212:	7f ef       	ldi	r23, 0xFF	; 255
    1214:	c5 01       	movw	r24, r10
    1216:	0e 94 66 0b 	call	0x16cc	; 0x16cc <strnlen_P>
    121a:	7c 01       	movw	r14, r24
    121c:	10 68       	ori	r17, 0x80	; 128
    121e:	13 fd       	sbrc	r17, 3
    1220:	1c c0       	rjmp	.+56     	; 0x125a <vfprintf+0x51c>
    1222:	06 c0       	rjmp	.+12     	; 0x1230 <vfprintf+0x4f2>
    1224:	80 e2       	ldi	r24, 0x20	; 32
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	b4 01       	movw	r22, r8
    122a:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    122e:	da 94       	dec	r13
    1230:	8d 2d       	mov	r24, r13
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	e8 16       	cp	r14, r24
    1236:	f9 06       	cpc	r15, r25
    1238:	a8 f3       	brcs	.-22     	; 0x1224 <vfprintf+0x4e6>
    123a:	0f c0       	rjmp	.+30     	; 0x125a <vfprintf+0x51c>
    123c:	f5 01       	movw	r30, r10
    123e:	17 fd       	sbrc	r17, 7
    1240:	85 91       	lpm	r24, Z+
    1242:	17 ff       	sbrs	r17, 7
    1244:	81 91       	ld	r24, Z+
    1246:	5f 01       	movw	r10, r30
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	b4 01       	movw	r22, r8
    124c:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1250:	d1 10       	cpse	r13, r1
    1252:	da 94       	dec	r13
    1254:	08 94       	sec
    1256:	e1 08       	sbc	r14, r1
    1258:	f1 08       	sbc	r15, r1
    125a:	e1 14       	cp	r14, r1
    125c:	f1 04       	cpc	r15, r1
    125e:	71 f7       	brne	.-36     	; 0x123c <vfprintf+0x4fe>
    1260:	ed c0       	rjmp	.+474    	; 0x143c <vfprintf+0x6fe>
    1262:	84 36       	cpi	r24, 0x64	; 100
    1264:	11 f0       	breq	.+4      	; 0x126a <vfprintf+0x52c>
    1266:	89 36       	cpi	r24, 0x69	; 105
    1268:	71 f5       	brne	.+92     	; 0x12c6 <vfprintf+0x588>
    126a:	9a 01       	movw	r18, r20
    126c:	17 ff       	sbrs	r17, 7
    126e:	0a c0       	rjmp	.+20     	; 0x1284 <vfprintf+0x546>
    1270:	2c 5f       	subi	r18, 0xFC	; 252
    1272:	3f 4f       	sbci	r19, 0xFF	; 255
    1274:	3d 87       	std	Y+13, r19	; 0x0d
    1276:	2c 87       	std	Y+12, r18	; 0x0c
    1278:	fa 01       	movw	r30, r20
    127a:	80 81       	ld	r24, Z
    127c:	91 81       	ldd	r25, Z+1	; 0x01
    127e:	a2 81       	ldd	r26, Z+2	; 0x02
    1280:	b3 81       	ldd	r27, Z+3	; 0x03
    1282:	0b c0       	rjmp	.+22     	; 0x129a <vfprintf+0x55c>
    1284:	2e 5f       	subi	r18, 0xFE	; 254
    1286:	3f 4f       	sbci	r19, 0xFF	; 255
    1288:	3d 87       	std	Y+13, r19	; 0x0d
    128a:	2c 87       	std	Y+12, r18	; 0x0c
    128c:	fa 01       	movw	r30, r20
    128e:	80 81       	ld	r24, Z
    1290:	91 81       	ldd	r25, Z+1	; 0x01
    1292:	aa 27       	eor	r26, r26
    1294:	97 fd       	sbrc	r25, 7
    1296:	a0 95       	com	r26
    1298:	ba 2f       	mov	r27, r26
    129a:	01 2f       	mov	r16, r17
    129c:	0f 76       	andi	r16, 0x6F	; 111
    129e:	b7 ff       	sbrs	r27, 7
    12a0:	08 c0       	rjmp	.+16     	; 0x12b2 <vfprintf+0x574>
    12a2:	b0 95       	com	r27
    12a4:	a0 95       	com	r26
    12a6:	90 95       	com	r25
    12a8:	81 95       	neg	r24
    12aa:	9f 4f       	sbci	r25, 0xFF	; 255
    12ac:	af 4f       	sbci	r26, 0xFF	; 255
    12ae:	bf 4f       	sbci	r27, 0xFF	; 255
    12b0:	00 68       	ori	r16, 0x80	; 128
    12b2:	bc 01       	movw	r22, r24
    12b4:	cd 01       	movw	r24, r26
    12b6:	a1 01       	movw	r20, r2
    12b8:	2a e0       	ldi	r18, 0x0A	; 10
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	0e 94 c6 0b 	call	0x178c	; 0x178c <__ultoa_invert>
    12c0:	e8 2e       	mov	r14, r24
    12c2:	e2 18       	sub	r14, r2
    12c4:	41 c0       	rjmp	.+130    	; 0x1348 <vfprintf+0x60a>
    12c6:	85 37       	cpi	r24, 0x75	; 117
    12c8:	21 f4       	brne	.+8      	; 0x12d2 <vfprintf+0x594>
    12ca:	1f 7e       	andi	r17, 0xEF	; 239
    12cc:	2a e0       	ldi	r18, 0x0A	; 10
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	20 c0       	rjmp	.+64     	; 0x1312 <vfprintf+0x5d4>
    12d2:	19 7f       	andi	r17, 0xF9	; 249
    12d4:	8f 36       	cpi	r24, 0x6F	; 111
    12d6:	a9 f0       	breq	.+42     	; 0x1302 <vfprintf+0x5c4>
    12d8:	80 37       	cpi	r24, 0x70	; 112
    12da:	20 f4       	brcc	.+8      	; 0x12e4 <vfprintf+0x5a6>
    12dc:	88 35       	cpi	r24, 0x58	; 88
    12de:	09 f0       	breq	.+2      	; 0x12e2 <vfprintf+0x5a4>
    12e0:	b0 c0       	rjmp	.+352    	; 0x1442 <vfprintf+0x704>
    12e2:	0b c0       	rjmp	.+22     	; 0x12fa <vfprintf+0x5bc>
    12e4:	80 37       	cpi	r24, 0x70	; 112
    12e6:	21 f0       	breq	.+8      	; 0x12f0 <vfprintf+0x5b2>
    12e8:	88 37       	cpi	r24, 0x78	; 120
    12ea:	09 f0       	breq	.+2      	; 0x12ee <vfprintf+0x5b0>
    12ec:	aa c0       	rjmp	.+340    	; 0x1442 <vfprintf+0x704>
    12ee:	01 c0       	rjmp	.+2      	; 0x12f2 <vfprintf+0x5b4>
    12f0:	10 61       	ori	r17, 0x10	; 16
    12f2:	14 ff       	sbrs	r17, 4
    12f4:	09 c0       	rjmp	.+18     	; 0x1308 <vfprintf+0x5ca>
    12f6:	14 60       	ori	r17, 0x04	; 4
    12f8:	07 c0       	rjmp	.+14     	; 0x1308 <vfprintf+0x5ca>
    12fa:	14 ff       	sbrs	r17, 4
    12fc:	08 c0       	rjmp	.+16     	; 0x130e <vfprintf+0x5d0>
    12fe:	16 60       	ori	r17, 0x06	; 6
    1300:	06 c0       	rjmp	.+12     	; 0x130e <vfprintf+0x5d0>
    1302:	28 e0       	ldi	r18, 0x08	; 8
    1304:	30 e0       	ldi	r19, 0x00	; 0
    1306:	05 c0       	rjmp	.+10     	; 0x1312 <vfprintf+0x5d4>
    1308:	20 e1       	ldi	r18, 0x10	; 16
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <vfprintf+0x5d4>
    130e:	20 e1       	ldi	r18, 0x10	; 16
    1310:	32 e0       	ldi	r19, 0x02	; 2
    1312:	ca 01       	movw	r24, r20
    1314:	17 ff       	sbrs	r17, 7
    1316:	09 c0       	rjmp	.+18     	; 0x132a <vfprintf+0x5ec>
    1318:	04 96       	adiw	r24, 0x04	; 4
    131a:	9d 87       	std	Y+13, r25	; 0x0d
    131c:	8c 87       	std	Y+12, r24	; 0x0c
    131e:	fa 01       	movw	r30, r20
    1320:	60 81       	ld	r22, Z
    1322:	71 81       	ldd	r23, Z+1	; 0x01
    1324:	82 81       	ldd	r24, Z+2	; 0x02
    1326:	93 81       	ldd	r25, Z+3	; 0x03
    1328:	08 c0       	rjmp	.+16     	; 0x133a <vfprintf+0x5fc>
    132a:	02 96       	adiw	r24, 0x02	; 2
    132c:	9d 87       	std	Y+13, r25	; 0x0d
    132e:	8c 87       	std	Y+12, r24	; 0x0c
    1330:	fa 01       	movw	r30, r20
    1332:	60 81       	ld	r22, Z
    1334:	71 81       	ldd	r23, Z+1	; 0x01
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	a1 01       	movw	r20, r2
    133c:	0e 94 c6 0b 	call	0x178c	; 0x178c <__ultoa_invert>
    1340:	e8 2e       	mov	r14, r24
    1342:	e2 18       	sub	r14, r2
    1344:	01 2f       	mov	r16, r17
    1346:	0f 77       	andi	r16, 0x7F	; 127
    1348:	06 ff       	sbrs	r16, 6
    134a:	09 c0       	rjmp	.+18     	; 0x135e <vfprintf+0x620>
    134c:	0e 7f       	andi	r16, 0xFE	; 254
    134e:	ef 14       	cp	r14, r15
    1350:	30 f4       	brcc	.+12     	; 0x135e <vfprintf+0x620>
    1352:	04 ff       	sbrs	r16, 4
    1354:	06 c0       	rjmp	.+12     	; 0x1362 <vfprintf+0x624>
    1356:	02 fd       	sbrc	r16, 2
    1358:	04 c0       	rjmp	.+8      	; 0x1362 <vfprintf+0x624>
    135a:	0f 7e       	andi	r16, 0xEF	; 239
    135c:	02 c0       	rjmp	.+4      	; 0x1362 <vfprintf+0x624>
    135e:	1e 2d       	mov	r17, r14
    1360:	01 c0       	rjmp	.+2      	; 0x1364 <vfprintf+0x626>
    1362:	1f 2d       	mov	r17, r15
    1364:	80 2f       	mov	r24, r16
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	04 ff       	sbrs	r16, 4
    136a:	0c c0       	rjmp	.+24     	; 0x1384 <vfprintf+0x646>
    136c:	fe 01       	movw	r30, r28
    136e:	ee 0d       	add	r30, r14
    1370:	f1 1d       	adc	r31, r1
    1372:	20 81       	ld	r18, Z
    1374:	20 33       	cpi	r18, 0x30	; 48
    1376:	11 f4       	brne	.+4      	; 0x137c <vfprintf+0x63e>
    1378:	09 7e       	andi	r16, 0xE9	; 233
    137a:	09 c0       	rjmp	.+18     	; 0x138e <vfprintf+0x650>
    137c:	02 ff       	sbrs	r16, 2
    137e:	06 c0       	rjmp	.+12     	; 0x138c <vfprintf+0x64e>
    1380:	1e 5f       	subi	r17, 0xFE	; 254
    1382:	05 c0       	rjmp	.+10     	; 0x138e <vfprintf+0x650>
    1384:	86 78       	andi	r24, 0x86	; 134
    1386:	90 70       	andi	r25, 0x00	; 0
    1388:	00 97       	sbiw	r24, 0x00	; 0
    138a:	09 f0       	breq	.+2      	; 0x138e <vfprintf+0x650>
    138c:	1f 5f       	subi	r17, 0xFF	; 255
    138e:	a0 2e       	mov	r10, r16
    1390:	bb 24       	eor	r11, r11
    1392:	03 fd       	sbrc	r16, 3
    1394:	12 c0       	rjmp	.+36     	; 0x13ba <vfprintf+0x67c>
    1396:	00 ff       	sbrs	r16, 0
    1398:	0d c0       	rjmp	.+26     	; 0x13b4 <vfprintf+0x676>
    139a:	fe 2c       	mov	r15, r14
    139c:	1d 15       	cp	r17, r13
    139e:	50 f4       	brcc	.+20     	; 0x13b4 <vfprintf+0x676>
    13a0:	fd 0c       	add	r15, r13
    13a2:	f1 1a       	sub	r15, r17
    13a4:	1d 2d       	mov	r17, r13
    13a6:	06 c0       	rjmp	.+12     	; 0x13b4 <vfprintf+0x676>
    13a8:	80 e2       	ldi	r24, 0x20	; 32
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	b4 01       	movw	r22, r8
    13ae:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    13b2:	1f 5f       	subi	r17, 0xFF	; 255
    13b4:	1d 15       	cp	r17, r13
    13b6:	c0 f3       	brcs	.-16     	; 0x13a8 <vfprintf+0x66a>
    13b8:	04 c0       	rjmp	.+8      	; 0x13c2 <vfprintf+0x684>
    13ba:	1d 15       	cp	r17, r13
    13bc:	10 f4       	brcc	.+4      	; 0x13c2 <vfprintf+0x684>
    13be:	d1 1a       	sub	r13, r17
    13c0:	01 c0       	rjmp	.+2      	; 0x13c4 <vfprintf+0x686>
    13c2:	dd 24       	eor	r13, r13
    13c4:	a4 fe       	sbrs	r10, 4
    13c6:	0f c0       	rjmp	.+30     	; 0x13e6 <vfprintf+0x6a8>
    13c8:	80 e3       	ldi	r24, 0x30	; 48
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	b4 01       	movw	r22, r8
    13ce:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    13d2:	a2 fe       	sbrs	r10, 2
    13d4:	1f c0       	rjmp	.+62     	; 0x1414 <vfprintf+0x6d6>
    13d6:	a1 fe       	sbrs	r10, 1
    13d8:	03 c0       	rjmp	.+6      	; 0x13e0 <vfprintf+0x6a2>
    13da:	88 e5       	ldi	r24, 0x58	; 88
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	10 c0       	rjmp	.+32     	; 0x1400 <vfprintf+0x6c2>
    13e0:	88 e7       	ldi	r24, 0x78	; 120
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	0d c0       	rjmp	.+26     	; 0x1400 <vfprintf+0x6c2>
    13e6:	c5 01       	movw	r24, r10
    13e8:	86 78       	andi	r24, 0x86	; 134
    13ea:	90 70       	andi	r25, 0x00	; 0
    13ec:	00 97       	sbiw	r24, 0x00	; 0
    13ee:	91 f0       	breq	.+36     	; 0x1414 <vfprintf+0x6d6>
    13f0:	a1 fc       	sbrc	r10, 1
    13f2:	02 c0       	rjmp	.+4      	; 0x13f8 <vfprintf+0x6ba>
    13f4:	80 e2       	ldi	r24, 0x20	; 32
    13f6:	01 c0       	rjmp	.+2      	; 0x13fa <vfprintf+0x6bc>
    13f8:	8b e2       	ldi	r24, 0x2B	; 43
    13fa:	07 fd       	sbrc	r16, 7
    13fc:	8d e2       	ldi	r24, 0x2D	; 45
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	b4 01       	movw	r22, r8
    1402:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1406:	06 c0       	rjmp	.+12     	; 0x1414 <vfprintf+0x6d6>
    1408:	80 e3       	ldi	r24, 0x30	; 48
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	b4 01       	movw	r22, r8
    140e:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    1412:	fa 94       	dec	r15
    1414:	ef 14       	cp	r14, r15
    1416:	c0 f3       	brcs	.-16     	; 0x1408 <vfprintf+0x6ca>
    1418:	ea 94       	dec	r14
    141a:	f1 01       	movw	r30, r2
    141c:	ee 0d       	add	r30, r14
    141e:	f1 1d       	adc	r31, r1
    1420:	80 81       	ld	r24, Z
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	b4 01       	movw	r22, r8
    1426:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    142a:	ee 20       	and	r14, r14
    142c:	a9 f7       	brne	.-22     	; 0x1418 <vfprintf+0x6da>
    142e:	06 c0       	rjmp	.+12     	; 0x143c <vfprintf+0x6fe>
    1430:	80 e2       	ldi	r24, 0x20	; 32
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	b4 01       	movw	r22, r8
    1436:	0e 94 85 0b 	call	0x170a	; 0x170a <fputc>
    143a:	da 94       	dec	r13
    143c:	dd 20       	and	r13, r13
    143e:	c1 f7       	brne	.-16     	; 0x1430 <vfprintf+0x6f2>
    1440:	8e cc       	rjmp	.-1764   	; 0xd5e <vfprintf+0x20>
    1442:	f4 01       	movw	r30, r8
    1444:	86 81       	ldd	r24, Z+6	; 0x06
    1446:	97 81       	ldd	r25, Z+7	; 0x07
    1448:	02 c0       	rjmp	.+4      	; 0x144e <vfprintf+0x710>
    144a:	8f ef       	ldi	r24, 0xFF	; 255
    144c:	9f ef       	ldi	r25, 0xFF	; 255
    144e:	65 96       	adiw	r28, 0x15	; 21
    1450:	e2 e1       	ldi	r30, 0x12	; 18
    1452:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__epilogue_restores__>

00001456 <__divmodhi4>:
    1456:	97 fb       	bst	r25, 7
    1458:	09 2e       	mov	r0, r25
    145a:	07 26       	eor	r0, r23
    145c:	0a d0       	rcall	.+20     	; 0x1472 <__divmodhi4_neg1>
    145e:	77 fd       	sbrc	r23, 7
    1460:	04 d0       	rcall	.+8      	; 0x146a <__divmodhi4_neg2>
    1462:	43 d0       	rcall	.+134    	; 0x14ea <__udivmodhi4>
    1464:	06 d0       	rcall	.+12     	; 0x1472 <__divmodhi4_neg1>
    1466:	00 20       	and	r0, r0
    1468:	1a f4       	brpl	.+6      	; 0x1470 <__divmodhi4_exit>

0000146a <__divmodhi4_neg2>:
    146a:	70 95       	com	r23
    146c:	61 95       	neg	r22
    146e:	7f 4f       	sbci	r23, 0xFF	; 255

00001470 <__divmodhi4_exit>:
    1470:	08 95       	ret

00001472 <__divmodhi4_neg1>:
    1472:	f6 f7       	brtc	.-4      	; 0x1470 <__divmodhi4_exit>
    1474:	90 95       	com	r25
    1476:	81 95       	neg	r24
    1478:	9f 4f       	sbci	r25, 0xFF	; 255
    147a:	08 95       	ret

0000147c <__prologue_saves__>:
    147c:	2f 92       	push	r2
    147e:	3f 92       	push	r3
    1480:	4f 92       	push	r4
    1482:	5f 92       	push	r5
    1484:	6f 92       	push	r6
    1486:	7f 92       	push	r7
    1488:	8f 92       	push	r8
    148a:	9f 92       	push	r9
    148c:	af 92       	push	r10
    148e:	bf 92       	push	r11
    1490:	cf 92       	push	r12
    1492:	df 92       	push	r13
    1494:	ef 92       	push	r14
    1496:	ff 92       	push	r15
    1498:	0f 93       	push	r16
    149a:	1f 93       	push	r17
    149c:	cf 93       	push	r28
    149e:	df 93       	push	r29
    14a0:	cd b7       	in	r28, 0x3d	; 61
    14a2:	de b7       	in	r29, 0x3e	; 62
    14a4:	ca 1b       	sub	r28, r26
    14a6:	db 0b       	sbc	r29, r27
    14a8:	0f b6       	in	r0, 0x3f	; 63
    14aa:	f8 94       	cli
    14ac:	de bf       	out	0x3e, r29	; 62
    14ae:	0f be       	out	0x3f, r0	; 63
    14b0:	cd bf       	out	0x3d, r28	; 61
    14b2:	09 94       	ijmp

000014b4 <__epilogue_restores__>:
    14b4:	2a 88       	ldd	r2, Y+18	; 0x12
    14b6:	39 88       	ldd	r3, Y+17	; 0x11
    14b8:	48 88       	ldd	r4, Y+16	; 0x10
    14ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    14bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    14be:	7d 84       	ldd	r7, Y+13	; 0x0d
    14c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    14c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    14c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    14c6:	b9 84       	ldd	r11, Y+9	; 0x09
    14c8:	c8 84       	ldd	r12, Y+8	; 0x08
    14ca:	df 80       	ldd	r13, Y+7	; 0x07
    14cc:	ee 80       	ldd	r14, Y+6	; 0x06
    14ce:	fd 80       	ldd	r15, Y+5	; 0x05
    14d0:	0c 81       	ldd	r16, Y+4	; 0x04
    14d2:	1b 81       	ldd	r17, Y+3	; 0x03
    14d4:	aa 81       	ldd	r26, Y+2	; 0x02
    14d6:	b9 81       	ldd	r27, Y+1	; 0x01
    14d8:	ce 0f       	add	r28, r30
    14da:	d1 1d       	adc	r29, r1
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	f8 94       	cli
    14e0:	de bf       	out	0x3e, r29	; 62
    14e2:	0f be       	out	0x3f, r0	; 63
    14e4:	cd bf       	out	0x3d, r28	; 61
    14e6:	ed 01       	movw	r28, r26
    14e8:	08 95       	ret

000014ea <__udivmodhi4>:
    14ea:	aa 1b       	sub	r26, r26
    14ec:	bb 1b       	sub	r27, r27
    14ee:	51 e1       	ldi	r21, 0x11	; 17
    14f0:	07 c0       	rjmp	.+14     	; 0x1500 <__udivmodhi4_ep>

000014f2 <__udivmodhi4_loop>:
    14f2:	aa 1f       	adc	r26, r26
    14f4:	bb 1f       	adc	r27, r27
    14f6:	a6 17       	cp	r26, r22
    14f8:	b7 07       	cpc	r27, r23
    14fa:	10 f0       	brcs	.+4      	; 0x1500 <__udivmodhi4_ep>
    14fc:	a6 1b       	sub	r26, r22
    14fe:	b7 0b       	sbc	r27, r23

00001500 <__udivmodhi4_ep>:
    1500:	88 1f       	adc	r24, r24
    1502:	99 1f       	adc	r25, r25
    1504:	5a 95       	dec	r21
    1506:	a9 f7       	brne	.-22     	; 0x14f2 <__udivmodhi4_loop>
    1508:	80 95       	com	r24
    150a:	90 95       	com	r25
    150c:	bc 01       	movw	r22, r24
    150e:	cd 01       	movw	r24, r26
    1510:	08 95       	ret

00001512 <abort>:
    1512:	81 e0       	ldi	r24, 0x01	; 1
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	f8 94       	cli
    1518:	0c 94 24 0c 	jmp	0x1848	; 0x1848 <_exit>

0000151c <__ftoa_engine>:
    151c:	28 30       	cpi	r18, 0x08	; 8
    151e:	08 f0       	brcs	.+2      	; 0x1522 <__ftoa_engine+0x6>
    1520:	27 e0       	ldi	r18, 0x07	; 7
    1522:	33 27       	eor	r19, r19
    1524:	da 01       	movw	r26, r20
    1526:	99 0f       	add	r25, r25
    1528:	31 1d       	adc	r19, r1
    152a:	87 fd       	sbrc	r24, 7
    152c:	91 60       	ori	r25, 0x01	; 1
    152e:	00 96       	adiw	r24, 0x00	; 0
    1530:	61 05       	cpc	r22, r1
    1532:	71 05       	cpc	r23, r1
    1534:	39 f4       	brne	.+14     	; 0x1544 <__ftoa_engine+0x28>
    1536:	32 60       	ori	r19, 0x02	; 2
    1538:	2e 5f       	subi	r18, 0xFE	; 254
    153a:	3d 93       	st	X+, r19
    153c:	30 e3       	ldi	r19, 0x30	; 48
    153e:	2a 95       	dec	r18
    1540:	e1 f7       	brne	.-8      	; 0x153a <__ftoa_engine+0x1e>
    1542:	08 95       	ret
    1544:	9f 3f       	cpi	r25, 0xFF	; 255
    1546:	30 f0       	brcs	.+12     	; 0x1554 <__ftoa_engine+0x38>
    1548:	80 38       	cpi	r24, 0x80	; 128
    154a:	71 05       	cpc	r23, r1
    154c:	61 05       	cpc	r22, r1
    154e:	09 f0       	breq	.+2      	; 0x1552 <__ftoa_engine+0x36>
    1550:	3c 5f       	subi	r19, 0xFC	; 252
    1552:	3c 5f       	subi	r19, 0xFC	; 252
    1554:	3d 93       	st	X+, r19
    1556:	91 30       	cpi	r25, 0x01	; 1
    1558:	08 f0       	brcs	.+2      	; 0x155c <__ftoa_engine+0x40>
    155a:	80 68       	ori	r24, 0x80	; 128
    155c:	91 1d       	adc	r25, r1
    155e:	df 93       	push	r29
    1560:	cf 93       	push	r28
    1562:	1f 93       	push	r17
    1564:	0f 93       	push	r16
    1566:	ff 92       	push	r15
    1568:	ef 92       	push	r14
    156a:	19 2f       	mov	r17, r25
    156c:	98 7f       	andi	r25, 0xF8	; 248
    156e:	96 95       	lsr	r25
    1570:	e9 2f       	mov	r30, r25
    1572:	96 95       	lsr	r25
    1574:	96 95       	lsr	r25
    1576:	e9 0f       	add	r30, r25
    1578:	ff 27       	eor	r31, r31
    157a:	e6 53       	subi	r30, 0x36	; 54
    157c:	ff 4f       	sbci	r31, 0xFF	; 255
    157e:	99 27       	eor	r25, r25
    1580:	33 27       	eor	r19, r19
    1582:	ee 24       	eor	r14, r14
    1584:	ff 24       	eor	r15, r15
    1586:	a7 01       	movw	r20, r14
    1588:	e7 01       	movw	r28, r14
    158a:	05 90       	lpm	r0, Z+
    158c:	08 94       	sec
    158e:	07 94       	ror	r0
    1590:	28 f4       	brcc	.+10     	; 0x159c <__ftoa_engine+0x80>
    1592:	36 0f       	add	r19, r22
    1594:	e7 1e       	adc	r14, r23
    1596:	f8 1e       	adc	r15, r24
    1598:	49 1f       	adc	r20, r25
    159a:	51 1d       	adc	r21, r1
    159c:	66 0f       	add	r22, r22
    159e:	77 1f       	adc	r23, r23
    15a0:	88 1f       	adc	r24, r24
    15a2:	99 1f       	adc	r25, r25
    15a4:	06 94       	lsr	r0
    15a6:	a1 f7       	brne	.-24     	; 0x1590 <__ftoa_engine+0x74>
    15a8:	05 90       	lpm	r0, Z+
    15aa:	07 94       	ror	r0
    15ac:	28 f4       	brcc	.+10     	; 0x15b8 <__ftoa_engine+0x9c>
    15ae:	e7 0e       	add	r14, r23
    15b0:	f8 1e       	adc	r15, r24
    15b2:	49 1f       	adc	r20, r25
    15b4:	56 1f       	adc	r21, r22
    15b6:	c1 1d       	adc	r28, r1
    15b8:	77 0f       	add	r23, r23
    15ba:	88 1f       	adc	r24, r24
    15bc:	99 1f       	adc	r25, r25
    15be:	66 1f       	adc	r22, r22
    15c0:	06 94       	lsr	r0
    15c2:	a1 f7       	brne	.-24     	; 0x15ac <__ftoa_engine+0x90>
    15c4:	05 90       	lpm	r0, Z+
    15c6:	07 94       	ror	r0
    15c8:	28 f4       	brcc	.+10     	; 0x15d4 <__ftoa_engine+0xb8>
    15ca:	f8 0e       	add	r15, r24
    15cc:	49 1f       	adc	r20, r25
    15ce:	56 1f       	adc	r21, r22
    15d0:	c7 1f       	adc	r28, r23
    15d2:	d1 1d       	adc	r29, r1
    15d4:	88 0f       	add	r24, r24
    15d6:	99 1f       	adc	r25, r25
    15d8:	66 1f       	adc	r22, r22
    15da:	77 1f       	adc	r23, r23
    15dc:	06 94       	lsr	r0
    15de:	a1 f7       	brne	.-24     	; 0x15c8 <__ftoa_engine+0xac>
    15e0:	05 90       	lpm	r0, Z+
    15e2:	07 94       	ror	r0
    15e4:	20 f4       	brcc	.+8      	; 0x15ee <__ftoa_engine+0xd2>
    15e6:	49 0f       	add	r20, r25
    15e8:	56 1f       	adc	r21, r22
    15ea:	c7 1f       	adc	r28, r23
    15ec:	d8 1f       	adc	r29, r24
    15ee:	99 0f       	add	r25, r25
    15f0:	66 1f       	adc	r22, r22
    15f2:	77 1f       	adc	r23, r23
    15f4:	88 1f       	adc	r24, r24
    15f6:	06 94       	lsr	r0
    15f8:	a9 f7       	brne	.-22     	; 0x15e4 <__ftoa_engine+0xc8>
    15fa:	84 91       	lpm	r24, Z
    15fc:	10 95       	com	r17
    15fe:	17 70       	andi	r17, 0x07	; 7
    1600:	41 f0       	breq	.+16     	; 0x1612 <__ftoa_engine+0xf6>
    1602:	d6 95       	lsr	r29
    1604:	c7 95       	ror	r28
    1606:	57 95       	ror	r21
    1608:	47 95       	ror	r20
    160a:	f7 94       	ror	r15
    160c:	e7 94       	ror	r14
    160e:	1a 95       	dec	r17
    1610:	c1 f7       	brne	.-16     	; 0x1602 <__ftoa_engine+0xe6>
    1612:	e0 e7       	ldi	r30, 0x70	; 112
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	68 94       	set
    1618:	15 90       	lpm	r1, Z+
    161a:	15 91       	lpm	r17, Z+
    161c:	35 91       	lpm	r19, Z+
    161e:	65 91       	lpm	r22, Z+
    1620:	95 91       	lpm	r25, Z+
    1622:	05 90       	lpm	r0, Z+
    1624:	7f e2       	ldi	r23, 0x2F	; 47
    1626:	73 95       	inc	r23
    1628:	e1 18       	sub	r14, r1
    162a:	f1 0a       	sbc	r15, r17
    162c:	43 0b       	sbc	r20, r19
    162e:	56 0b       	sbc	r21, r22
    1630:	c9 0b       	sbc	r28, r25
    1632:	d0 09       	sbc	r29, r0
    1634:	c0 f7       	brcc	.-16     	; 0x1626 <__ftoa_engine+0x10a>
    1636:	e1 0c       	add	r14, r1
    1638:	f1 1e       	adc	r15, r17
    163a:	43 1f       	adc	r20, r19
    163c:	56 1f       	adc	r21, r22
    163e:	c9 1f       	adc	r28, r25
    1640:	d0 1d       	adc	r29, r0
    1642:	7e f4       	brtc	.+30     	; 0x1662 <__ftoa_engine+0x146>
    1644:	70 33       	cpi	r23, 0x30	; 48
    1646:	11 f4       	brne	.+4      	; 0x164c <__ftoa_engine+0x130>
    1648:	8a 95       	dec	r24
    164a:	e6 cf       	rjmp	.-52     	; 0x1618 <__ftoa_engine+0xfc>
    164c:	e8 94       	clt
    164e:	01 50       	subi	r16, 0x01	; 1
    1650:	30 f0       	brcs	.+12     	; 0x165e <__ftoa_engine+0x142>
    1652:	08 0f       	add	r16, r24
    1654:	0a f4       	brpl	.+2      	; 0x1658 <__ftoa_engine+0x13c>
    1656:	00 27       	eor	r16, r16
    1658:	02 17       	cp	r16, r18
    165a:	08 f4       	brcc	.+2      	; 0x165e <__ftoa_engine+0x142>
    165c:	20 2f       	mov	r18, r16
    165e:	23 95       	inc	r18
    1660:	02 2f       	mov	r16, r18
    1662:	7a 33       	cpi	r23, 0x3A	; 58
    1664:	28 f0       	brcs	.+10     	; 0x1670 <__ftoa_engine+0x154>
    1666:	79 e3       	ldi	r23, 0x39	; 57
    1668:	7d 93       	st	X+, r23
    166a:	2a 95       	dec	r18
    166c:	e9 f7       	brne	.-6      	; 0x1668 <__ftoa_engine+0x14c>
    166e:	10 c0       	rjmp	.+32     	; 0x1690 <__ftoa_engine+0x174>
    1670:	7d 93       	st	X+, r23
    1672:	2a 95       	dec	r18
    1674:	89 f6       	brne	.-94     	; 0x1618 <__ftoa_engine+0xfc>
    1676:	06 94       	lsr	r0
    1678:	97 95       	ror	r25
    167a:	67 95       	ror	r22
    167c:	37 95       	ror	r19
    167e:	17 95       	ror	r17
    1680:	17 94       	ror	r1
    1682:	e1 18       	sub	r14, r1
    1684:	f1 0a       	sbc	r15, r17
    1686:	43 0b       	sbc	r20, r19
    1688:	56 0b       	sbc	r21, r22
    168a:	c9 0b       	sbc	r28, r25
    168c:	d0 09       	sbc	r29, r0
    168e:	98 f0       	brcs	.+38     	; 0x16b6 <__ftoa_engine+0x19a>
    1690:	23 95       	inc	r18
    1692:	7e 91       	ld	r23, -X
    1694:	73 95       	inc	r23
    1696:	7a 33       	cpi	r23, 0x3A	; 58
    1698:	08 f0       	brcs	.+2      	; 0x169c <__ftoa_engine+0x180>
    169a:	70 e3       	ldi	r23, 0x30	; 48
    169c:	7c 93       	st	X, r23
    169e:	20 13       	cpse	r18, r16
    16a0:	b8 f7       	brcc	.-18     	; 0x1690 <__ftoa_engine+0x174>
    16a2:	7e 91       	ld	r23, -X
    16a4:	70 61       	ori	r23, 0x10	; 16
    16a6:	7d 93       	st	X+, r23
    16a8:	30 f0       	brcs	.+12     	; 0x16b6 <__ftoa_engine+0x19a>
    16aa:	83 95       	inc	r24
    16ac:	71 e3       	ldi	r23, 0x31	; 49
    16ae:	7d 93       	st	X+, r23
    16b0:	70 e3       	ldi	r23, 0x30	; 48
    16b2:	2a 95       	dec	r18
    16b4:	e1 f7       	brne	.-8      	; 0x16ae <__ftoa_engine+0x192>
    16b6:	11 24       	eor	r1, r1
    16b8:	ef 90       	pop	r14
    16ba:	ff 90       	pop	r15
    16bc:	0f 91       	pop	r16
    16be:	1f 91       	pop	r17
    16c0:	cf 91       	pop	r28
    16c2:	df 91       	pop	r29
    16c4:	99 27       	eor	r25, r25
    16c6:	87 fd       	sbrc	r24, 7
    16c8:	90 95       	com	r25
    16ca:	08 95       	ret

000016cc <strnlen_P>:
    16cc:	fc 01       	movw	r30, r24
    16ce:	05 90       	lpm	r0, Z+
    16d0:	61 50       	subi	r22, 0x01	; 1
    16d2:	70 40       	sbci	r23, 0x00	; 0
    16d4:	01 10       	cpse	r0, r1
    16d6:	d8 f7       	brcc	.-10     	; 0x16ce <strnlen_P+0x2>
    16d8:	80 95       	com	r24
    16da:	90 95       	com	r25
    16dc:	8e 0f       	add	r24, r30
    16de:	9f 1f       	adc	r25, r31
    16e0:	08 95       	ret

000016e2 <strcmp>:
    16e2:	fb 01       	movw	r30, r22
    16e4:	dc 01       	movw	r26, r24
    16e6:	8d 91       	ld	r24, X+
    16e8:	01 90       	ld	r0, Z+
    16ea:	80 19       	sub	r24, r0
    16ec:	01 10       	cpse	r0, r1
    16ee:	d9 f3       	breq	.-10     	; 0x16e6 <strcmp+0x4>
    16f0:	99 0b       	sbc	r25, r25
    16f2:	08 95       	ret

000016f4 <strnlen>:
    16f4:	fc 01       	movw	r30, r24
    16f6:	61 50       	subi	r22, 0x01	; 1
    16f8:	70 40       	sbci	r23, 0x00	; 0
    16fa:	01 90       	ld	r0, Z+
    16fc:	01 10       	cpse	r0, r1
    16fe:	d8 f7       	brcc	.-10     	; 0x16f6 <strnlen+0x2>
    1700:	80 95       	com	r24
    1702:	90 95       	com	r25
    1704:	8e 0f       	add	r24, r30
    1706:	9f 1f       	adc	r25, r31
    1708:	08 95       	ret

0000170a <fputc>:
    170a:	0f 93       	push	r16
    170c:	1f 93       	push	r17
    170e:	cf 93       	push	r28
    1710:	df 93       	push	r29
    1712:	8c 01       	movw	r16, r24
    1714:	eb 01       	movw	r28, r22
    1716:	8b 81       	ldd	r24, Y+3	; 0x03
    1718:	81 ff       	sbrs	r24, 1
    171a:	1b c0       	rjmp	.+54     	; 0x1752 <fputc+0x48>
    171c:	82 ff       	sbrs	r24, 2
    171e:	0d c0       	rjmp	.+26     	; 0x173a <fputc+0x30>
    1720:	2e 81       	ldd	r18, Y+6	; 0x06
    1722:	3f 81       	ldd	r19, Y+7	; 0x07
    1724:	8c 81       	ldd	r24, Y+4	; 0x04
    1726:	9d 81       	ldd	r25, Y+5	; 0x05
    1728:	28 17       	cp	r18, r24
    172a:	39 07       	cpc	r19, r25
    172c:	64 f4       	brge	.+24     	; 0x1746 <fputc+0x3c>
    172e:	e8 81       	ld	r30, Y
    1730:	f9 81       	ldd	r31, Y+1	; 0x01
    1732:	01 93       	st	Z+, r16
    1734:	f9 83       	std	Y+1, r31	; 0x01
    1736:	e8 83       	st	Y, r30
    1738:	06 c0       	rjmp	.+12     	; 0x1746 <fputc+0x3c>
    173a:	e8 85       	ldd	r30, Y+8	; 0x08
    173c:	f9 85       	ldd	r31, Y+9	; 0x09
    173e:	80 2f       	mov	r24, r16
    1740:	09 95       	icall
    1742:	00 97       	sbiw	r24, 0x00	; 0
    1744:	31 f4       	brne	.+12     	; 0x1752 <fputc+0x48>
    1746:	8e 81       	ldd	r24, Y+6	; 0x06
    1748:	9f 81       	ldd	r25, Y+7	; 0x07
    174a:	01 96       	adiw	r24, 0x01	; 1
    174c:	9f 83       	std	Y+7, r25	; 0x07
    174e:	8e 83       	std	Y+6, r24	; 0x06
    1750:	02 c0       	rjmp	.+4      	; 0x1756 <fputc+0x4c>
    1752:	0f ef       	ldi	r16, 0xFF	; 255
    1754:	1f ef       	ldi	r17, 0xFF	; 255
    1756:	c8 01       	movw	r24, r16
    1758:	df 91       	pop	r29
    175a:	cf 91       	pop	r28
    175c:	1f 91       	pop	r17
    175e:	0f 91       	pop	r16
    1760:	08 95       	ret

00001762 <printf>:
    1762:	a0 e0       	ldi	r26, 0x00	; 0
    1764:	b0 e0       	ldi	r27, 0x00	; 0
    1766:	e7 eb       	ldi	r30, 0xB7	; 183
    1768:	fb e0       	ldi	r31, 0x0B	; 11
    176a:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__prologue_saves__+0x20>
    176e:	fe 01       	movw	r30, r28
    1770:	35 96       	adiw	r30, 0x05	; 5
    1772:	61 91       	ld	r22, Z+
    1774:	71 91       	ld	r23, Z+
    1776:	80 91 ca 05 	lds	r24, 0x05CA
    177a:	90 91 cb 05 	lds	r25, 0x05CB
    177e:	af 01       	movw	r20, r30
    1780:	0e 94 9f 06 	call	0xd3e	; 0xd3e <vfprintf>
    1784:	20 96       	adiw	r28, 0x00	; 0
    1786:	e2 e0       	ldi	r30, 0x02	; 2
    1788:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__epilogue_restores__+0x20>

0000178c <__ultoa_invert>:
    178c:	fa 01       	movw	r30, r20
    178e:	aa 27       	eor	r26, r26
    1790:	28 30       	cpi	r18, 0x08	; 8
    1792:	51 f1       	breq	.+84     	; 0x17e8 <__ultoa_invert+0x5c>
    1794:	20 31       	cpi	r18, 0x10	; 16
    1796:	81 f1       	breq	.+96     	; 0x17f8 <__ultoa_invert+0x6c>
    1798:	e8 94       	clt
    179a:	6f 93       	push	r22
    179c:	6e 7f       	andi	r22, 0xFE	; 254
    179e:	6e 5f       	subi	r22, 0xFE	; 254
    17a0:	7f 4f       	sbci	r23, 0xFF	; 255
    17a2:	8f 4f       	sbci	r24, 0xFF	; 255
    17a4:	9f 4f       	sbci	r25, 0xFF	; 255
    17a6:	af 4f       	sbci	r26, 0xFF	; 255
    17a8:	b1 e0       	ldi	r27, 0x01	; 1
    17aa:	3e d0       	rcall	.+124    	; 0x1828 <__ultoa_invert+0x9c>
    17ac:	b4 e0       	ldi	r27, 0x04	; 4
    17ae:	3c d0       	rcall	.+120    	; 0x1828 <__ultoa_invert+0x9c>
    17b0:	67 0f       	add	r22, r23
    17b2:	78 1f       	adc	r23, r24
    17b4:	89 1f       	adc	r24, r25
    17b6:	9a 1f       	adc	r25, r26
    17b8:	a1 1d       	adc	r26, r1
    17ba:	68 0f       	add	r22, r24
    17bc:	79 1f       	adc	r23, r25
    17be:	8a 1f       	adc	r24, r26
    17c0:	91 1d       	adc	r25, r1
    17c2:	a1 1d       	adc	r26, r1
    17c4:	6a 0f       	add	r22, r26
    17c6:	71 1d       	adc	r23, r1
    17c8:	81 1d       	adc	r24, r1
    17ca:	91 1d       	adc	r25, r1
    17cc:	a1 1d       	adc	r26, r1
    17ce:	20 d0       	rcall	.+64     	; 0x1810 <__ultoa_invert+0x84>
    17d0:	09 f4       	brne	.+2      	; 0x17d4 <__ultoa_invert+0x48>
    17d2:	68 94       	set
    17d4:	3f 91       	pop	r19
    17d6:	2a e0       	ldi	r18, 0x0A	; 10
    17d8:	26 9f       	mul	r18, r22
    17da:	11 24       	eor	r1, r1
    17dc:	30 19       	sub	r19, r0
    17de:	30 5d       	subi	r19, 0xD0	; 208
    17e0:	31 93       	st	Z+, r19
    17e2:	de f6       	brtc	.-74     	; 0x179a <__ultoa_invert+0xe>
    17e4:	cf 01       	movw	r24, r30
    17e6:	08 95       	ret
    17e8:	46 2f       	mov	r20, r22
    17ea:	47 70       	andi	r20, 0x07	; 7
    17ec:	40 5d       	subi	r20, 0xD0	; 208
    17ee:	41 93       	st	Z+, r20
    17f0:	b3 e0       	ldi	r27, 0x03	; 3
    17f2:	0f d0       	rcall	.+30     	; 0x1812 <__ultoa_invert+0x86>
    17f4:	c9 f7       	brne	.-14     	; 0x17e8 <__ultoa_invert+0x5c>
    17f6:	f6 cf       	rjmp	.-20     	; 0x17e4 <__ultoa_invert+0x58>
    17f8:	46 2f       	mov	r20, r22
    17fa:	4f 70       	andi	r20, 0x0F	; 15
    17fc:	40 5d       	subi	r20, 0xD0	; 208
    17fe:	4a 33       	cpi	r20, 0x3A	; 58
    1800:	18 f0       	brcs	.+6      	; 0x1808 <__ultoa_invert+0x7c>
    1802:	49 5d       	subi	r20, 0xD9	; 217
    1804:	31 fd       	sbrc	r19, 1
    1806:	40 52       	subi	r20, 0x20	; 32
    1808:	41 93       	st	Z+, r20
    180a:	02 d0       	rcall	.+4      	; 0x1810 <__ultoa_invert+0x84>
    180c:	a9 f7       	brne	.-22     	; 0x17f8 <__ultoa_invert+0x6c>
    180e:	ea cf       	rjmp	.-44     	; 0x17e4 <__ultoa_invert+0x58>
    1810:	b4 e0       	ldi	r27, 0x04	; 4
    1812:	a6 95       	lsr	r26
    1814:	97 95       	ror	r25
    1816:	87 95       	ror	r24
    1818:	77 95       	ror	r23
    181a:	67 95       	ror	r22
    181c:	ba 95       	dec	r27
    181e:	c9 f7       	brne	.-14     	; 0x1812 <__ultoa_invert+0x86>
    1820:	00 97       	sbiw	r24, 0x00	; 0
    1822:	61 05       	cpc	r22, r1
    1824:	71 05       	cpc	r23, r1
    1826:	08 95       	ret
    1828:	9b 01       	movw	r18, r22
    182a:	ac 01       	movw	r20, r24
    182c:	0a 2e       	mov	r0, r26
    182e:	06 94       	lsr	r0
    1830:	57 95       	ror	r21
    1832:	47 95       	ror	r20
    1834:	37 95       	ror	r19
    1836:	27 95       	ror	r18
    1838:	ba 95       	dec	r27
    183a:	c9 f7       	brne	.-14     	; 0x182e <__ultoa_invert+0xa2>
    183c:	62 0f       	add	r22, r18
    183e:	73 1f       	adc	r23, r19
    1840:	84 1f       	adc	r24, r20
    1842:	95 1f       	adc	r25, r21
    1844:	a0 1d       	adc	r26, r0
    1846:	08 95       	ret

00001848 <_exit>:
    1848:	f8 94       	cli

0000184a <__stop_program>:
    184a:	ff cf       	rjmp	.-2      	; 0x184a <__stop_program>
