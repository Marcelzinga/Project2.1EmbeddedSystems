
Besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000248  00800100  000016e0  00001774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000078  00800348  00800348  000019bc  2**0
                  ALLOC
  3 .stab         00002a24  00000000  00000000  000019bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000779  00000000  00000000  000043e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001e0  00000000  00000000  00004b60  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a9b  00000000  00000000  00004d40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a94  00000000  00000000  000067db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001238  00000000  00000000  0000726f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000040c  00000000  00000000  000084a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e8  00000000  00000000  000088b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fe6  00000000  00000000  00008d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00009d82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 c3 03 	jmp	0x786	; 0x786 <__vector_1>
       8:	0c 94 0b 02 	jmp	0x416	; 0x416 <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 2f 01 	jmp	0x25e	; 0x25e <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1905>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1903>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	13 e0       	ldi	r17, 0x03	; 3
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 ee       	ldi	r30, 0xE0	; 224
     17e:	f6 e1       	ldi	r31, 0x16	; 22
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a8 34       	cpi	r26, 0x48	; 72
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	13 e0       	ldi	r17, 0x03	; 3
     18e:	a8 e4       	ldi	r26, 0x48	; 72
     190:	b3 e0       	ldi	r27, 0x03	; 3
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a0 3c       	cpi	r26, 0xC0	; 192
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 21 01 	call	0x242	; 0x242 <main>
     1a0:	0c 94 6e 0b 	jmp	0x16dc	; 0x16dc <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <ADC_init>:


void ADC_init()
{
	// enable the ADC & prescale = 128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
     1a8:	87 e8       	ldi	r24, 0x87	; 135
     1aa:	80 93 7a 00 	sts	0x007A, r24
	DIDR0 = (1<<ADC5D); //!!Disables pin 5? not sure what it does atm
     1ae:	80 e2       	ldi	r24, 0x20	; 32
     1b0:	80 93 7e 00 	sts	0x007E, r24
	
}
     1b4:	08 95       	ret

000001b6 <get_adc_value>:

// Dit was om te kijken of de code wat geoptimaliseerd kon worden
// Geen succes, dus gaat het via 2 aparte get adc's
uint8_t get_adc_value(uint8_t inputPin)
{
	ADCSRA |= (1<<ADSC); // start conversion
     1b6:	ea e7       	ldi	r30, 0x7A	; 122
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	80 64       	ori	r24, 0x40	; 64
     1be:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1c0:	80 81       	ld	r24, Z
     1c2:	86 fd       	sbrc	r24, 6
     1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <get_adc_value+0xa>
	return ADCH; // 8bit resolution, left adjusted
     1c6:	80 91 79 00 	lds	r24, 0x0079
	else{
		ADCSRA |= (1<<ADSC); // start conversion
		loop_until_bit_is_clear(ADCSRA, ADSC);
		return ADCH; // 8bit resolution, left adjusted
	}*/	
}
     1ca:	08 95       	ret

000001cc <get_temp_adc>:




uint8_t get_temp_adc(){
	ADMUX = (1 << REFS0) | (1 << MUX0) | (1 << MUX2); // port A5
     1cc:	85 e4       	ldi	r24, 0x45	; 69
     1ce:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC); // start conversion
     1d2:	ea e7       	ldi	r30, 0x7A	; 122
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	80 64       	ori	r24, 0x40	; 64
     1da:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1dc:	80 81       	ld	r24, Z
     1de:	86 fd       	sbrc	r24, 6
     1e0:	fd cf       	rjmp	.-6      	; 0x1dc <get_temp_adc+0x10>
	return ADC;
     1e2:	80 91 78 00 	lds	r24, 0x0078
     1e6:	90 91 79 00 	lds	r25, 0x0079
}
     1ea:	08 95       	ret

000001ec <get_licht_adc>:

uint8_t get_licht_adc(){
	ADMUX = (1 << REFS0) | (1 << MUX1)| (1<<ADLAR); // port A2
     1ec:	82 e6       	ldi	r24, 0x62	; 98
     1ee:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC); // start conversion
     1f2:	ea e7       	ldi	r30, 0x7A	; 122
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 81       	ld	r24, Z
     1f8:	80 64       	ori	r24, 0x40	; 64
     1fa:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1fc:	80 81       	ld	r24, Z
     1fe:	86 fd       	sbrc	r24, 6
     200:	fd cf       	rjmp	.-6      	; 0x1fc <get_licht_adc+0x10>
	return ADCH; // 8bit resolution, left adjusted
     202:	80 91 79 00 	lds	r24, 0x0079
     206:	08 95       	ret

00000208 <init_ports>:

volatile int index = 0;
volatile int extraTime = 0;

void init_ports(void){
	DDRD = 0b11110111; //set PORTD4 as INPUT
     208:	87 ef       	ldi	r24, 0xF7	; 247
     20a:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF; //set PORTB as output
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	84 b9       	out	0x04, r24	; 4
}
     210:	08 95       	ret

00000212 <init_ext_int>:

void init_ext_int(void){
	EICRA =(1<<ISC10); //setting interrupt triggering logic change
     212:	84 e0       	ldi	r24, 0x04	; 4
     214:	80 93 69 00 	sts	0x0069, r24
	EIMSK =(1<<INT1); //enabling interrupt1
     218:	82 e0       	ldi	r24, 0x02	; 2
     21a:	8d bb       	out	0x1d, r24	; 29
	TCCR1A = 0;
     21c:	10 92 80 00 	sts	0x0080, r1
}
     220:	08 95       	ret

00000222 <getTemp>:
	gewenste resultaten toonde.
*/
uint8_t getTemp(){
	//uint8_t temp = ADCOut;
	//uint8_t temp = get_adc_value(PC2);
	uint8_t temp = get_temp_adc();
     222:	0e 94 e6 00 	call	0x1cc	; 0x1cc <get_temp_adc>
	return temp;
}
     226:	08 95       	ret

00000228 <getLight>:

uint8_t getLight(){
	//uint8_t temp = get_adc_value(PC5);
	uint8_t temp = get_licht_adc();
     228:	0e 94 f6 00 	call	0x1ec	; 0x1ec <get_licht_adc>
	return temp;
}
     22c:	08 95       	ret

0000022e <init_timer>:

void init_timer (void){
	//8bittimer
	TCCR0A = (1<< WGM01); // set CTC Bit
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	84 bd       	out	0x24, r24	; 36
	OCR0A = 156; // Dit geeft 1/10 miliseconde
     232:	9c e9       	ldi	r25, 0x9C	; 156
     234:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = (1<< OCIE0A);
     236:	80 93 6e 00 	sts	0x006E, r24
	
	TCCR0B |= (1 << CS02) | (1 <<CS00); // start at 1024 prescaler
     23a:	85 b5       	in	r24, 0x25	; 37
     23c:	85 60       	ori	r24, 0x05	; 5
     23e:	85 bd       	out	0x25, r24	; 37
	
}
     240:	08 95       	ret

00000242 <main>:
	TCCR1A = 0;
}

int main(void)
{
	init_timer();
     242:	0e 94 17 01 	call	0x22e	; 0x22e <init_timer>
	ser_init();
     246:	0e 94 ef 03 	call	0x7de	; 0x7de <ser_init>
	ADC_init();
     24a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ADC_init>
	
	init_ports();
     24e:	0e 94 04 01 	call	0x208	; 0x208 <init_ports>
	init_ext_int();
     252:	0e 94 09 01 	call	0x212	; 0x212 <init_ext_int>
	
	sei(); // set external interrupt
     256:	78 94       	sei
	  
	//printf("An interrupt should be occuring every 30 seconds\n");
	
	while(1){
		protocolCom();
     258:	0e 94 17 03 	call	0x62e	; 0x62e <protocolCom>
     25c:	fd cf       	rjmp	.-6      	; 0x258 <main+0x16>

0000025e <__vector_14>:

/*
Timerinterrupt geeft om de 5* seconden een interrupt
https://eleccelerator.com/avr-timer-calculator/
*/
ISR(TIMER0_COMPA_vect){
     25e:	1f 92       	push	r1
     260:	0f 92       	push	r0
     262:	0f b6       	in	r0, 0x3f	; 63
     264:	0f 92       	push	r0
     266:	11 24       	eor	r1, r1
     268:	2f 93       	push	r18
     26a:	3f 93       	push	r19
     26c:	4f 93       	push	r20
     26e:	5f 93       	push	r21
     270:	6f 93       	push	r22
     272:	7f 93       	push	r23
     274:	8f 93       	push	r24
     276:	9f 93       	push	r25
     278:	af 93       	push	r26
     27a:	bf 93       	push	r27
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	ef 93       	push	r30
     282:	ff 93       	push	r31
	
	extraTime++;
     284:	80 91 48 03 	lds	r24, 0x0348
     288:	90 91 49 03 	lds	r25, 0x0349
     28c:	01 96       	adiw	r24, 0x01	; 1
     28e:	90 93 49 03 	sts	0x0349, r25
     292:	80 93 48 03 	sts	0x0348, r24
	
	if(extraTime>3000){
     296:	80 91 48 03 	lds	r24, 0x0348
     29a:	90 91 49 03 	lds	r25, 0x0349
     29e:	2b e0       	ldi	r18, 0x0B	; 11
     2a0:	89 3b       	cpi	r24, 0xB9	; 185
     2a2:	92 07       	cpc	r25, r18
     2a4:	0c f4       	brge	.+2      	; 0x2a8 <__vector_14+0x4a>
     2a6:	a4 c0       	rjmp	.+328    	; 0x3f0 <__vector_14+0x192>
		Volt = getTemp() * 0.0048828125;
     2a8:	0e 94 11 01 	call	0x222	; 0x222 <getTemp>
     2ac:	68 2f       	mov	r22, r24
     2ae:	70 e0       	ldi	r23, 0x00	; 0
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__floatsisf>
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 ea       	ldi	r20, 0xA0	; 160
     2be:	5b e3       	ldi	r21, 0x3B	; 59
     2c0:	0e 94 64 05 	call	0xac8	; 0xac8 <__mulsf3>
     2c4:	26 2f       	mov	r18, r22
     2c6:	37 2f       	mov	r19, r23
     2c8:	f8 2f       	mov	r31, r24
     2ca:	e9 2f       	mov	r30, r25
     2cc:	46 2f       	mov	r20, r22
     2ce:	57 2f       	mov	r21, r23
     2d0:	68 2f       	mov	r22, r24
     2d2:	79 2f       	mov	r23, r25
     2d4:	40 93 58 03 	sts	0x0358, r20
     2d8:	50 93 59 03 	sts	0x0359, r21
     2dc:	60 93 5a 03 	sts	0x035A, r22
     2e0:	70 93 5b 03 	sts	0x035B, r23
		ADCRes = (Volt - 0.5) * 100;
     2e4:	82 2f       	mov	r24, r18
     2e6:	93 2f       	mov	r25, r19
     2e8:	af 2f       	mov	r26, r31
     2ea:	be 2f       	mov	r27, r30
     2ec:	bc 01       	movw	r22, r24
     2ee:	cd 01       	movw	r24, r26
     2f0:	20 e0       	ldi	r18, 0x00	; 0
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	40 e0       	ldi	r20, 0x00	; 0
     2f6:	5f e3       	ldi	r21, 0x3F	; 63
     2f8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__subsf3>
     2fc:	20 e0       	ldi	r18, 0x00	; 0
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	48 ec       	ldi	r20, 0xC8	; 200
     302:	52 e4       	ldi	r21, 0x42	; 66
     304:	0e 94 64 05 	call	0xac8	; 0xac8 <__mulsf3>
     308:	a6 2f       	mov	r26, r22
     30a:	b7 2f       	mov	r27, r23
     30c:	46 2f       	mov	r20, r22
     30e:	57 2f       	mov	r21, r23
     310:	68 2f       	mov	r22, r24
     312:	79 2f       	mov	r23, r25
     314:	40 93 94 03 	sts	0x0394, r20
     318:	50 93 95 03 	sts	0x0395, r21
     31c:	60 93 96 03 	sts	0x0396, r22
     320:	70 93 97 03 	sts	0x0397, r23
		sprintf(ADCOut, "% 6.2f", ADCRes);
     324:	ed b7       	in	r30, 0x3d	; 61
     326:	fe b7       	in	r31, 0x3e	; 62
     328:	38 97       	sbiw	r30, 0x08	; 8
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	fe bf       	out	0x3e, r31	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	ed bf       	out	0x3d, r30	; 61
     334:	6d b7       	in	r22, 0x3d	; 61
     336:	7e b7       	in	r23, 0x3e	; 62
     338:	6f 5f       	subi	r22, 0xFF	; 255
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	cc e7       	ldi	r28, 0x7C	; 124
     33e:	d3 e0       	ldi	r29, 0x03	; 3
     340:	d2 83       	std	Z+2, r29	; 0x02
     342:	c1 83       	std	Z+1, r28	; 0x01
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	31 e0       	ldi	r19, 0x01	; 1
     348:	fb 01       	movw	r30, r22
     34a:	33 83       	std	Z+3, r19	; 0x03
     34c:	22 83       	std	Z+2, r18	; 0x02
     34e:	38 2f       	mov	r19, r24
     350:	29 2f       	mov	r18, r25
     352:	8a 2f       	mov	r24, r26
     354:	9b 2f       	mov	r25, r27
     356:	a3 2f       	mov	r26, r19
     358:	b2 2f       	mov	r27, r18
     35a:	84 83       	std	Z+4, r24	; 0x04
     35c:	95 83       	std	Z+5, r25	; 0x05
     35e:	a6 83       	std	Z+6, r26	; 0x06
     360:	b7 83       	std	Z+7, r27	; 0x07
     362:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <sprintf>
		ser_write("Temperatuur: "); ser_writeln(ADCOut);
     366:	2d b7       	in	r18, 0x3d	; 61
     368:	3e b7       	in	r19, 0x3e	; 62
     36a:	28 5f       	subi	r18, 0xF8	; 248
     36c:	3f 4f       	sbci	r19, 0xFF	; 255
     36e:	0f b6       	in	r0, 0x3f	; 63
     370:	f8 94       	cli
     372:	3e bf       	out	0x3e, r19	; 62
     374:	0f be       	out	0x3f, r0	; 63
     376:	2d bf       	out	0x3d, r18	; 61
     378:	87 e0       	ldi	r24, 0x07	; 7
     37a:	91 e0       	ldi	r25, 0x01	; 1
     37c:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
     380:	ce 01       	movw	r24, r28
     382:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     386:	8f e3       	ldi	r24, 0x3F	; 63
     388:	9c e9       	ldi	r25, 0x9C	; 156
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <__vector_14+0x12c>
     38e:	00 c0       	rjmp	.+0      	; 0x390 <__vector_14+0x132>
     390:	00 00       	nop
		_delay_ms(10);
		printf("%i intensiteit=%d\n", index, getLight());
     392:	c0 91 4a 03 	lds	r28, 0x034A
     396:	d0 91 4b 03 	lds	r29, 0x034B
     39a:	0e 94 14 01 	call	0x228	; 0x228 <getLight>
     39e:	00 d0       	rcall	.+0      	; 0x3a0 <__vector_14+0x142>
     3a0:	00 d0       	rcall	.+0      	; 0x3a2 <__vector_14+0x144>
     3a2:	00 d0       	rcall	.+0      	; 0x3a4 <__vector_14+0x146>
     3a4:	ed b7       	in	r30, 0x3d	; 61
     3a6:	fe b7       	in	r31, 0x3e	; 62
     3a8:	31 96       	adiw	r30, 0x01	; 1
     3aa:	25 e1       	ldi	r18, 0x15	; 21
     3ac:	31 e0       	ldi	r19, 0x01	; 1
     3ae:	ad b7       	in	r26, 0x3d	; 61
     3b0:	be b7       	in	r27, 0x3e	; 62
     3b2:	12 96       	adiw	r26, 0x02	; 2
     3b4:	3c 93       	st	X, r19
     3b6:	2e 93       	st	-X, r18
     3b8:	11 97       	sbiw	r26, 0x01	; 1
     3ba:	d3 83       	std	Z+3, r29	; 0x03
     3bc:	c2 83       	std	Z+2, r28	; 0x02
     3be:	84 83       	std	Z+4, r24	; 0x04
     3c0:	15 82       	std	Z+5, r1	; 0x05
     3c2:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <printf>
		index++;
     3c6:	80 91 4a 03 	lds	r24, 0x034A
     3ca:	90 91 4b 03 	lds	r25, 0x034B
     3ce:	01 96       	adiw	r24, 0x01	; 1
     3d0:	90 93 4b 03 	sts	0x034B, r25
     3d4:	80 93 4a 03 	sts	0x034A, r24
		
		// Resets de timer en de Totale timer ticks
		extraTime = 0;
     3d8:	10 92 49 03 	sts	0x0349, r1
     3dc:	10 92 48 03 	sts	0x0348, r1
     3e0:	ed b7       	in	r30, 0x3d	; 61
     3e2:	fe b7       	in	r31, 0x3e	; 62
     3e4:	36 96       	adiw	r30, 0x06	; 6
     3e6:	0f b6       	in	r0, 0x3f	; 63
     3e8:	f8 94       	cli
     3ea:	fe bf       	out	0x3e, r31	; 62
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	ed bf       	out	0x3d, r30	; 61
	}
}
     3f0:	ff 91       	pop	r31
     3f2:	ef 91       	pop	r30
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	bf 91       	pop	r27
     3fa:	af 91       	pop	r26
     3fc:	9f 91       	pop	r25
     3fe:	8f 91       	pop	r24
     400:	7f 91       	pop	r23
     402:	6f 91       	pop	r22
     404:	5f 91       	pop	r21
     406:	4f 91       	pop	r20
     408:	3f 91       	pop	r19
     40a:	2f 91       	pop	r18
     40c:	0f 90       	pop	r0
     40e:	0f be       	out	0x3f, r0	; 63
     410:	0f 90       	pop	r0
     412:	1f 90       	pop	r1
     414:	18 95       	reti

00000416 <__vector_2>:

ISR(INT1_vect)
{
     416:	1f 92       	push	r1
     418:	0f 92       	push	r0
     41a:	0f b6       	in	r0, 0x3f	; 63
     41c:	0f 92       	push	r0
     41e:	11 24       	eor	r1, r1
     420:	2f 93       	push	r18
     422:	3f 93       	push	r19
     424:	4f 93       	push	r20
     426:	5f 93       	push	r21
     428:	6f 93       	push	r22
     42a:	7f 93       	push	r23
     42c:	8f 93       	push	r24
     42e:	9f 93       	push	r25
     430:	af 93       	push	r26
     432:	bf 93       	push	r27
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	ef 93       	push	r30
     43a:	ff 93       	push	r31
	if(i == 1)
     43c:	80 91 50 03 	lds	r24, 0x0350
     440:	90 91 51 03 	lds	r25, 0x0351
     444:	81 30       	cpi	r24, 0x01	; 1
     446:	91 05       	cpc	r25, r1
     448:	d1 f4       	brne	.+52     	; 0x47e <__vector_2+0x68>
	{
		TCCR1B = 0; //Stop counter
     44a:	10 92 81 00 	sts	0x0081, r1
		pulse = TCNT1; //Write duration (TCNT1) to pulse
     44e:	c4 e8       	ldi	r28, 0x84	; 132
     450:	d0 e0       	ldi	r29, 0x00	; 0
     452:	68 81       	ld	r22, Y
     454:	79 81       	ldd	r23, Y+1	; 0x01
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__floatunsisf>
     45e:	dc 01       	movw	r26, r24
     460:	cb 01       	movw	r24, r22
     462:	80 93 52 03 	sts	0x0352, r24
     466:	90 93 53 03 	sts	0x0353, r25
     46a:	a0 93 54 03 	sts	0x0354, r26
     46e:	b0 93 55 03 	sts	0x0355, r27
		TCNT1 = 0; //Reset duration
     472:	19 82       	std	Y+1, r1	; 0x01
     474:	18 82       	st	Y, r1
		i = 0; //Reset counter
     476:	10 92 51 03 	sts	0x0351, r1
     47a:	10 92 50 03 	sts	0x0350, r1
	}

	if(i==0)
     47e:	80 91 50 03 	lds	r24, 0x0350
     482:	90 91 51 03 	lds	r25, 0x0351
     486:	00 97       	sbiw	r24, 0x00	; 0
     488:	59 f4       	brne	.+22     	; 0x4a0 <__vector_2+0x8a>
	{
		TCCR1B |= (1<<CS10); //Start counter
     48a:	e1 e8       	ldi	r30, 0x81	; 129
     48c:	f0 e0       	ldi	r31, 0x00	; 0
     48e:	80 81       	ld	r24, Z
     490:	81 60       	ori	r24, 0x01	; 1
     492:	80 83       	st	Z, r24
		i = 1;
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	90 93 51 03 	sts	0x0351, r25
     49c:	80 93 50 03 	sts	0x0350, r24
	}
     4a0:	ff 91       	pop	r31
     4a2:	ef 91       	pop	r30
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	bf 91       	pop	r27
     4aa:	af 91       	pop	r26
     4ac:	9f 91       	pop	r25
     4ae:	8f 91       	pop	r24
     4b0:	7f 91       	pop	r23
     4b2:	6f 91       	pop	r22
     4b4:	5f 91       	pop	r21
     4b6:	4f 91       	pop	r20
     4b8:	3f 91       	pop	r19
     4ba:	2f 91       	pop	r18
     4bc:	0f 90       	pop	r0
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	0f 90       	pop	r0
     4c2:	1f 90       	pop	r1
     4c4:	18 95       	reti

000004c6 <oprollen>:
	i = 0;
	ser_writeln("\n\r201 Zonnescherm is uitgerold\n");
	_delay_ms(DELAY_MS);
}

void oprollen(){
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
	IN = (IN + 1);
     4ca:	80 91 b8 03 	lds	r24, 0x03B8
     4ce:	90 91 b9 03 	lds	r25, 0x03B9
     4d2:	01 96       	adiw	r24, 0x01	; 1
     4d4:	90 93 b9 03 	sts	0x03B9, r25
     4d8:	80 93 b8 03 	sts	0x03B8, r24
	OUT = (OUT + 1);
     4dc:	80 91 56 03 	lds	r24, 0x0356
     4e0:	90 91 57 03 	lds	r25, 0x0357
     4e4:	01 96       	adiw	r24, 0x01	; 1
     4e6:	90 93 57 03 	sts	0x0357, r25
     4ea:	80 93 56 03 	sts	0x0356, r24
	ser_write("250 "); //Geef aan dat het commando is gelukt
     4ee:	88 e2       	ldi	r24, 0x28	; 40
     4f0:	91 e0       	ldi	r25, 0x01	; 1
     4f2:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
     4f6:	2b 98       	cbi	0x05, 3	; 5
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
     4f8:	2d 9a       	sbi	0x05, 5	; 5
		PORTB |= _BV(PORTB4);
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
	if (i % 2 == 0){ser_write(".");}
     4fa:	cd e2       	ldi	r28, 0x2D	; 45
     4fc:	d1 e0       	ldi	r29, 0x01	; 1
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
	while (i < 25){
     4fe:	22 c0       	rjmp	.+68     	; 0x544 <oprollen+0x7e>
		// Laat pin 4 knippen (gele lampje)
		PORTB |= _BV(PORTB4);
     500:	2c 9a       	sbi	0x05, 4	; 5
     502:	8f e3       	ldi	r24, 0x3F	; 63
     504:	9d e0       	ldi	r25, 0x0D	; 13
     506:	a3 e0       	ldi	r26, 0x03	; 3
     508:	81 50       	subi	r24, 0x01	; 1
     50a:	90 40       	sbci	r25, 0x00	; 0
     50c:	a0 40       	sbci	r26, 0x00	; 0
     50e:	e1 f7       	brne	.-8      	; 0x508 <oprollen+0x42>
     510:	00 c0       	rjmp	.+0      	; 0x512 <oprollen+0x4c>
     512:	00 00       	nop
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
     514:	2c 98       	cbi	0x05, 4	; 5
     516:	8f e3       	ldi	r24, 0x3F	; 63
     518:	9d e0       	ldi	r25, 0x0D	; 13
     51a:	a3 e0       	ldi	r26, 0x03	; 3
     51c:	81 50       	subi	r24, 0x01	; 1
     51e:	90 40       	sbci	r25, 0x00	; 0
     520:	a0 40       	sbci	r26, 0x00	; 0
     522:	e1 f7       	brne	.-8      	; 0x51c <oprollen+0x56>
     524:	00 c0       	rjmp	.+0      	; 0x526 <oprollen+0x60>
     526:	00 00       	nop
		_delay_ms(DELAY_MS);
		i += 1;
     528:	80 91 98 03 	lds	r24, 0x0398
     52c:	90 91 99 03 	lds	r25, 0x0399
     530:	01 96       	adiw	r24, 0x01	; 1
     532:	90 93 99 03 	sts	0x0399, r25
     536:	80 93 98 03 	sts	0x0398, r24
	if (i % 2 == 0){ser_write(".");}
     53a:	80 fd       	sbrc	r24, 0
     53c:	03 c0       	rjmp	.+6      	; 0x544 <oprollen+0x7e>
     53e:	ce 01       	movw	r24, r28
     540:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
	while (i < 25){
     544:	80 91 98 03 	lds	r24, 0x0398
     548:	90 91 99 03 	lds	r25, 0x0399
     54c:	89 31       	cpi	r24, 0x19	; 25
     54e:	91 05       	cpc	r25, r1
     550:	bc f2       	brlt	.-82     	; 0x500 <oprollen+0x3a>
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
	if (i % 2 == 0){ser_write(".");}
	}
	i = 0;
     552:	10 92 99 03 	sts	0x0399, r1
     556:	10 92 98 03 	sts	0x0398, r1
	ser_writeln("\n\r201 Zonnescherm is opgerold\n");
     55a:	8f e2       	ldi	r24, 0x2F	; 47
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
     562:	8f e3       	ldi	r24, 0x3F	; 63
     564:	9d e0       	ldi	r25, 0x0D	; 13
     566:	a3 e0       	ldi	r26, 0x03	; 3
     568:	81 50       	subi	r24, 0x01	; 1
     56a:	90 40       	sbci	r25, 0x00	; 0
     56c:	a0 40       	sbci	r26, 0x00	; 0
     56e:	e1 f7       	brne	.-8      	; 0x568 <oprollen+0xa2>
     570:	00 c0       	rjmp	.+0      	; 0x572 <oprollen+0xac>
     572:	00 00       	nop
	_delay_ms(DELAY_MS);	
}
     574:	df 91       	pop	r29
     576:	cf 91       	pop	r28
     578:	08 95       	ret

0000057a <uitrollen>:
		}
					
}


void uitrollen(){
     57a:	cf 93       	push	r28
     57c:	df 93       	push	r29
	OUT = (OUT + 1);
     57e:	80 91 56 03 	lds	r24, 0x0356
     582:	90 91 57 03 	lds	r25, 0x0357
     586:	01 96       	adiw	r24, 0x01	; 1
     588:	90 93 57 03 	sts	0x0357, r25
     58c:	80 93 56 03 	sts	0x0356, r24
	IN = (IN + 1);
     590:	80 91 b8 03 	lds	r24, 0x03B8
     594:	90 91 b9 03 	lds	r25, 0x03B9
     598:	01 96       	adiw	r24, 0x01	; 1
     59a:	90 93 b9 03 	sts	0x03B9, r25
     59e:	80 93 b8 03 	sts	0x03B8, r24
	ser_write("250 "); //Geef aan dat het commando is gelukt
     5a2:	88 e2       	ldi	r24, 0x28	; 40
     5a4:	91 e0       	ldi	r25, 0x01	; 1
     5a6:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
     5aa:	2d 98       	cbi	0x05, 5	; 5
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
     5ac:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= _BV(PORTB4);
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
		if (i % 2 == 0){ser_write(".");}
     5ae:	cd e2       	ldi	r28, 0x2D	; 45
     5b0:	d1 e0       	ldi	r29, 0x01	; 1
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
	while (i < 25){
     5b2:	22 c0       	rjmp	.+68     	; 0x5f8 <uitrollen+0x7e>
		// Laat pin 4 knippen (gele lampje)
		PORTB |= _BV(PORTB4);
     5b4:	2c 9a       	sbi	0x05, 4	; 5
     5b6:	8f e3       	ldi	r24, 0x3F	; 63
     5b8:	9d e0       	ldi	r25, 0x0D	; 13
     5ba:	a3 e0       	ldi	r26, 0x03	; 3
     5bc:	81 50       	subi	r24, 0x01	; 1
     5be:	90 40       	sbci	r25, 0x00	; 0
     5c0:	a0 40       	sbci	r26, 0x00	; 0
     5c2:	e1 f7       	brne	.-8      	; 0x5bc <uitrollen+0x42>
     5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <uitrollen+0x4c>
     5c6:	00 00       	nop
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
     5c8:	2c 98       	cbi	0x05, 4	; 5
     5ca:	8f e3       	ldi	r24, 0x3F	; 63
     5cc:	9d e0       	ldi	r25, 0x0D	; 13
     5ce:	a3 e0       	ldi	r26, 0x03	; 3
     5d0:	81 50       	subi	r24, 0x01	; 1
     5d2:	90 40       	sbci	r25, 0x00	; 0
     5d4:	a0 40       	sbci	r26, 0x00	; 0
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <uitrollen+0x56>
     5d8:	00 c0       	rjmp	.+0      	; 0x5da <uitrollen+0x60>
     5da:	00 00       	nop
		_delay_ms(DELAY_MS);
		i += 1;
     5dc:	80 91 98 03 	lds	r24, 0x0398
     5e0:	90 91 99 03 	lds	r25, 0x0399
     5e4:	01 96       	adiw	r24, 0x01	; 1
     5e6:	90 93 99 03 	sts	0x0399, r25
     5ea:	80 93 98 03 	sts	0x0398, r24
		if (i % 2 == 0){ser_write(".");}
     5ee:	80 fd       	sbrc	r24, 0
     5f0:	03 c0       	rjmp	.+6      	; 0x5f8 <uitrollen+0x7e>
     5f2:	ce 01       	movw	r24, r28
     5f4:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
	while (i < 25){
     5f8:	80 91 98 03 	lds	r24, 0x0398
     5fc:	90 91 99 03 	lds	r25, 0x0399
     600:	89 31       	cpi	r24, 0x19	; 25
     602:	91 05       	cpc	r25, r1
     604:	bc f2       	brlt	.-82     	; 0x5b4 <uitrollen+0x3a>
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
		if (i % 2 == 0){ser_write(".");}
	}
	i = 0;
     606:	10 92 99 03 	sts	0x0399, r1
     60a:	10 92 98 03 	sts	0x0398, r1
	ser_writeln("\n\r201 Zonnescherm is uitgerold\n");
     60e:	8e e4       	ldi	r24, 0x4E	; 78
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
     616:	8f e3       	ldi	r24, 0x3F	; 63
     618:	9d e0       	ldi	r25, 0x0D	; 13
     61a:	a3 e0       	ldi	r26, 0x03	; 3
     61c:	81 50       	subi	r24, 0x01	; 1
     61e:	90 40       	sbci	r25, 0x00	; 0
     620:	a0 40       	sbci	r26, 0x00	; 0
     622:	e1 f7       	brne	.-8      	; 0x61c <uitrollen+0xa2>
     624:	00 c0       	rjmp	.+0      	; 0x626 <uitrollen+0xac>
     626:	00 00       	nop
	_delay_ms(DELAY_MS);
}
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <protocolCom>:

int i, IN, OUT = 0; //Voor knipperen van zonnescherm | Voor het kijken of hij uitgerold/opgerold is

char in_buf[30]; // Invoerbuffer

void protocolCom(){
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
	// set pin 3,4,5 of PORTB for output
	DDRB |= _BV(DDB3); 
     632:	23 9a       	sbi	0x04, 3	; 4
	DDRB |= _BV(DDB4); 
     634:	24 9a       	sbi	0x04, 4	; 4
	DDRB |= _BV(DDB5); 
     636:	25 9a       	sbi	0x04, 5	; 4
	//DDRD = 0xff; //													DELETE AFTER
	
	//EIMSK = 1 << INT0;//													DELETE AFTER
	EICRA |= 1 << ISC00;
     638:	e9 e6       	ldi	r30, 0x69	; 105
     63a:	f0 e0       	ldi	r31, 0x00	; 0
     63c:	80 81       	ld	r24, Z
     63e:	81 60       	ori	r24, 0x01	; 1
     640:	80 83       	st	Z, r24
	EIFR =  1 << INTF0;
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	8c bb       	out	0x1c, r24	; 28

	// LED op Portb5 aan = Zonnescherm opgerold (rode lampje)
	PORTB |= _BV(PORTB5);
     646:	2d 9a       	sbi	0x05, 5	; 5
	//while (1) {
		ser_write("Wat kan ik voor u doen?");
     648:	8e e6       	ldi	r24, 0x6E	; 110
     64a:	91 e0       	ldi	r25, 0x01	; 1
     64c:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
		ser_readln(in_buf, sizeof(in_buf), 1);
     650:	ca e9       	ldi	r28, 0x9A	; 154
     652:	d3 e0       	ldi	r29, 0x03	; 3
     654:	ce 01       	movw	r24, r28
     656:	6e e1       	ldi	r22, 0x1E	; 30
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	41 e0       	ldi	r20, 0x01	; 1
     65c:	0e 94 37 04 	call	0x86e	; 0x86e <ser_readln>
/**********************************************************Zonnescherm uitrollen************************************************************/
			if (strcmp("Uitrollen", in_buf) == 0){ //Wanneer uitrollen wordt gerequest
     660:	86 e8       	ldi	r24, 0x86	; 134
     662:	91 e0       	ldi	r25, 0x01	; 1
     664:	be 01       	movw	r22, r28
     666:	0e 94 99 0a 	call	0x1532	; 0x1532 <strcmp>
     66a:	28 2f       	mov	r18, r24
     66c:	39 2f       	mov	r19, r25
     66e:	21 15       	cp	r18, r1
     670:	31 05       	cpc	r19, r1
     672:	b1 f4       	brne	.+44     	; 0x6a0 <protocolCom+0x72>
				if ((OUT % 2) == 1){
     674:	80 91 56 03 	lds	r24, 0x0356
     678:	90 91 57 03 	lds	r25, 0x0357
     67c:	62 e0       	ldi	r22, 0x02	; 2
     67e:	70 e0       	ldi	r23, 0x00	; 0
     680:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__divmodhi4>
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	91 05       	cpc	r25, r1
     688:	21 f4       	brne	.+8      	; 0x692 <protocolCom+0x64>
					ser_writeln("Zonnescherm is al uitgerold!");
     68a:	80 e9       	ldi	r24, 0x90	; 144
     68c:	91 e0       	ldi	r25, 0x01	; 1
     68e:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
				} if((OUT % 2) == 0){
     692:	80 91 56 03 	lds	r24, 0x0356
     696:	80 fd       	sbrc	r24, 0
     698:	23 c0       	rjmp	.+70     	; 0x6e0 <protocolCom+0xb2>
					uitrollen();
     69a:	0e 94 bd 02 	call	0x57a	; 0x57a <uitrollen>
     69e:	20 c0       	rjmp	.+64     	; 0x6e0 <protocolCom+0xb2>
				}				
			}
/*---------------------------------------------------------Zonnescherm oprollen------------------------------------------------------------*/ 
			else if(strcmp("Oprollen", in_buf) == 0){
     6a0:	8d ea       	ldi	r24, 0xAD	; 173
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	6a e9       	ldi	r22, 0x9A	; 154
     6a6:	73 e0       	ldi	r23, 0x03	; 3
     6a8:	0e 94 99 0a 	call	0x1532	; 0x1532 <strcmp>
     6ac:	28 2f       	mov	r18, r24
     6ae:	39 2f       	mov	r19, r25
     6b0:	21 15       	cp	r18, r1
     6b2:	31 05       	cpc	r19, r1
     6b4:	a9 f4       	brne	.+42     	; 0x6e0 <protocolCom+0xb2>
				if ((IN % 2) == 0){
     6b6:	80 91 b8 03 	lds	r24, 0x03B8
     6ba:	80 fd       	sbrc	r24, 0
     6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <protocolCom+0x98>
					ser_writeln("Zonnescherm is al opgerold!");
     6be:	86 eb       	ldi	r24, 0xB6	; 182
     6c0:	91 e0       	ldi	r25, 0x01	; 1
     6c2:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
				} if((IN % 2) == 1){
     6c6:	80 91 b8 03 	lds	r24, 0x03B8
     6ca:	90 91 b9 03 	lds	r25, 0x03B9
     6ce:	62 e0       	ldi	r22, 0x02	; 2
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__divmodhi4>
     6d6:	81 30       	cpi	r24, 0x01	; 1
     6d8:	91 05       	cpc	r25, r1
     6da:	11 f4       	brne	.+4      	; 0x6e0 <protocolCom+0xb2>
					oprollen();
     6dc:	0e 94 63 02 	call	0x4c6	; 0x4c6 <oprollen>
				}				
			} 
/*----------------------------------------------------------Get Lichtintensiteit---------------------------------------------------------------------*/
			if(strcmp("GET_LIGHT", in_buf) == 0){
     6e0:	82 ed       	ldi	r24, 0xD2	; 210
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	6a e9       	ldi	r22, 0x9A	; 154
     6e6:	73 e0       	ldi	r23, 0x03	; 3
     6e8:	0e 94 99 0a 	call	0x1532	; 0x1532 <strcmp>
     6ec:	28 2f       	mov	r18, r24
     6ee:	39 2f       	mov	r19, r25
     6f0:	21 15       	cp	r18, r1
     6f2:	31 05       	cpc	r19, r1
     6f4:	99 f4       	brne	.+38     	; 0x71c <protocolCom+0xee>
			printf("202 LIGHT %i", getLight());
     6f6:	0e 94 14 01 	call	0x228	; 0x228 <getLight>
     6fa:	00 d0       	rcall	.+0      	; 0x6fc <protocolCom+0xce>
     6fc:	00 d0       	rcall	.+0      	; 0x6fe <protocolCom+0xd0>
     6fe:	2c ed       	ldi	r18, 0xDC	; 220
     700:	31 e0       	ldi	r19, 0x01	; 1
     702:	ed b7       	in	r30, 0x3d	; 61
     704:	fe b7       	in	r31, 0x3e	; 62
     706:	32 83       	std	Z+2, r19	; 0x02
     708:	21 83       	std	Z+1, r18	; 0x01
     70a:	94 83       	std	Z+4, r25	; 0x04
     70c:	83 83       	std	Z+3, r24	; 0x03
     70e:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <printf>
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	0f 90       	pop	r0
     71a:	32 c0       	rjmp	.+100    	; 0x780 <protocolCom+0x152>
			}

/*****************************************************************Exit**********************************************************************/			
			else if(strcmp("Exit", in_buf) == 0){
     71c:	89 ee       	ldi	r24, 0xE9	; 233
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	6a e9       	ldi	r22, 0x9A	; 154
     722:	73 e0       	ldi	r23, 0x03	; 3
     724:	0e 94 99 0a 	call	0x1532	; 0x1532 <strcmp>
     728:	28 2f       	mov	r18, r24
     72a:	39 2f       	mov	r19, r25
     72c:	21 15       	cp	r18, r1
     72e:	31 05       	cpc	r19, r1
     730:	99 f4       	brne	.+38     	; 0x758 <protocolCom+0x12a>
				if ((OUT % 2) == 1){
     732:	80 91 56 03 	lds	r24, 0x0356
     736:	90 91 57 03 	lds	r25, 0x0357
     73a:	62 e0       	ldi	r22, 0x02	; 2
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__divmodhi4>
     742:	81 30       	cpi	r24, 0x01	; 1
     744:	91 05       	cpc	r25, r1
     746:	11 f4       	brne	.+4      	; 0x74c <protocolCom+0x11e>
					uitrollen();					
     748:	0e 94 bd 02 	call	0x57a	; 0x57a <uitrollen>
				}
				ser_writeln("221 Bye!"); //Groeting wanneer je het programma sluit
     74c:	8e ee       	ldi	r24, 0xEE	; 238
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
				abort();
     754:	0e 94 b1 09 	call	0x1362	; 0x1362 <abort>
			}

/*----------------------------------------------------------------Help---------------------------------------------------------------------*/
		else if(strcmp("Help", in_buf) == 0){
     758:	87 ef       	ldi	r24, 0xF7	; 247
     75a:	91 e0       	ldi	r25, 0x01	; 1
     75c:	6a e9       	ldi	r22, 0x9A	; 154
     75e:	73 e0       	ldi	r23, 0x03	; 3
     760:	0e 94 99 0a 	call	0x1532	; 0x1532 <strcmp>
     764:	28 2f       	mov	r18, r24
     766:	39 2f       	mov	r19, r25
     768:	21 15       	cp	r18, r1
     76a:	31 05       	cpc	r19, r1
     76c:	29 f4       	brne	.+10     	; 0x778 <protocolCom+0x14a>
			ser_writeln(
     76e:	8c ef       	ldi	r24, 0xFC	; 252
     770:	91 e0       	ldi	r25, 0x01	; 1
     772:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
     776:	04 c0       	rjmp	.+8      	; 0x780 <protocolCom+0x152>
			"Exit\t\t\tSluit het programma\n"
			);
		}
/*********************************************************Commando niet gevonden************************************************************/		
		else{
			ser_writeln("510 Commando niet gevonden! Type Help voor alle commando's\n");
     778:	8e ee       	ldi	r24, 0xEE	; 238
     77a:	92 e0       	ldi	r25, 0x02	; 2
     77c:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
		}
					
}
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	08 95       	ret

00000786 <__vector_1>:
	ser_writeln("\n\r201 Zonnescherm is opgerold\n");
	_delay_ms(DELAY_MS);	
}

ISR(INT0_vect)
{
     786:	1f 92       	push	r1
     788:	0f 92       	push	r0
     78a:	0f b6       	in	r0, 0x3f	; 63
     78c:	0f 92       	push	r0
     78e:	11 24       	eor	r1, r1
     790:	2f 93       	push	r18
     792:	3f 93       	push	r19
     794:	4f 93       	push	r20
     796:	5f 93       	push	r21
     798:	6f 93       	push	r22
     79a:	7f 93       	push	r23
     79c:	8f 93       	push	r24
     79e:	9f 93       	push	r25
     7a0:	af 93       	push	r26
     7a2:	bf 93       	push	r27
     7a4:	ef 93       	push	r30
     7a6:	ff 93       	push	r31
     7a8:	83 ed       	ldi	r24, 0xD3	; 211
     7aa:	90 e3       	ldi	r25, 0x30	; 48
     7ac:	01 97       	sbiw	r24, 0x01	; 1
     7ae:	f1 f7       	brne	.-4      	; 0x7ac <__vector_1+0x26>
     7b0:	00 c0       	rjmp	.+0      	; 0x7b2 <__vector_1+0x2c>
     7b2:	00 00       	nop
	_delay_ms(50);
	ser_writeln("Interupt werk!");
     7b4:	8a e2       	ldi	r24, 0x2A	; 42
     7b6:	93 e0       	ldi	r25, 0x03	; 3
     7b8:	0e 94 2e 04 	call	0x85c	; 0x85c <ser_writeln>
     7bc:	ff 91       	pop	r31
     7be:	ef 91       	pop	r30
     7c0:	bf 91       	pop	r27
     7c2:	af 91       	pop	r26
     7c4:	9f 91       	pop	r25
     7c6:	8f 91       	pop	r24
     7c8:	7f 91       	pop	r23
     7ca:	6f 91       	pop	r22
     7cc:	5f 91       	pop	r21
     7ce:	4f 91       	pop	r20
     7d0:	3f 91       	pop	r19
     7d2:	2f 91       	pop	r18
     7d4:	0f 90       	pop	r0
     7d6:	0f be       	out	0x3f, r0	; 63
     7d8:	0f 90       	pop	r0
     7da:	1f 90       	pop	r1
     7dc:	18 95       	reti

000007de <ser_init>:

FILE uart_output = FDEV_SETUP_STREAM(ser_stdio_putchar, NULL, _FDEV_SETUP_WRITE);

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
     7de:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
     7e2:	83 e3       	ldi	r24, 0x33	; 51
     7e4:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
     7e8:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
     7ec:	88 e1       	ldi	r24, 0x18	; 24
     7ee:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
     7f2:	86 e0       	ldi	r24, 0x06	; 6
     7f4:	80 93 c2 00 	sts	0x00C2, r24
	// Setup stdout
	stdout=&uart_output;
     7f8:	89 e3       	ldi	r24, 0x39	; 57
     7fa:	93 e0       	ldi	r25, 0x03	; 3
     7fc:	90 93 bd 03 	sts	0x03BD, r25
     800:	80 93 bc 03 	sts	0x03BC, r24
}
     804:	08 95       	ret

00000806 <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
     806:	e0 ec       	ldi	r30, 0xC0	; 192
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	90 81       	ld	r25, Z
     80c:	95 ff       	sbrs	r25, 5
     80e:	fd cf       	rjmp	.-6      	; 0x80a <ser_transmit+0x4>
	// send the data
	UDR0 = data;
     810:	80 93 c6 00 	sts	0x00C6, r24
}
     814:	08 95       	ret

00000816 <ser_stdio_putchar>:
// output on USB = PD1 = board pin 1
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

// Getchar en putchar tbv. stdio.h
void ser_stdio_putchar(char c, FILE *stream) {
     816:	cf 93       	push	r28
     818:	c8 2f       	mov	r28, r24
	if (c=='\n') {
     81a:	8a 30       	cpi	r24, 0x0A	; 10
     81c:	19 f4       	brne	.+6      	; 0x824 <ser_stdio_putchar+0xe>
		ser_transmit('\r');
     81e:	8d e0       	ldi	r24, 0x0D	; 13
     820:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>
	}
	ser_transmit(c);
     824:	8c 2f       	mov	r24, r28
     826:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>
}
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <ser_receive>:
	UDR0 = data;
}

// Low level receive
uint8_t ser_receive() {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
     82e:	e0 ec       	ldi	r30, 0xC0	; 192
     830:	f0 e0       	ldi	r31, 0x00	; 0
     832:	80 81       	ld	r24, Z
     834:	88 23       	and	r24, r24
     836:	ec f7       	brge	.-6      	; 0x832 <ser_receive+0x4>
	return UDR0;
     838:	80 91 c6 00 	lds	r24, 0x00C6
}
     83c:	08 95       	ret

0000083e <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
     842:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
     844:	88 81       	ld	r24, Y
     846:	88 23       	and	r24, r24
     848:	31 f0       	breq	.+12     	; 0x856 <ser_write+0x18>
	return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
     84a:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
     84c:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
     850:	89 91       	ld	r24, Y+
     852:	88 23       	and	r24, r24
     854:	d9 f7       	brne	.-10     	; 0x84c <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	08 95       	ret

0000085c <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
     85c:	0e 94 1f 04 	call	0x83e	; 0x83e <ser_write>
	ser_transmit('\r');
     860:	8d e0       	ldi	r24, 0x0D	; 13
     862:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>
	ser_transmit('\n');
     866:	8a e0       	ldi	r24, 0x0A	; 10
     868:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>
}
     86c:	08 95       	ret

0000086e <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
     86e:	af 92       	push	r10
     870:	bf 92       	push	r11
     872:	cf 92       	push	r12
     874:	df 92       	push	r13
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	5c 01       	movw	r10, r24
     884:	d4 2f       	mov	r29, r20
	int i=0;
     886:	6c 01       	movw	r12, r24
     888:	ee 24       	eor	r14, r14
     88a:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     88c:	8b 01       	movw	r16, r22
     88e:	01 50       	subi	r16, 0x01	; 1
     890:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
     892:	0e 94 17 04 	call	0x82e	; 0x82e <ser_receive>
     896:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
     898:	dd 23       	and	r29, r29
     89a:	11 f0       	breq	.+4      	; 0x8a0 <ser_readln+0x32>
     89c:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>
		if (c=='\r') {
     8a0:	cd 30       	cpi	r28, 0x0D	; 13
     8a2:	31 f4       	brne	.+12     	; 0x8b0 <ser_readln+0x42>
			if (echo) ser_transmit('\n');
     8a4:	dd 23       	and	r29, r29
     8a6:	71 f0       	breq	.+28     	; 0x8c4 <ser_readln+0x56>
     8a8:	8a e0       	ldi	r24, 0x0A	; 10
     8aa:	0e 94 03 04 	call	0x806	; 0x806 <ser_transmit>
     8ae:	0a c0       	rjmp	.+20     	; 0x8c4 <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     8b0:	e0 16       	cp	r14, r16
     8b2:	f1 06       	cpc	r15, r17
     8b4:	74 f7       	brge	.-36     	; 0x892 <ser_readln+0x24>
			buf[i++]=c;
     8b6:	f6 01       	movw	r30, r12
     8b8:	c1 93       	st	Z+, r28
     8ba:	6f 01       	movw	r12, r30
     8bc:	08 94       	sec
     8be:	e1 1c       	adc	r14, r1
     8c0:	f1 1c       	adc	r15, r1
     8c2:	e7 cf       	rjmp	.-50     	; 0x892 <ser_readln+0x24>
		}
	}
	buf[i]='\0';
     8c4:	ea 0c       	add	r14, r10
     8c6:	fb 1c       	adc	r15, r11
     8c8:	f7 01       	movw	r30, r14
     8ca:	10 82       	st	Z, r1
}
     8cc:	df 91       	pop	r29
     8ce:	cf 91       	pop	r28
     8d0:	1f 91       	pop	r17
     8d2:	0f 91       	pop	r16
     8d4:	ff 90       	pop	r15
     8d6:	ef 90       	pop	r14
     8d8:	df 90       	pop	r13
     8da:	cf 90       	pop	r12
     8dc:	bf 90       	pop	r11
     8de:	af 90       	pop	r10
     8e0:	08 95       	ret

000008e2 <__subsf3>:
     8e2:	50 58       	subi	r21, 0x80	; 128

000008e4 <__addsf3>:
     8e4:	bb 27       	eor	r27, r27
     8e6:	aa 27       	eor	r26, r26
     8e8:	0e d0       	rcall	.+28     	; 0x906 <__addsf3x>
     8ea:	b4 c0       	rjmp	.+360    	; 0xa54 <__fp_round>
     8ec:	a5 d0       	rcall	.+330    	; 0xa38 <__fp_pscA>
     8ee:	30 f0       	brcs	.+12     	; 0x8fc <__addsf3+0x18>
     8f0:	aa d0       	rcall	.+340    	; 0xa46 <__fp_pscB>
     8f2:	20 f0       	brcs	.+8      	; 0x8fc <__addsf3+0x18>
     8f4:	31 f4       	brne	.+12     	; 0x902 <__stack+0x3>
     8f6:	9f 3f       	cpi	r25, 0xFF	; 255
     8f8:	11 f4       	brne	.+4      	; 0x8fe <__addsf3+0x1a>
     8fa:	1e f4       	brtc	.+6      	; 0x902 <__stack+0x3>
     8fc:	9a c0       	rjmp	.+308    	; 0xa32 <__fp_nan>
     8fe:	0e f4       	brtc	.+2      	; 0x902 <__stack+0x3>
     900:	e0 95       	com	r30
     902:	e7 fb       	bst	r30, 7
     904:	90 c0       	rjmp	.+288    	; 0xa26 <__fp_inf>

00000906 <__addsf3x>:
     906:	e9 2f       	mov	r30, r25
     908:	b6 d0       	rcall	.+364    	; 0xa76 <__fp_split3>
     90a:	80 f3       	brcs	.-32     	; 0x8ec <__addsf3+0x8>
     90c:	ba 17       	cp	r27, r26
     90e:	62 07       	cpc	r22, r18
     910:	73 07       	cpc	r23, r19
     912:	84 07       	cpc	r24, r20
     914:	95 07       	cpc	r25, r21
     916:	18 f0       	brcs	.+6      	; 0x91e <__addsf3x+0x18>
     918:	71 f4       	brne	.+28     	; 0x936 <__addsf3x+0x30>
     91a:	9e f5       	brtc	.+102    	; 0x982 <__addsf3x+0x7c>
     91c:	ce c0       	rjmp	.+412    	; 0xaba <__fp_zero>
     91e:	0e f4       	brtc	.+2      	; 0x922 <__addsf3x+0x1c>
     920:	e0 95       	com	r30
     922:	0b 2e       	mov	r0, r27
     924:	ba 2f       	mov	r27, r26
     926:	a0 2d       	mov	r26, r0
     928:	0b 01       	movw	r0, r22
     92a:	b9 01       	movw	r22, r18
     92c:	90 01       	movw	r18, r0
     92e:	0c 01       	movw	r0, r24
     930:	ca 01       	movw	r24, r20
     932:	a0 01       	movw	r20, r0
     934:	11 24       	eor	r1, r1
     936:	ff 27       	eor	r31, r31
     938:	59 1b       	sub	r21, r25
     93a:	99 f0       	breq	.+38     	; 0x962 <__addsf3x+0x5c>
     93c:	59 3f       	cpi	r21, 0xF9	; 249
     93e:	50 f4       	brcc	.+20     	; 0x954 <__addsf3x+0x4e>
     940:	50 3e       	cpi	r21, 0xE0	; 224
     942:	68 f1       	brcs	.+90     	; 0x99e <__addsf3x+0x98>
     944:	1a 16       	cp	r1, r26
     946:	f0 40       	sbci	r31, 0x00	; 0
     948:	a2 2f       	mov	r26, r18
     94a:	23 2f       	mov	r18, r19
     94c:	34 2f       	mov	r19, r20
     94e:	44 27       	eor	r20, r20
     950:	58 5f       	subi	r21, 0xF8	; 248
     952:	f3 cf       	rjmp	.-26     	; 0x93a <__addsf3x+0x34>
     954:	46 95       	lsr	r20
     956:	37 95       	ror	r19
     958:	27 95       	ror	r18
     95a:	a7 95       	ror	r26
     95c:	f0 40       	sbci	r31, 0x00	; 0
     95e:	53 95       	inc	r21
     960:	c9 f7       	brne	.-14     	; 0x954 <__addsf3x+0x4e>
     962:	7e f4       	brtc	.+30     	; 0x982 <__addsf3x+0x7c>
     964:	1f 16       	cp	r1, r31
     966:	ba 0b       	sbc	r27, r26
     968:	62 0b       	sbc	r22, r18
     96a:	73 0b       	sbc	r23, r19
     96c:	84 0b       	sbc	r24, r20
     96e:	ba f0       	brmi	.+46     	; 0x99e <__addsf3x+0x98>
     970:	91 50       	subi	r25, 0x01	; 1
     972:	a1 f0       	breq	.+40     	; 0x99c <__addsf3x+0x96>
     974:	ff 0f       	add	r31, r31
     976:	bb 1f       	adc	r27, r27
     978:	66 1f       	adc	r22, r22
     97a:	77 1f       	adc	r23, r23
     97c:	88 1f       	adc	r24, r24
     97e:	c2 f7       	brpl	.-16     	; 0x970 <__addsf3x+0x6a>
     980:	0e c0       	rjmp	.+28     	; 0x99e <__addsf3x+0x98>
     982:	ba 0f       	add	r27, r26
     984:	62 1f       	adc	r22, r18
     986:	73 1f       	adc	r23, r19
     988:	84 1f       	adc	r24, r20
     98a:	48 f4       	brcc	.+18     	; 0x99e <__addsf3x+0x98>
     98c:	87 95       	ror	r24
     98e:	77 95       	ror	r23
     990:	67 95       	ror	r22
     992:	b7 95       	ror	r27
     994:	f7 95       	ror	r31
     996:	9e 3f       	cpi	r25, 0xFE	; 254
     998:	08 f0       	brcs	.+2      	; 0x99c <__addsf3x+0x96>
     99a:	b3 cf       	rjmp	.-154    	; 0x902 <__stack+0x3>
     99c:	93 95       	inc	r25
     99e:	88 0f       	add	r24, r24
     9a0:	08 f0       	brcs	.+2      	; 0x9a4 <__addsf3x+0x9e>
     9a2:	99 27       	eor	r25, r25
     9a4:	ee 0f       	add	r30, r30
     9a6:	97 95       	ror	r25
     9a8:	87 95       	ror	r24
     9aa:	08 95       	ret

000009ac <__floatunsisf>:
     9ac:	e8 94       	clt
     9ae:	09 c0       	rjmp	.+18     	; 0x9c2 <__floatsisf+0x12>

000009b0 <__floatsisf>:
     9b0:	97 fb       	bst	r25, 7
     9b2:	3e f4       	brtc	.+14     	; 0x9c2 <__floatsisf+0x12>
     9b4:	90 95       	com	r25
     9b6:	80 95       	com	r24
     9b8:	70 95       	com	r23
     9ba:	61 95       	neg	r22
     9bc:	7f 4f       	sbci	r23, 0xFF	; 255
     9be:	8f 4f       	sbci	r24, 0xFF	; 255
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	99 23       	and	r25, r25
     9c4:	a9 f0       	breq	.+42     	; 0x9f0 <__floatsisf+0x40>
     9c6:	f9 2f       	mov	r31, r25
     9c8:	96 e9       	ldi	r25, 0x96	; 150
     9ca:	bb 27       	eor	r27, r27
     9cc:	93 95       	inc	r25
     9ce:	f6 95       	lsr	r31
     9d0:	87 95       	ror	r24
     9d2:	77 95       	ror	r23
     9d4:	67 95       	ror	r22
     9d6:	b7 95       	ror	r27
     9d8:	f1 11       	cpse	r31, r1
     9da:	f8 cf       	rjmp	.-16     	; 0x9cc <__floatsisf+0x1c>
     9dc:	fa f4       	brpl	.+62     	; 0xa1c <__floatsisf+0x6c>
     9de:	bb 0f       	add	r27, r27
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__floatsisf+0x36>
     9e2:	60 ff       	sbrs	r22, 0
     9e4:	1b c0       	rjmp	.+54     	; 0xa1c <__floatsisf+0x6c>
     9e6:	6f 5f       	subi	r22, 0xFF	; 255
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	8f 4f       	sbci	r24, 0xFF	; 255
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	16 c0       	rjmp	.+44     	; 0xa1c <__floatsisf+0x6c>
     9f0:	88 23       	and	r24, r24
     9f2:	11 f0       	breq	.+4      	; 0x9f8 <__floatsisf+0x48>
     9f4:	96 e9       	ldi	r25, 0x96	; 150
     9f6:	11 c0       	rjmp	.+34     	; 0xa1a <__floatsisf+0x6a>
     9f8:	77 23       	and	r23, r23
     9fa:	21 f0       	breq	.+8      	; 0xa04 <__floatsisf+0x54>
     9fc:	9e e8       	ldi	r25, 0x8E	; 142
     9fe:	87 2f       	mov	r24, r23
     a00:	76 2f       	mov	r23, r22
     a02:	05 c0       	rjmp	.+10     	; 0xa0e <__floatsisf+0x5e>
     a04:	66 23       	and	r22, r22
     a06:	71 f0       	breq	.+28     	; 0xa24 <__floatsisf+0x74>
     a08:	96 e8       	ldi	r25, 0x86	; 134
     a0a:	86 2f       	mov	r24, r22
     a0c:	70 e0       	ldi	r23, 0x00	; 0
     a0e:	60 e0       	ldi	r22, 0x00	; 0
     a10:	2a f0       	brmi	.+10     	; 0xa1c <__floatsisf+0x6c>
     a12:	9a 95       	dec	r25
     a14:	66 0f       	add	r22, r22
     a16:	77 1f       	adc	r23, r23
     a18:	88 1f       	adc	r24, r24
     a1a:	da f7       	brpl	.-10     	; 0xa12 <__floatsisf+0x62>
     a1c:	88 0f       	add	r24, r24
     a1e:	96 95       	lsr	r25
     a20:	87 95       	ror	r24
     a22:	97 f9       	bld	r25, 7
     a24:	08 95       	ret

00000a26 <__fp_inf>:
     a26:	97 f9       	bld	r25, 7
     a28:	9f 67       	ori	r25, 0x7F	; 127
     a2a:	80 e8       	ldi	r24, 0x80	; 128
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	08 95       	ret

00000a32 <__fp_nan>:
     a32:	9f ef       	ldi	r25, 0xFF	; 255
     a34:	80 ec       	ldi	r24, 0xC0	; 192
     a36:	08 95       	ret

00000a38 <__fp_pscA>:
     a38:	00 24       	eor	r0, r0
     a3a:	0a 94       	dec	r0
     a3c:	16 16       	cp	r1, r22
     a3e:	17 06       	cpc	r1, r23
     a40:	18 06       	cpc	r1, r24
     a42:	09 06       	cpc	r0, r25
     a44:	08 95       	ret

00000a46 <__fp_pscB>:
     a46:	00 24       	eor	r0, r0
     a48:	0a 94       	dec	r0
     a4a:	12 16       	cp	r1, r18
     a4c:	13 06       	cpc	r1, r19
     a4e:	14 06       	cpc	r1, r20
     a50:	05 06       	cpc	r0, r21
     a52:	08 95       	ret

00000a54 <__fp_round>:
     a54:	09 2e       	mov	r0, r25
     a56:	03 94       	inc	r0
     a58:	00 0c       	add	r0, r0
     a5a:	11 f4       	brne	.+4      	; 0xa60 <__fp_round+0xc>
     a5c:	88 23       	and	r24, r24
     a5e:	52 f0       	brmi	.+20     	; 0xa74 <__fp_round+0x20>
     a60:	bb 0f       	add	r27, r27
     a62:	40 f4       	brcc	.+16     	; 0xa74 <__fp_round+0x20>
     a64:	bf 2b       	or	r27, r31
     a66:	11 f4       	brne	.+4      	; 0xa6c <__fp_round+0x18>
     a68:	60 ff       	sbrs	r22, 0
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <__fp_round+0x20>
     a6c:	6f 5f       	subi	r22, 0xFF	; 255
     a6e:	7f 4f       	sbci	r23, 0xFF	; 255
     a70:	8f 4f       	sbci	r24, 0xFF	; 255
     a72:	9f 4f       	sbci	r25, 0xFF	; 255
     a74:	08 95       	ret

00000a76 <__fp_split3>:
     a76:	57 fd       	sbrc	r21, 7
     a78:	90 58       	subi	r25, 0x80	; 128
     a7a:	44 0f       	add	r20, r20
     a7c:	55 1f       	adc	r21, r21
     a7e:	59 f0       	breq	.+22     	; 0xa96 <__fp_splitA+0x10>
     a80:	5f 3f       	cpi	r21, 0xFF	; 255
     a82:	71 f0       	breq	.+28     	; 0xaa0 <__fp_splitA+0x1a>
     a84:	47 95       	ror	r20

00000a86 <__fp_splitA>:
     a86:	88 0f       	add	r24, r24
     a88:	97 fb       	bst	r25, 7
     a8a:	99 1f       	adc	r25, r25
     a8c:	61 f0       	breq	.+24     	; 0xaa6 <__fp_splitA+0x20>
     a8e:	9f 3f       	cpi	r25, 0xFF	; 255
     a90:	79 f0       	breq	.+30     	; 0xab0 <__fp_splitA+0x2a>
     a92:	87 95       	ror	r24
     a94:	08 95       	ret
     a96:	12 16       	cp	r1, r18
     a98:	13 06       	cpc	r1, r19
     a9a:	14 06       	cpc	r1, r20
     a9c:	55 1f       	adc	r21, r21
     a9e:	f2 cf       	rjmp	.-28     	; 0xa84 <__fp_split3+0xe>
     aa0:	46 95       	lsr	r20
     aa2:	f1 df       	rcall	.-30     	; 0xa86 <__fp_splitA>
     aa4:	08 c0       	rjmp	.+16     	; 0xab6 <__fp_splitA+0x30>
     aa6:	16 16       	cp	r1, r22
     aa8:	17 06       	cpc	r1, r23
     aaa:	18 06       	cpc	r1, r24
     aac:	99 1f       	adc	r25, r25
     aae:	f1 cf       	rjmp	.-30     	; 0xa92 <__fp_splitA+0xc>
     ab0:	86 95       	lsr	r24
     ab2:	71 05       	cpc	r23, r1
     ab4:	61 05       	cpc	r22, r1
     ab6:	08 94       	sec
     ab8:	08 95       	ret

00000aba <__fp_zero>:
     aba:	e8 94       	clt

00000abc <__fp_szero>:
     abc:	bb 27       	eor	r27, r27
     abe:	66 27       	eor	r22, r22
     ac0:	77 27       	eor	r23, r23
     ac2:	cb 01       	movw	r24, r22
     ac4:	97 f9       	bld	r25, 7
     ac6:	08 95       	ret

00000ac8 <__mulsf3>:
     ac8:	0b d0       	rcall	.+22     	; 0xae0 <__mulsf3x>
     aca:	c4 cf       	rjmp	.-120    	; 0xa54 <__fp_round>
     acc:	b5 df       	rcall	.-150    	; 0xa38 <__fp_pscA>
     ace:	28 f0       	brcs	.+10     	; 0xada <__mulsf3+0x12>
     ad0:	ba df       	rcall	.-140    	; 0xa46 <__fp_pscB>
     ad2:	18 f0       	brcs	.+6      	; 0xada <__mulsf3+0x12>
     ad4:	95 23       	and	r25, r21
     ad6:	09 f0       	breq	.+2      	; 0xada <__mulsf3+0x12>
     ad8:	a6 cf       	rjmp	.-180    	; 0xa26 <__fp_inf>
     ada:	ab cf       	rjmp	.-170    	; 0xa32 <__fp_nan>
     adc:	11 24       	eor	r1, r1
     ade:	ee cf       	rjmp	.-36     	; 0xabc <__fp_szero>

00000ae0 <__mulsf3x>:
     ae0:	ca df       	rcall	.-108    	; 0xa76 <__fp_split3>
     ae2:	a0 f3       	brcs	.-24     	; 0xacc <__mulsf3+0x4>

00000ae4 <__mulsf3_pse>:
     ae4:	95 9f       	mul	r25, r21
     ae6:	d1 f3       	breq	.-12     	; 0xadc <__mulsf3+0x14>
     ae8:	95 0f       	add	r25, r21
     aea:	50 e0       	ldi	r21, 0x00	; 0
     aec:	55 1f       	adc	r21, r21
     aee:	62 9f       	mul	r22, r18
     af0:	f0 01       	movw	r30, r0
     af2:	72 9f       	mul	r23, r18
     af4:	bb 27       	eor	r27, r27
     af6:	f0 0d       	add	r31, r0
     af8:	b1 1d       	adc	r27, r1
     afa:	63 9f       	mul	r22, r19
     afc:	aa 27       	eor	r26, r26
     afe:	f0 0d       	add	r31, r0
     b00:	b1 1d       	adc	r27, r1
     b02:	aa 1f       	adc	r26, r26
     b04:	64 9f       	mul	r22, r20
     b06:	66 27       	eor	r22, r22
     b08:	b0 0d       	add	r27, r0
     b0a:	a1 1d       	adc	r26, r1
     b0c:	66 1f       	adc	r22, r22
     b0e:	82 9f       	mul	r24, r18
     b10:	22 27       	eor	r18, r18
     b12:	b0 0d       	add	r27, r0
     b14:	a1 1d       	adc	r26, r1
     b16:	62 1f       	adc	r22, r18
     b18:	73 9f       	mul	r23, r19
     b1a:	b0 0d       	add	r27, r0
     b1c:	a1 1d       	adc	r26, r1
     b1e:	62 1f       	adc	r22, r18
     b20:	83 9f       	mul	r24, r19
     b22:	a0 0d       	add	r26, r0
     b24:	61 1d       	adc	r22, r1
     b26:	22 1f       	adc	r18, r18
     b28:	74 9f       	mul	r23, r20
     b2a:	33 27       	eor	r19, r19
     b2c:	a0 0d       	add	r26, r0
     b2e:	61 1d       	adc	r22, r1
     b30:	23 1f       	adc	r18, r19
     b32:	84 9f       	mul	r24, r20
     b34:	60 0d       	add	r22, r0
     b36:	21 1d       	adc	r18, r1
     b38:	82 2f       	mov	r24, r18
     b3a:	76 2f       	mov	r23, r22
     b3c:	6a 2f       	mov	r22, r26
     b3e:	11 24       	eor	r1, r1
     b40:	9f 57       	subi	r25, 0x7F	; 127
     b42:	50 40       	sbci	r21, 0x00	; 0
     b44:	8a f0       	brmi	.+34     	; 0xb68 <__mulsf3_pse+0x84>
     b46:	e1 f0       	breq	.+56     	; 0xb80 <__mulsf3_pse+0x9c>
     b48:	88 23       	and	r24, r24
     b4a:	4a f0       	brmi	.+18     	; 0xb5e <__mulsf3_pse+0x7a>
     b4c:	ee 0f       	add	r30, r30
     b4e:	ff 1f       	adc	r31, r31
     b50:	bb 1f       	adc	r27, r27
     b52:	66 1f       	adc	r22, r22
     b54:	77 1f       	adc	r23, r23
     b56:	88 1f       	adc	r24, r24
     b58:	91 50       	subi	r25, 0x01	; 1
     b5a:	50 40       	sbci	r21, 0x00	; 0
     b5c:	a9 f7       	brne	.-22     	; 0xb48 <__mulsf3_pse+0x64>
     b5e:	9e 3f       	cpi	r25, 0xFE	; 254
     b60:	51 05       	cpc	r21, r1
     b62:	70 f0       	brcs	.+28     	; 0xb80 <__mulsf3_pse+0x9c>
     b64:	60 cf       	rjmp	.-320    	; 0xa26 <__fp_inf>
     b66:	aa cf       	rjmp	.-172    	; 0xabc <__fp_szero>
     b68:	5f 3f       	cpi	r21, 0xFF	; 255
     b6a:	ec f3       	brlt	.-6      	; 0xb66 <__mulsf3_pse+0x82>
     b6c:	98 3e       	cpi	r25, 0xE8	; 232
     b6e:	dc f3       	brlt	.-10     	; 0xb66 <__mulsf3_pse+0x82>
     b70:	86 95       	lsr	r24
     b72:	77 95       	ror	r23
     b74:	67 95       	ror	r22
     b76:	b7 95       	ror	r27
     b78:	f7 95       	ror	r31
     b7a:	e7 95       	ror	r30
     b7c:	9f 5f       	subi	r25, 0xFF	; 255
     b7e:	c1 f7       	brne	.-16     	; 0xb70 <__mulsf3_pse+0x8c>
     b80:	fe 2b       	or	r31, r30
     b82:	88 0f       	add	r24, r24
     b84:	91 1d       	adc	r25, r1
     b86:	96 95       	lsr	r25
     b88:	87 95       	ror	r24
     b8a:	97 f9       	bld	r25, 7
     b8c:	08 95       	ret

00000b8e <vfprintf>:
     b8e:	a5 e1       	ldi	r26, 0x15	; 21
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	ed ec       	ldi	r30, 0xCD	; 205
     b94:	f5 e0       	ldi	r31, 0x05	; 5
     b96:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__prologue_saves__>
     b9a:	4c 01       	movw	r8, r24
     b9c:	7f 87       	std	Y+15, r23	; 0x0f
     b9e:	6e 87       	std	Y+14, r22	; 0x0e
     ba0:	fc 01       	movw	r30, r24
     ba2:	17 82       	std	Z+7, r1	; 0x07
     ba4:	16 82       	std	Z+6, r1	; 0x06
     ba6:	83 81       	ldd	r24, Z+3	; 0x03
     ba8:	81 fd       	sbrc	r24, 1
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <vfprintf+0x26>
     bac:	76 c3       	rjmp	.+1772   	; 0x129a <vfprintf+0x70c>
     bae:	4c 85       	ldd	r20, Y+12	; 0x0c
     bb0:	5d 85       	ldd	r21, Y+13	; 0x0d
     bb2:	04 c0       	rjmp	.+8      	; 0xbbc <vfprintf+0x2e>
     bb4:	1e 01       	movw	r2, r28
     bb6:	08 94       	sec
     bb8:	21 1c       	adc	r2, r1
     bba:	31 1c       	adc	r3, r1
     bbc:	f4 01       	movw	r30, r8
     bbe:	93 81       	ldd	r25, Z+3	; 0x03
     bc0:	ee 85       	ldd	r30, Y+14	; 0x0e
     bc2:	ff 85       	ldd	r31, Y+15	; 0x0f
     bc4:	93 fd       	sbrc	r25, 3
     bc6:	85 91       	lpm	r24, Z+
     bc8:	93 ff       	sbrs	r25, 3
     bca:	81 91       	ld	r24, Z+
     bcc:	ff 87       	std	Y+15, r31	; 0x0f
     bce:	ee 87       	std	Y+14, r30	; 0x0e
     bd0:	88 23       	and	r24, r24
     bd2:	09 f4       	brne	.+2      	; 0xbd6 <vfprintf+0x48>
     bd4:	5e c3       	rjmp	.+1724   	; 0x1292 <vfprintf+0x704>
     bd6:	85 32       	cpi	r24, 0x25	; 37
     bd8:	41 f4       	brne	.+16     	; 0xbea <vfprintf+0x5c>
     bda:	93 fd       	sbrc	r25, 3
     bdc:	85 91       	lpm	r24, Z+
     bde:	93 ff       	sbrs	r25, 3
     be0:	81 91       	ld	r24, Z+
     be2:	ff 87       	std	Y+15, r31	; 0x0f
     be4:	ee 87       	std	Y+14, r30	; 0x0e
     be6:	85 32       	cpi	r24, 0x25	; 37
     be8:	59 f4       	brne	.+22     	; 0xc00 <vfprintf+0x72>
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	b4 01       	movw	r22, r8
     bee:	4c 8b       	std	Y+20, r20	; 0x14
     bf0:	5d 8b       	std	Y+21, r21	; 0x15
     bf2:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     bf6:	4c 89       	ldd	r20, Y+20	; 0x14
     bf8:	5d 89       	ldd	r21, Y+21	; 0x15
     bfa:	5d 87       	std	Y+13, r21	; 0x0d
     bfc:	4c 87       	std	Y+12, r20	; 0x0c
     bfe:	d7 cf       	rjmp	.-82     	; 0xbae <vfprintf+0x20>
     c00:	ff 24       	eor	r15, r15
     c02:	dd 24       	eor	r13, r13
     c04:	10 e0       	ldi	r17, 0x00	; 0
     c06:	10 32       	cpi	r17, 0x20	; 32
     c08:	b0 f4       	brcc	.+44     	; 0xc36 <vfprintf+0xa8>
     c0a:	8b 32       	cpi	r24, 0x2B	; 43
     c0c:	69 f0       	breq	.+26     	; 0xc28 <vfprintf+0x9a>
     c0e:	8c 32       	cpi	r24, 0x2C	; 44
     c10:	28 f4       	brcc	.+10     	; 0xc1c <vfprintf+0x8e>
     c12:	80 32       	cpi	r24, 0x20	; 32
     c14:	51 f0       	breq	.+20     	; 0xc2a <vfprintf+0x9c>
     c16:	83 32       	cpi	r24, 0x23	; 35
     c18:	71 f4       	brne	.+28     	; 0xc36 <vfprintf+0xa8>
     c1a:	0b c0       	rjmp	.+22     	; 0xc32 <vfprintf+0xa4>
     c1c:	8d 32       	cpi	r24, 0x2D	; 45
     c1e:	39 f0       	breq	.+14     	; 0xc2e <vfprintf+0xa0>
     c20:	80 33       	cpi	r24, 0x30	; 48
     c22:	49 f4       	brne	.+18     	; 0xc36 <vfprintf+0xa8>
     c24:	11 60       	ori	r17, 0x01	; 1
     c26:	2c c0       	rjmp	.+88     	; 0xc80 <vfprintf+0xf2>
     c28:	12 60       	ori	r17, 0x02	; 2
     c2a:	14 60       	ori	r17, 0x04	; 4
     c2c:	29 c0       	rjmp	.+82     	; 0xc80 <vfprintf+0xf2>
     c2e:	18 60       	ori	r17, 0x08	; 8
     c30:	27 c0       	rjmp	.+78     	; 0xc80 <vfprintf+0xf2>
     c32:	10 61       	ori	r17, 0x10	; 16
     c34:	25 c0       	rjmp	.+74     	; 0xc80 <vfprintf+0xf2>
     c36:	17 fd       	sbrc	r17, 7
     c38:	2e c0       	rjmp	.+92     	; 0xc96 <vfprintf+0x108>
     c3a:	28 2f       	mov	r18, r24
     c3c:	20 53       	subi	r18, 0x30	; 48
     c3e:	2a 30       	cpi	r18, 0x0A	; 10
     c40:	98 f4       	brcc	.+38     	; 0xc68 <vfprintf+0xda>
     c42:	16 ff       	sbrs	r17, 6
     c44:	08 c0       	rjmp	.+16     	; 0xc56 <vfprintf+0xc8>
     c46:	8f 2d       	mov	r24, r15
     c48:	88 0f       	add	r24, r24
     c4a:	f8 2e       	mov	r15, r24
     c4c:	ff 0c       	add	r15, r15
     c4e:	ff 0c       	add	r15, r15
     c50:	f8 0e       	add	r15, r24
     c52:	f2 0e       	add	r15, r18
     c54:	15 c0       	rjmp	.+42     	; 0xc80 <vfprintf+0xf2>
     c56:	8d 2d       	mov	r24, r13
     c58:	88 0f       	add	r24, r24
     c5a:	d8 2e       	mov	r13, r24
     c5c:	dd 0c       	add	r13, r13
     c5e:	dd 0c       	add	r13, r13
     c60:	d8 0e       	add	r13, r24
     c62:	d2 0e       	add	r13, r18
     c64:	10 62       	ori	r17, 0x20	; 32
     c66:	0c c0       	rjmp	.+24     	; 0xc80 <vfprintf+0xf2>
     c68:	8e 32       	cpi	r24, 0x2E	; 46
     c6a:	21 f4       	brne	.+8      	; 0xc74 <vfprintf+0xe6>
     c6c:	16 fd       	sbrc	r17, 6
     c6e:	11 c3       	rjmp	.+1570   	; 0x1292 <vfprintf+0x704>
     c70:	10 64       	ori	r17, 0x40	; 64
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfprintf+0xf2>
     c74:	8c 36       	cpi	r24, 0x6C	; 108
     c76:	11 f4       	brne	.+4      	; 0xc7c <vfprintf+0xee>
     c78:	10 68       	ori	r17, 0x80	; 128
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0xf2>
     c7c:	88 36       	cpi	r24, 0x68	; 104
     c7e:	59 f4       	brne	.+22     	; 0xc96 <vfprintf+0x108>
     c80:	ee 85       	ldd	r30, Y+14	; 0x0e
     c82:	ff 85       	ldd	r31, Y+15	; 0x0f
     c84:	93 fd       	sbrc	r25, 3
     c86:	85 91       	lpm	r24, Z+
     c88:	93 ff       	sbrs	r25, 3
     c8a:	81 91       	ld	r24, Z+
     c8c:	ff 87       	std	Y+15, r31	; 0x0f
     c8e:	ee 87       	std	Y+14, r30	; 0x0e
     c90:	88 23       	and	r24, r24
     c92:	09 f0       	breq	.+2      	; 0xc96 <vfprintf+0x108>
     c94:	b8 cf       	rjmp	.-144    	; 0xc06 <vfprintf+0x78>
     c96:	98 2f       	mov	r25, r24
     c98:	95 54       	subi	r25, 0x45	; 69
     c9a:	93 30       	cpi	r25, 0x03	; 3
     c9c:	18 f4       	brcc	.+6      	; 0xca4 <vfprintf+0x116>
     c9e:	10 61       	ori	r17, 0x10	; 16
     ca0:	80 5e       	subi	r24, 0xE0	; 224
     ca2:	06 c0       	rjmp	.+12     	; 0xcb0 <vfprintf+0x122>
     ca4:	98 2f       	mov	r25, r24
     ca6:	95 56       	subi	r25, 0x65	; 101
     ca8:	93 30       	cpi	r25, 0x03	; 3
     caa:	08 f0       	brcs	.+2      	; 0xcae <vfprintf+0x120>
     cac:	a2 c1       	rjmp	.+836    	; 0xff2 <vfprintf+0x464>
     cae:	1f 7e       	andi	r17, 0xEF	; 239
     cb0:	16 fd       	sbrc	r17, 6
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <vfprintf+0x12a>
     cb4:	e6 e0       	ldi	r30, 0x06	; 6
     cb6:	fe 2e       	mov	r15, r30
     cb8:	1f 73       	andi	r17, 0x3F	; 63
     cba:	85 36       	cpi	r24, 0x65	; 101
     cbc:	11 f4       	brne	.+4      	; 0xcc2 <vfprintf+0x134>
     cbe:	10 64       	ori	r17, 0x40	; 64
     cc0:	06 c0       	rjmp	.+12     	; 0xcce <vfprintf+0x140>
     cc2:	86 36       	cpi	r24, 0x66	; 102
     cc4:	11 f4       	brne	.+4      	; 0xcca <vfprintf+0x13c>
     cc6:	10 68       	ori	r17, 0x80	; 128
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <vfprintf+0x140>
     cca:	f1 10       	cpse	r15, r1
     ccc:	fa 94       	dec	r15
     cce:	17 ff       	sbrs	r17, 7
     cd0:	07 c0       	rjmp	.+14     	; 0xce0 <vfprintf+0x152>
     cd2:	fb e3       	ldi	r31, 0x3B	; 59
     cd4:	ff 15       	cp	r31, r15
     cd6:	48 f0       	brcs	.+18     	; 0xcea <vfprintf+0x15c>
     cd8:	ef 2c       	mov	r14, r15
     cda:	e3 94       	inc	r14
     cdc:	27 e0       	ldi	r18, 0x07	; 7
     cde:	0d c0       	rjmp	.+26     	; 0xcfa <vfprintf+0x16c>
     ce0:	27 e0       	ldi	r18, 0x07	; 7
     ce2:	2f 15       	cp	r18, r15
     ce4:	30 f0       	brcs	.+12     	; 0xcf2 <vfprintf+0x164>
     ce6:	2f 2d       	mov	r18, r15
     ce8:	07 c0       	rjmp	.+14     	; 0xcf8 <vfprintf+0x16a>
     cea:	27 e0       	ldi	r18, 0x07	; 7
     cec:	7c e3       	ldi	r23, 0x3C	; 60
     cee:	e7 2e       	mov	r14, r23
     cf0:	04 c0       	rjmp	.+8      	; 0xcfa <vfprintf+0x16c>
     cf2:	27 e0       	ldi	r18, 0x07	; 7
     cf4:	67 e0       	ldi	r22, 0x07	; 7
     cf6:	f6 2e       	mov	r15, r22
     cf8:	ee 24       	eor	r14, r14
     cfa:	ca 01       	movw	r24, r20
     cfc:	04 96       	adiw	r24, 0x04	; 4
     cfe:	9d 87       	std	Y+13, r25	; 0x0d
     d00:	8c 87       	std	Y+12, r24	; 0x0c
     d02:	fa 01       	movw	r30, r20
     d04:	60 81       	ld	r22, Z
     d06:	71 81       	ldd	r23, Z+1	; 0x01
     d08:	82 81       	ldd	r24, Z+2	; 0x02
     d0a:	93 81       	ldd	r25, Z+3	; 0x03
     d0c:	a1 01       	movw	r20, r2
     d0e:	0e 2d       	mov	r16, r14
     d10:	0e 94 b6 09 	call	0x136c	; 0x136c <__ftoa_engine>
     d14:	5c 01       	movw	r10, r24
     d16:	c9 80       	ldd	r12, Y+1	; 0x01
     d18:	2c 2d       	mov	r18, r12
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	39 8b       	std	Y+17, r19	; 0x11
     d1e:	28 8b       	std	Y+16, r18	; 0x10
     d20:	c0 fe       	sbrs	r12, 0
     d22:	03 c0       	rjmp	.+6      	; 0xd2a <vfprintf+0x19c>
     d24:	38 89       	ldd	r19, Y+16	; 0x10
     d26:	33 ff       	sbrs	r19, 3
     d28:	06 c0       	rjmp	.+12     	; 0xd36 <vfprintf+0x1a8>
     d2a:	11 fd       	sbrc	r17, 1
     d2c:	06 c0       	rjmp	.+12     	; 0xd3a <vfprintf+0x1ac>
     d2e:	12 ff       	sbrs	r17, 2
     d30:	06 c0       	rjmp	.+12     	; 0xd3e <vfprintf+0x1b0>
     d32:	00 e2       	ldi	r16, 0x20	; 32
     d34:	05 c0       	rjmp	.+10     	; 0xd40 <vfprintf+0x1b2>
     d36:	0d e2       	ldi	r16, 0x2D	; 45
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <vfprintf+0x1b2>
     d3a:	0b e2       	ldi	r16, 0x2B	; 43
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <vfprintf+0x1b2>
     d3e:	00 e0       	ldi	r16, 0x00	; 0
     d40:	88 89       	ldd	r24, Y+16	; 0x10
     d42:	99 89       	ldd	r25, Y+17	; 0x11
     d44:	8c 70       	andi	r24, 0x0C	; 12
     d46:	90 70       	andi	r25, 0x00	; 0
     d48:	00 97       	sbiw	r24, 0x00	; 0
     d4a:	09 f4       	brne	.+2      	; 0xd4e <vfprintf+0x1c0>
     d4c:	3c c0       	rjmp	.+120    	; 0xdc6 <vfprintf+0x238>
     d4e:	00 23       	and	r16, r16
     d50:	11 f0       	breq	.+4      	; 0xd56 <vfprintf+0x1c8>
     d52:	84 e0       	ldi	r24, 0x04	; 4
     d54:	01 c0       	rjmp	.+2      	; 0xd58 <vfprintf+0x1ca>
     d56:	83 e0       	ldi	r24, 0x03	; 3
     d58:	8d 15       	cp	r24, r13
     d5a:	58 f4       	brcc	.+22     	; 0xd72 <vfprintf+0x1e4>
     d5c:	d8 1a       	sub	r13, r24
     d5e:	13 fd       	sbrc	r17, 3
     d60:	09 c0       	rjmp	.+18     	; 0xd74 <vfprintf+0x1e6>
     d62:	80 e2       	ldi	r24, 0x20	; 32
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	b4 01       	movw	r22, r8
     d68:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     d6c:	da 94       	dec	r13
     d6e:	c9 f7       	brne	.-14     	; 0xd62 <vfprintf+0x1d4>
     d70:	01 c0       	rjmp	.+2      	; 0xd74 <vfprintf+0x1e6>
     d72:	dd 24       	eor	r13, r13
     d74:	00 23       	and	r16, r16
     d76:	29 f0       	breq	.+10     	; 0xd82 <vfprintf+0x1f4>
     d78:	80 2f       	mov	r24, r16
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	b4 01       	movw	r22, r8
     d7e:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     d82:	88 89       	ldd	r24, Y+16	; 0x10
     d84:	83 fd       	sbrc	r24, 3
     d86:	05 c0       	rjmp	.+10     	; 0xd92 <vfprintf+0x204>
     d88:	3c e6       	ldi	r19, 0x6C	; 108
     d8a:	e3 2e       	mov	r14, r19
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	f3 2e       	mov	r15, r19
     d90:	11 c0       	rjmp	.+34     	; 0xdb4 <vfprintf+0x226>
     d92:	28 e6       	ldi	r18, 0x68	; 104
     d94:	e2 2e       	mov	r14, r18
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	f2 2e       	mov	r15, r18
     d9a:	0c c0       	rjmp	.+24     	; 0xdb4 <vfprintf+0x226>
     d9c:	01 15       	cp	r16, r1
     d9e:	11 05       	cpc	r17, r1
     da0:	09 f0       	breq	.+2      	; 0xda4 <vfprintf+0x216>
     da2:	80 52       	subi	r24, 0x20	; 32
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	b4 01       	movw	r22, r8
     da8:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     dac:	08 94       	sec
     dae:	e1 1c       	adc	r14, r1
     db0:	f1 1c       	adc	r15, r1
     db2:	04 c0       	rjmp	.+8      	; 0xdbc <vfprintf+0x22e>
     db4:	01 2f       	mov	r16, r17
     db6:	10 e0       	ldi	r17, 0x00	; 0
     db8:	00 71       	andi	r16, 0x10	; 16
     dba:	10 70       	andi	r17, 0x00	; 0
     dbc:	f7 01       	movw	r30, r14
     dbe:	84 91       	lpm	r24, Z
     dc0:	88 23       	and	r24, r24
     dc2:	61 f7       	brne	.-40     	; 0xd9c <vfprintf+0x20e>
     dc4:	63 c2       	rjmp	.+1222   	; 0x128c <vfprintf+0x6fe>
     dc6:	17 ff       	sbrs	r17, 7
     dc8:	0e c0       	rjmp	.+28     	; 0xde6 <vfprintf+0x258>
     dca:	ea 0c       	add	r14, r10
     dcc:	f8 89       	ldd	r31, Y+16	; 0x10
     dce:	f4 ff       	sbrs	r31, 4
     dd0:	04 c0       	rjmp	.+8      	; 0xdda <vfprintf+0x24c>
     dd2:	8a 81       	ldd	r24, Y+2	; 0x02
     dd4:	81 33       	cpi	r24, 0x31	; 49
     dd6:	09 f4       	brne	.+2      	; 0xdda <vfprintf+0x24c>
     dd8:	ea 94       	dec	r14
     dda:	1e 14       	cp	r1, r14
     ddc:	4c f5       	brge	.+82     	; 0xe30 <vfprintf+0x2a2>
     dde:	28 e0       	ldi	r18, 0x08	; 8
     de0:	2e 15       	cp	r18, r14
     de2:	48 f1       	brcs	.+82     	; 0xe36 <vfprintf+0x2a8>
     de4:	2c c0       	rjmp	.+88     	; 0xe3e <vfprintf+0x2b0>
     de6:	16 fd       	sbrc	r17, 6
     de8:	2a c0       	rjmp	.+84     	; 0xe3e <vfprintf+0x2b0>
     dea:	8f 2d       	mov	r24, r15
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	8a 15       	cp	r24, r10
     df0:	9b 05       	cpc	r25, r11
     df2:	44 f0       	brlt	.+16     	; 0xe04 <vfprintf+0x276>
     df4:	3c ef       	ldi	r19, 0xFC	; 252
     df6:	a3 16       	cp	r10, r19
     df8:	3f ef       	ldi	r19, 0xFF	; 255
     dfa:	b3 06       	cpc	r11, r19
     dfc:	1c f0       	brlt	.+6      	; 0xe04 <vfprintf+0x276>
     dfe:	10 68       	ori	r17, 0x80	; 128
     e00:	01 c0       	rjmp	.+2      	; 0xe04 <vfprintf+0x276>
     e02:	fa 94       	dec	r15
     e04:	ff 20       	and	r15, r15
     e06:	49 f0       	breq	.+18     	; 0xe1a <vfprintf+0x28c>
     e08:	e2 e0       	ldi	r30, 0x02	; 2
     e0a:	f0 e0       	ldi	r31, 0x00	; 0
     e0c:	ec 0f       	add	r30, r28
     e0e:	fd 1f       	adc	r31, r29
     e10:	ef 0d       	add	r30, r15
     e12:	f1 1d       	adc	r31, r1
     e14:	80 81       	ld	r24, Z
     e16:	80 33       	cpi	r24, 0x30	; 48
     e18:	a1 f3       	breq	.-24     	; 0xe02 <vfprintf+0x274>
     e1a:	17 ff       	sbrs	r17, 7
     e1c:	10 c0       	rjmp	.+32     	; 0xe3e <vfprintf+0x2b0>
     e1e:	ef 2c       	mov	r14, r15
     e20:	e3 94       	inc	r14
     e22:	8f 2d       	mov	r24, r15
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	a8 16       	cp	r10, r24
     e28:	b9 06       	cpc	r11, r25
     e2a:	44 f4       	brge	.+16     	; 0xe3c <vfprintf+0x2ae>
     e2c:	fa 18       	sub	r15, r10
     e2e:	07 c0       	rjmp	.+14     	; 0xe3e <vfprintf+0x2b0>
     e30:	ee 24       	eor	r14, r14
     e32:	e3 94       	inc	r14
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <vfprintf+0x2b0>
     e36:	98 e0       	ldi	r25, 0x08	; 8
     e38:	e9 2e       	mov	r14, r25
     e3a:	01 c0       	rjmp	.+2      	; 0xe3e <vfprintf+0x2b0>
     e3c:	ff 24       	eor	r15, r15
     e3e:	17 ff       	sbrs	r17, 7
     e40:	07 c0       	rjmp	.+14     	; 0xe50 <vfprintf+0x2c2>
     e42:	1a 14       	cp	r1, r10
     e44:	1b 04       	cpc	r1, r11
     e46:	3c f4       	brge	.+14     	; 0xe56 <vfprintf+0x2c8>
     e48:	95 01       	movw	r18, r10
     e4a:	2f 5f       	subi	r18, 0xFF	; 255
     e4c:	3f 4f       	sbci	r19, 0xFF	; 255
     e4e:	05 c0       	rjmp	.+10     	; 0xe5a <vfprintf+0x2cc>
     e50:	25 e0       	ldi	r18, 0x05	; 5
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <vfprintf+0x2cc>
     e56:	21 e0       	ldi	r18, 0x01	; 1
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	00 23       	and	r16, r16
     e5c:	11 f0       	breq	.+4      	; 0xe62 <vfprintf+0x2d4>
     e5e:	2f 5f       	subi	r18, 0xFF	; 255
     e60:	3f 4f       	sbci	r19, 0xFF	; 255
     e62:	ff 20       	and	r15, r15
     e64:	29 f0       	breq	.+10     	; 0xe70 <vfprintf+0x2e2>
     e66:	8f 2d       	mov	r24, r15
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	01 96       	adiw	r24, 0x01	; 1
     e6c:	28 0f       	add	r18, r24
     e6e:	39 1f       	adc	r19, r25
     e70:	8d 2d       	mov	r24, r13
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	28 17       	cp	r18, r24
     e76:	39 07       	cpc	r19, r25
     e78:	14 f4       	brge	.+4      	; 0xe7e <vfprintf+0x2f0>
     e7a:	d2 1a       	sub	r13, r18
     e7c:	01 c0       	rjmp	.+2      	; 0xe80 <vfprintf+0x2f2>
     e7e:	dd 24       	eor	r13, r13
     e80:	61 2e       	mov	r6, r17
     e82:	77 24       	eor	r7, r7
     e84:	c3 01       	movw	r24, r6
     e86:	89 70       	andi	r24, 0x09	; 9
     e88:	90 70       	andi	r25, 0x00	; 0
     e8a:	00 97       	sbiw	r24, 0x00	; 0
     e8c:	49 f4       	brne	.+18     	; 0xea0 <vfprintf+0x312>
     e8e:	06 c0       	rjmp	.+12     	; 0xe9c <vfprintf+0x30e>
     e90:	80 e2       	ldi	r24, 0x20	; 32
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	b4 01       	movw	r22, r8
     e96:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     e9a:	da 94       	dec	r13
     e9c:	dd 20       	and	r13, r13
     e9e:	c1 f7       	brne	.-16     	; 0xe90 <vfprintf+0x302>
     ea0:	00 23       	and	r16, r16
     ea2:	29 f0       	breq	.+10     	; 0xeae <vfprintf+0x320>
     ea4:	80 2f       	mov	r24, r16
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	b4 01       	movw	r22, r8
     eaa:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     eae:	63 fc       	sbrc	r6, 3
     eb0:	09 c0       	rjmp	.+18     	; 0xec4 <vfprintf+0x336>
     eb2:	06 c0       	rjmp	.+12     	; 0xec0 <vfprintf+0x332>
     eb4:	80 e3       	ldi	r24, 0x30	; 48
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	b4 01       	movw	r22, r8
     eba:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     ebe:	da 94       	dec	r13
     ec0:	dd 20       	and	r13, r13
     ec2:	c1 f7       	brne	.-16     	; 0xeb4 <vfprintf+0x326>
     ec4:	17 ff       	sbrs	r17, 7
     ec6:	48 c0       	rjmp	.+144    	; 0xf58 <vfprintf+0x3ca>
     ec8:	85 01       	movw	r16, r10
     eca:	b7 fe       	sbrs	r11, 7
     ecc:	02 c0       	rjmp	.+4      	; 0xed2 <vfprintf+0x344>
     ece:	00 e0       	ldi	r16, 0x00	; 0
     ed0:	10 e0       	ldi	r17, 0x00	; 0
     ed2:	66 24       	eor	r6, r6
     ed4:	77 24       	eor	r7, r7
     ed6:	95 01       	movw	r18, r10
     ed8:	2e 19       	sub	r18, r14
     eda:	31 09       	sbc	r19, r1
     edc:	3b 8b       	std	Y+19, r19	; 0x13
     ede:	2a 8b       	std	Y+18, r18	; 0x12
     ee0:	25 01       	movw	r4, r10
     ee2:	40 1a       	sub	r4, r16
     ee4:	51 0a       	sbc	r5, r17
     ee6:	42 0c       	add	r4, r2
     ee8:	53 1c       	adc	r5, r3
     eea:	6f 2d       	mov	r22, r15
     eec:	70 e0       	ldi	r23, 0x00	; 0
     eee:	ee 24       	eor	r14, r14
     ef0:	ff 24       	eor	r15, r15
     ef2:	e6 1a       	sub	r14, r22
     ef4:	f7 0a       	sbc	r15, r23
     ef6:	3f ef       	ldi	r19, 0xFF	; 255
     ef8:	0f 3f       	cpi	r16, 0xFF	; 255
     efa:	13 07       	cpc	r17, r19
     efc:	29 f4       	brne	.+10     	; 0xf08 <vfprintf+0x37a>
     efe:	8e e2       	ldi	r24, 0x2E	; 46
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	b4 01       	movw	r22, r8
     f04:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     f08:	a0 16       	cp	r10, r16
     f0a:	b1 06       	cpc	r11, r17
     f0c:	54 f0       	brlt	.+20     	; 0xf22 <vfprintf+0x394>
     f0e:	2a 89       	ldd	r18, Y+18	; 0x12
     f10:	3b 89       	ldd	r19, Y+19	; 0x13
     f12:	20 17       	cp	r18, r16
     f14:	31 07       	cpc	r19, r17
     f16:	2c f4       	brge	.+10     	; 0xf22 <vfprintf+0x394>
     f18:	f2 01       	movw	r30, r4
     f1a:	e6 0d       	add	r30, r6
     f1c:	f7 1d       	adc	r31, r7
     f1e:	81 81       	ldd	r24, Z+1	; 0x01
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <vfprintf+0x396>
     f22:	80 e3       	ldi	r24, 0x30	; 48
     f24:	01 50       	subi	r16, 0x01	; 1
     f26:	10 40       	sbci	r17, 0x00	; 0
     f28:	08 94       	sec
     f2a:	61 1c       	adc	r6, r1
     f2c:	71 1c       	adc	r7, r1
     f2e:	0e 15       	cp	r16, r14
     f30:	1f 05       	cpc	r17, r15
     f32:	2c f0       	brlt	.+10     	; 0xf3e <vfprintf+0x3b0>
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	b4 01       	movw	r22, r8
     f38:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     f3c:	dc cf       	rjmp	.-72     	; 0xef6 <vfprintf+0x368>
     f3e:	0a 15       	cp	r16, r10
     f40:	1b 05       	cpc	r17, r11
     f42:	41 f4       	brne	.+16     	; 0xf54 <vfprintf+0x3c6>
     f44:	9a 81       	ldd	r25, Y+2	; 0x02
     f46:	96 33       	cpi	r25, 0x36	; 54
     f48:	20 f4       	brcc	.+8      	; 0xf52 <vfprintf+0x3c4>
     f4a:	95 33       	cpi	r25, 0x35	; 53
     f4c:	19 f4       	brne	.+6      	; 0xf54 <vfprintf+0x3c6>
     f4e:	38 89       	ldd	r19, Y+16	; 0x10
     f50:	34 ff       	sbrs	r19, 4
     f52:	81 e3       	ldi	r24, 0x31	; 49
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	49 c0       	rjmp	.+146    	; 0xfea <vfprintf+0x45c>
     f58:	8a 81       	ldd	r24, Y+2	; 0x02
     f5a:	81 33       	cpi	r24, 0x31	; 49
     f5c:	11 f0       	breq	.+4      	; 0xf62 <vfprintf+0x3d4>
     f5e:	9f ee       	ldi	r25, 0xEF	; 239
     f60:	c9 22       	and	r12, r25
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	b4 01       	movw	r22, r8
     f66:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     f6a:	ff 20       	and	r15, r15
     f6c:	89 f0       	breq	.+34     	; 0xf90 <vfprintf+0x402>
     f6e:	8e e2       	ldi	r24, 0x2E	; 46
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	b4 01       	movw	r22, r8
     f74:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     f78:	12 e0       	ldi	r17, 0x02	; 2
     f7a:	f1 01       	movw	r30, r2
     f7c:	e1 0f       	add	r30, r17
     f7e:	f1 1d       	adc	r31, r1
     f80:	1f 5f       	subi	r17, 0xFF	; 255
     f82:	80 81       	ld	r24, Z
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	b4 01       	movw	r22, r8
     f88:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     f8c:	fa 94       	dec	r15
     f8e:	a9 f7       	brne	.-22     	; 0xf7a <vfprintf+0x3ec>
     f90:	64 fe       	sbrs	r6, 4
     f92:	03 c0       	rjmp	.+6      	; 0xf9a <vfprintf+0x40c>
     f94:	85 e4       	ldi	r24, 0x45	; 69
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <vfprintf+0x410>
     f9a:	85 e6       	ldi	r24, 0x65	; 101
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	b4 01       	movw	r22, r8
     fa0:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     fa4:	b7 fc       	sbrc	r11, 7
     fa6:	05 c0       	rjmp	.+10     	; 0xfb2 <vfprintf+0x424>
     fa8:	a1 14       	cp	r10, r1
     faa:	b1 04       	cpc	r11, r1
     fac:	41 f4       	brne	.+16     	; 0xfbe <vfprintf+0x430>
     fae:	c4 fe       	sbrs	r12, 4
     fb0:	06 c0       	rjmp	.+12     	; 0xfbe <vfprintf+0x430>
     fb2:	b0 94       	com	r11
     fb4:	a1 94       	neg	r10
     fb6:	b1 08       	sbc	r11, r1
     fb8:	b3 94       	inc	r11
     fba:	8d e2       	ldi	r24, 0x2D	; 45
     fbc:	01 c0       	rjmp	.+2      	; 0xfc0 <vfprintf+0x432>
     fbe:	8b e2       	ldi	r24, 0x2B	; 43
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	b4 01       	movw	r22, r8
     fc4:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     fc8:	80 e3       	ldi	r24, 0x30	; 48
     fca:	05 c0       	rjmp	.+10     	; 0xfd6 <vfprintf+0x448>
     fcc:	8f 5f       	subi	r24, 0xFF	; 255
     fce:	e6 ef       	ldi	r30, 0xF6	; 246
     fd0:	ff ef       	ldi	r31, 0xFF	; 255
     fd2:	ae 0e       	add	r10, r30
     fd4:	bf 1e       	adc	r11, r31
     fd6:	fa e0       	ldi	r31, 0x0A	; 10
     fd8:	af 16       	cp	r10, r31
     fda:	b1 04       	cpc	r11, r1
     fdc:	bc f7       	brge	.-18     	; 0xfcc <vfprintf+0x43e>
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	b4 01       	movw	r22, r8
     fe2:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     fe6:	c5 01       	movw	r24, r10
     fe8:	c0 96       	adiw	r24, 0x30	; 48
     fea:	b4 01       	movw	r22, r8
     fec:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
     ff0:	4d c1       	rjmp	.+666    	; 0x128c <vfprintf+0x6fe>
     ff2:	83 36       	cpi	r24, 0x63	; 99
     ff4:	31 f0       	breq	.+12     	; 0x1002 <vfprintf+0x474>
     ff6:	83 37       	cpi	r24, 0x73	; 115
     ff8:	89 f0       	breq	.+34     	; 0x101c <vfprintf+0x48e>
     ffa:	83 35       	cpi	r24, 0x53	; 83
     ffc:	09 f0       	breq	.+2      	; 0x1000 <vfprintf+0x472>
     ffe:	59 c0       	rjmp	.+178    	; 0x10b2 <vfprintf+0x524>
    1000:	22 c0       	rjmp	.+68     	; 0x1046 <vfprintf+0x4b8>
    1002:	9a 01       	movw	r18, r20
    1004:	2e 5f       	subi	r18, 0xFE	; 254
    1006:	3f 4f       	sbci	r19, 0xFF	; 255
    1008:	3d 87       	std	Y+13, r19	; 0x0d
    100a:	2c 87       	std	Y+12, r18	; 0x0c
    100c:	fa 01       	movw	r30, r20
    100e:	80 81       	ld	r24, Z
    1010:	89 83       	std	Y+1, r24	; 0x01
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	e8 2e       	mov	r14, r24
    1016:	f1 2c       	mov	r15, r1
    1018:	51 01       	movw	r10, r2
    101a:	13 c0       	rjmp	.+38     	; 0x1042 <vfprintf+0x4b4>
    101c:	9a 01       	movw	r18, r20
    101e:	2e 5f       	subi	r18, 0xFE	; 254
    1020:	3f 4f       	sbci	r19, 0xFF	; 255
    1022:	3d 87       	std	Y+13, r19	; 0x0d
    1024:	2c 87       	std	Y+12, r18	; 0x0c
    1026:	fa 01       	movw	r30, r20
    1028:	a0 80       	ld	r10, Z
    102a:	b1 80       	ldd	r11, Z+1	; 0x01
    102c:	16 ff       	sbrs	r17, 6
    102e:	03 c0       	rjmp	.+6      	; 0x1036 <vfprintf+0x4a8>
    1030:	6f 2d       	mov	r22, r15
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	02 c0       	rjmp	.+4      	; 0x103a <vfprintf+0x4ac>
    1036:	6f ef       	ldi	r22, 0xFF	; 255
    1038:	7f ef       	ldi	r23, 0xFF	; 255
    103a:	c5 01       	movw	r24, r10
    103c:	0e 94 a2 0a 	call	0x1544	; 0x1544 <strnlen>
    1040:	7c 01       	movw	r14, r24
    1042:	1f 77       	andi	r17, 0x7F	; 127
    1044:	14 c0       	rjmp	.+40     	; 0x106e <vfprintf+0x4e0>
    1046:	9a 01       	movw	r18, r20
    1048:	2e 5f       	subi	r18, 0xFE	; 254
    104a:	3f 4f       	sbci	r19, 0xFF	; 255
    104c:	3d 87       	std	Y+13, r19	; 0x0d
    104e:	2c 87       	std	Y+12, r18	; 0x0c
    1050:	fa 01       	movw	r30, r20
    1052:	a0 80       	ld	r10, Z
    1054:	b1 80       	ldd	r11, Z+1	; 0x01
    1056:	16 ff       	sbrs	r17, 6
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <vfprintf+0x4d2>
    105a:	6f 2d       	mov	r22, r15
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	02 c0       	rjmp	.+4      	; 0x1064 <vfprintf+0x4d6>
    1060:	6f ef       	ldi	r22, 0xFF	; 255
    1062:	7f ef       	ldi	r23, 0xFF	; 255
    1064:	c5 01       	movw	r24, r10
    1066:	0e 94 8e 0a 	call	0x151c	; 0x151c <strnlen_P>
    106a:	7c 01       	movw	r14, r24
    106c:	10 68       	ori	r17, 0x80	; 128
    106e:	13 fd       	sbrc	r17, 3
    1070:	1c c0       	rjmp	.+56     	; 0x10aa <vfprintf+0x51c>
    1072:	06 c0       	rjmp	.+12     	; 0x1080 <vfprintf+0x4f2>
    1074:	80 e2       	ldi	r24, 0x20	; 32
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	b4 01       	movw	r22, r8
    107a:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    107e:	da 94       	dec	r13
    1080:	8d 2d       	mov	r24, r13
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	e8 16       	cp	r14, r24
    1086:	f9 06       	cpc	r15, r25
    1088:	a8 f3       	brcs	.-22     	; 0x1074 <vfprintf+0x4e6>
    108a:	0f c0       	rjmp	.+30     	; 0x10aa <vfprintf+0x51c>
    108c:	f5 01       	movw	r30, r10
    108e:	17 fd       	sbrc	r17, 7
    1090:	85 91       	lpm	r24, Z+
    1092:	17 ff       	sbrs	r17, 7
    1094:	81 91       	ld	r24, Z+
    1096:	5f 01       	movw	r10, r30
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	b4 01       	movw	r22, r8
    109c:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    10a0:	d1 10       	cpse	r13, r1
    10a2:	da 94       	dec	r13
    10a4:	08 94       	sec
    10a6:	e1 08       	sbc	r14, r1
    10a8:	f1 08       	sbc	r15, r1
    10aa:	e1 14       	cp	r14, r1
    10ac:	f1 04       	cpc	r15, r1
    10ae:	71 f7       	brne	.-36     	; 0x108c <vfprintf+0x4fe>
    10b0:	ed c0       	rjmp	.+474    	; 0x128c <vfprintf+0x6fe>
    10b2:	84 36       	cpi	r24, 0x64	; 100
    10b4:	11 f0       	breq	.+4      	; 0x10ba <vfprintf+0x52c>
    10b6:	89 36       	cpi	r24, 0x69	; 105
    10b8:	71 f5       	brne	.+92     	; 0x1116 <vfprintf+0x588>
    10ba:	9a 01       	movw	r18, r20
    10bc:	17 ff       	sbrs	r17, 7
    10be:	0a c0       	rjmp	.+20     	; 0x10d4 <vfprintf+0x546>
    10c0:	2c 5f       	subi	r18, 0xFC	; 252
    10c2:	3f 4f       	sbci	r19, 0xFF	; 255
    10c4:	3d 87       	std	Y+13, r19	; 0x0d
    10c6:	2c 87       	std	Y+12, r18	; 0x0c
    10c8:	fa 01       	movw	r30, r20
    10ca:	80 81       	ld	r24, Z
    10cc:	91 81       	ldd	r25, Z+1	; 0x01
    10ce:	a2 81       	ldd	r26, Z+2	; 0x02
    10d0:	b3 81       	ldd	r27, Z+3	; 0x03
    10d2:	0b c0       	rjmp	.+22     	; 0x10ea <vfprintf+0x55c>
    10d4:	2e 5f       	subi	r18, 0xFE	; 254
    10d6:	3f 4f       	sbci	r19, 0xFF	; 255
    10d8:	3d 87       	std	Y+13, r19	; 0x0d
    10da:	2c 87       	std	Y+12, r18	; 0x0c
    10dc:	fa 01       	movw	r30, r20
    10de:	80 81       	ld	r24, Z
    10e0:	91 81       	ldd	r25, Z+1	; 0x01
    10e2:	aa 27       	eor	r26, r26
    10e4:	97 fd       	sbrc	r25, 7
    10e6:	a0 95       	com	r26
    10e8:	ba 2f       	mov	r27, r26
    10ea:	01 2f       	mov	r16, r17
    10ec:	0f 76       	andi	r16, 0x6F	; 111
    10ee:	b7 ff       	sbrs	r27, 7
    10f0:	08 c0       	rjmp	.+16     	; 0x1102 <vfprintf+0x574>
    10f2:	b0 95       	com	r27
    10f4:	a0 95       	com	r26
    10f6:	90 95       	com	r25
    10f8:	81 95       	neg	r24
    10fa:	9f 4f       	sbci	r25, 0xFF	; 255
    10fc:	af 4f       	sbci	r26, 0xFF	; 255
    10fe:	bf 4f       	sbci	r27, 0xFF	; 255
    1100:	00 68       	ori	r16, 0x80	; 128
    1102:	bc 01       	movw	r22, r24
    1104:	cd 01       	movw	r24, r26
    1106:	a1 01       	movw	r20, r2
    1108:	2a e0       	ldi	r18, 0x0A	; 10
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	0e 94 10 0b 	call	0x1620	; 0x1620 <__ultoa_invert>
    1110:	e8 2e       	mov	r14, r24
    1112:	e2 18       	sub	r14, r2
    1114:	41 c0       	rjmp	.+130    	; 0x1198 <vfprintf+0x60a>
    1116:	85 37       	cpi	r24, 0x75	; 117
    1118:	21 f4       	brne	.+8      	; 0x1122 <vfprintf+0x594>
    111a:	1f 7e       	andi	r17, 0xEF	; 239
    111c:	2a e0       	ldi	r18, 0x0A	; 10
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	20 c0       	rjmp	.+64     	; 0x1162 <vfprintf+0x5d4>
    1122:	19 7f       	andi	r17, 0xF9	; 249
    1124:	8f 36       	cpi	r24, 0x6F	; 111
    1126:	a9 f0       	breq	.+42     	; 0x1152 <vfprintf+0x5c4>
    1128:	80 37       	cpi	r24, 0x70	; 112
    112a:	20 f4       	brcc	.+8      	; 0x1134 <vfprintf+0x5a6>
    112c:	88 35       	cpi	r24, 0x58	; 88
    112e:	09 f0       	breq	.+2      	; 0x1132 <vfprintf+0x5a4>
    1130:	b0 c0       	rjmp	.+352    	; 0x1292 <vfprintf+0x704>
    1132:	0b c0       	rjmp	.+22     	; 0x114a <vfprintf+0x5bc>
    1134:	80 37       	cpi	r24, 0x70	; 112
    1136:	21 f0       	breq	.+8      	; 0x1140 <vfprintf+0x5b2>
    1138:	88 37       	cpi	r24, 0x78	; 120
    113a:	09 f0       	breq	.+2      	; 0x113e <vfprintf+0x5b0>
    113c:	aa c0       	rjmp	.+340    	; 0x1292 <vfprintf+0x704>
    113e:	01 c0       	rjmp	.+2      	; 0x1142 <vfprintf+0x5b4>
    1140:	10 61       	ori	r17, 0x10	; 16
    1142:	14 ff       	sbrs	r17, 4
    1144:	09 c0       	rjmp	.+18     	; 0x1158 <vfprintf+0x5ca>
    1146:	14 60       	ori	r17, 0x04	; 4
    1148:	07 c0       	rjmp	.+14     	; 0x1158 <vfprintf+0x5ca>
    114a:	14 ff       	sbrs	r17, 4
    114c:	08 c0       	rjmp	.+16     	; 0x115e <vfprintf+0x5d0>
    114e:	16 60       	ori	r17, 0x06	; 6
    1150:	06 c0       	rjmp	.+12     	; 0x115e <vfprintf+0x5d0>
    1152:	28 e0       	ldi	r18, 0x08	; 8
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	05 c0       	rjmp	.+10     	; 0x1162 <vfprintf+0x5d4>
    1158:	20 e1       	ldi	r18, 0x10	; 16
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <vfprintf+0x5d4>
    115e:	20 e1       	ldi	r18, 0x10	; 16
    1160:	32 e0       	ldi	r19, 0x02	; 2
    1162:	ca 01       	movw	r24, r20
    1164:	17 ff       	sbrs	r17, 7
    1166:	09 c0       	rjmp	.+18     	; 0x117a <vfprintf+0x5ec>
    1168:	04 96       	adiw	r24, 0x04	; 4
    116a:	9d 87       	std	Y+13, r25	; 0x0d
    116c:	8c 87       	std	Y+12, r24	; 0x0c
    116e:	fa 01       	movw	r30, r20
    1170:	60 81       	ld	r22, Z
    1172:	71 81       	ldd	r23, Z+1	; 0x01
    1174:	82 81       	ldd	r24, Z+2	; 0x02
    1176:	93 81       	ldd	r25, Z+3	; 0x03
    1178:	08 c0       	rjmp	.+16     	; 0x118a <vfprintf+0x5fc>
    117a:	02 96       	adiw	r24, 0x02	; 2
    117c:	9d 87       	std	Y+13, r25	; 0x0d
    117e:	8c 87       	std	Y+12, r24	; 0x0c
    1180:	fa 01       	movw	r30, r20
    1182:	60 81       	ld	r22, Z
    1184:	71 81       	ldd	r23, Z+1	; 0x01
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	a1 01       	movw	r20, r2
    118c:	0e 94 10 0b 	call	0x1620	; 0x1620 <__ultoa_invert>
    1190:	e8 2e       	mov	r14, r24
    1192:	e2 18       	sub	r14, r2
    1194:	01 2f       	mov	r16, r17
    1196:	0f 77       	andi	r16, 0x7F	; 127
    1198:	06 ff       	sbrs	r16, 6
    119a:	09 c0       	rjmp	.+18     	; 0x11ae <vfprintf+0x620>
    119c:	0e 7f       	andi	r16, 0xFE	; 254
    119e:	ef 14       	cp	r14, r15
    11a0:	30 f4       	brcc	.+12     	; 0x11ae <vfprintf+0x620>
    11a2:	04 ff       	sbrs	r16, 4
    11a4:	06 c0       	rjmp	.+12     	; 0x11b2 <vfprintf+0x624>
    11a6:	02 fd       	sbrc	r16, 2
    11a8:	04 c0       	rjmp	.+8      	; 0x11b2 <vfprintf+0x624>
    11aa:	0f 7e       	andi	r16, 0xEF	; 239
    11ac:	02 c0       	rjmp	.+4      	; 0x11b2 <vfprintf+0x624>
    11ae:	1e 2d       	mov	r17, r14
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <vfprintf+0x626>
    11b2:	1f 2d       	mov	r17, r15
    11b4:	80 2f       	mov	r24, r16
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	04 ff       	sbrs	r16, 4
    11ba:	0c c0       	rjmp	.+24     	; 0x11d4 <vfprintf+0x646>
    11bc:	fe 01       	movw	r30, r28
    11be:	ee 0d       	add	r30, r14
    11c0:	f1 1d       	adc	r31, r1
    11c2:	20 81       	ld	r18, Z
    11c4:	20 33       	cpi	r18, 0x30	; 48
    11c6:	11 f4       	brne	.+4      	; 0x11cc <vfprintf+0x63e>
    11c8:	09 7e       	andi	r16, 0xE9	; 233
    11ca:	09 c0       	rjmp	.+18     	; 0x11de <vfprintf+0x650>
    11cc:	02 ff       	sbrs	r16, 2
    11ce:	06 c0       	rjmp	.+12     	; 0x11dc <vfprintf+0x64e>
    11d0:	1e 5f       	subi	r17, 0xFE	; 254
    11d2:	05 c0       	rjmp	.+10     	; 0x11de <vfprintf+0x650>
    11d4:	86 78       	andi	r24, 0x86	; 134
    11d6:	90 70       	andi	r25, 0x00	; 0
    11d8:	00 97       	sbiw	r24, 0x00	; 0
    11da:	09 f0       	breq	.+2      	; 0x11de <vfprintf+0x650>
    11dc:	1f 5f       	subi	r17, 0xFF	; 255
    11de:	a0 2e       	mov	r10, r16
    11e0:	bb 24       	eor	r11, r11
    11e2:	03 fd       	sbrc	r16, 3
    11e4:	12 c0       	rjmp	.+36     	; 0x120a <vfprintf+0x67c>
    11e6:	00 ff       	sbrs	r16, 0
    11e8:	0d c0       	rjmp	.+26     	; 0x1204 <vfprintf+0x676>
    11ea:	fe 2c       	mov	r15, r14
    11ec:	1d 15       	cp	r17, r13
    11ee:	50 f4       	brcc	.+20     	; 0x1204 <vfprintf+0x676>
    11f0:	fd 0c       	add	r15, r13
    11f2:	f1 1a       	sub	r15, r17
    11f4:	1d 2d       	mov	r17, r13
    11f6:	06 c0       	rjmp	.+12     	; 0x1204 <vfprintf+0x676>
    11f8:	80 e2       	ldi	r24, 0x20	; 32
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	b4 01       	movw	r22, r8
    11fe:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    1202:	1f 5f       	subi	r17, 0xFF	; 255
    1204:	1d 15       	cp	r17, r13
    1206:	c0 f3       	brcs	.-16     	; 0x11f8 <vfprintf+0x66a>
    1208:	04 c0       	rjmp	.+8      	; 0x1212 <vfprintf+0x684>
    120a:	1d 15       	cp	r17, r13
    120c:	10 f4       	brcc	.+4      	; 0x1212 <vfprintf+0x684>
    120e:	d1 1a       	sub	r13, r17
    1210:	01 c0       	rjmp	.+2      	; 0x1214 <vfprintf+0x686>
    1212:	dd 24       	eor	r13, r13
    1214:	a4 fe       	sbrs	r10, 4
    1216:	0f c0       	rjmp	.+30     	; 0x1236 <vfprintf+0x6a8>
    1218:	80 e3       	ldi	r24, 0x30	; 48
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	b4 01       	movw	r22, r8
    121e:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    1222:	a2 fe       	sbrs	r10, 2
    1224:	1f c0       	rjmp	.+62     	; 0x1264 <vfprintf+0x6d6>
    1226:	a1 fe       	sbrs	r10, 1
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <vfprintf+0x6a2>
    122a:	88 e5       	ldi	r24, 0x58	; 88
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	10 c0       	rjmp	.+32     	; 0x1250 <vfprintf+0x6c2>
    1230:	88 e7       	ldi	r24, 0x78	; 120
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	0d c0       	rjmp	.+26     	; 0x1250 <vfprintf+0x6c2>
    1236:	c5 01       	movw	r24, r10
    1238:	86 78       	andi	r24, 0x86	; 134
    123a:	90 70       	andi	r25, 0x00	; 0
    123c:	00 97       	sbiw	r24, 0x00	; 0
    123e:	91 f0       	breq	.+36     	; 0x1264 <vfprintf+0x6d6>
    1240:	a1 fc       	sbrc	r10, 1
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <vfprintf+0x6ba>
    1244:	80 e2       	ldi	r24, 0x20	; 32
    1246:	01 c0       	rjmp	.+2      	; 0x124a <vfprintf+0x6bc>
    1248:	8b e2       	ldi	r24, 0x2B	; 43
    124a:	07 fd       	sbrc	r16, 7
    124c:	8d e2       	ldi	r24, 0x2D	; 45
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	b4 01       	movw	r22, r8
    1252:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    1256:	06 c0       	rjmp	.+12     	; 0x1264 <vfprintf+0x6d6>
    1258:	80 e3       	ldi	r24, 0x30	; 48
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	b4 01       	movw	r22, r8
    125e:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    1262:	fa 94       	dec	r15
    1264:	ef 14       	cp	r14, r15
    1266:	c0 f3       	brcs	.-16     	; 0x1258 <vfprintf+0x6ca>
    1268:	ea 94       	dec	r14
    126a:	f1 01       	movw	r30, r2
    126c:	ee 0d       	add	r30, r14
    126e:	f1 1d       	adc	r31, r1
    1270:	80 81       	ld	r24, Z
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	b4 01       	movw	r22, r8
    1276:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    127a:	ee 20       	and	r14, r14
    127c:	a9 f7       	brne	.-22     	; 0x1268 <vfprintf+0x6da>
    127e:	06 c0       	rjmp	.+12     	; 0x128c <vfprintf+0x6fe>
    1280:	80 e2       	ldi	r24, 0x20	; 32
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	b4 01       	movw	r22, r8
    1286:	0e 94 ad 0a 	call	0x155a	; 0x155a <fputc>
    128a:	da 94       	dec	r13
    128c:	dd 20       	and	r13, r13
    128e:	c1 f7       	brne	.-16     	; 0x1280 <vfprintf+0x6f2>
    1290:	8e cc       	rjmp	.-1764   	; 0xbae <vfprintf+0x20>
    1292:	f4 01       	movw	r30, r8
    1294:	86 81       	ldd	r24, Z+6	; 0x06
    1296:	97 81       	ldd	r25, Z+7	; 0x07
    1298:	02 c0       	rjmp	.+4      	; 0x129e <vfprintf+0x710>
    129a:	8f ef       	ldi	r24, 0xFF	; 255
    129c:	9f ef       	ldi	r25, 0xFF	; 255
    129e:	65 96       	adiw	r28, 0x15	; 21
    12a0:	e2 e1       	ldi	r30, 0x12	; 18
    12a2:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__epilogue_restores__>

000012a6 <__divmodhi4>:
    12a6:	97 fb       	bst	r25, 7
    12a8:	09 2e       	mov	r0, r25
    12aa:	07 26       	eor	r0, r23
    12ac:	0a d0       	rcall	.+20     	; 0x12c2 <__divmodhi4_neg1>
    12ae:	77 fd       	sbrc	r23, 7
    12b0:	04 d0       	rcall	.+8      	; 0x12ba <__divmodhi4_neg2>
    12b2:	43 d0       	rcall	.+134    	; 0x133a <__udivmodhi4>
    12b4:	06 d0       	rcall	.+12     	; 0x12c2 <__divmodhi4_neg1>
    12b6:	00 20       	and	r0, r0
    12b8:	1a f4       	brpl	.+6      	; 0x12c0 <__divmodhi4_exit>

000012ba <__divmodhi4_neg2>:
    12ba:	70 95       	com	r23
    12bc:	61 95       	neg	r22
    12be:	7f 4f       	sbci	r23, 0xFF	; 255

000012c0 <__divmodhi4_exit>:
    12c0:	08 95       	ret

000012c2 <__divmodhi4_neg1>:
    12c2:	f6 f7       	brtc	.-4      	; 0x12c0 <__divmodhi4_exit>
    12c4:	90 95       	com	r25
    12c6:	81 95       	neg	r24
    12c8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ca:	08 95       	ret

000012cc <__prologue_saves__>:
    12cc:	2f 92       	push	r2
    12ce:	3f 92       	push	r3
    12d0:	4f 92       	push	r4
    12d2:	5f 92       	push	r5
    12d4:	6f 92       	push	r6
    12d6:	7f 92       	push	r7
    12d8:	8f 92       	push	r8
    12da:	9f 92       	push	r9
    12dc:	af 92       	push	r10
    12de:	bf 92       	push	r11
    12e0:	cf 92       	push	r12
    12e2:	df 92       	push	r13
    12e4:	ef 92       	push	r14
    12e6:	ff 92       	push	r15
    12e8:	0f 93       	push	r16
    12ea:	1f 93       	push	r17
    12ec:	cf 93       	push	r28
    12ee:	df 93       	push	r29
    12f0:	cd b7       	in	r28, 0x3d	; 61
    12f2:	de b7       	in	r29, 0x3e	; 62
    12f4:	ca 1b       	sub	r28, r26
    12f6:	db 0b       	sbc	r29, r27
    12f8:	0f b6       	in	r0, 0x3f	; 63
    12fa:	f8 94       	cli
    12fc:	de bf       	out	0x3e, r29	; 62
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	cd bf       	out	0x3d, r28	; 61
    1302:	09 94       	ijmp

00001304 <__epilogue_restores__>:
    1304:	2a 88       	ldd	r2, Y+18	; 0x12
    1306:	39 88       	ldd	r3, Y+17	; 0x11
    1308:	48 88       	ldd	r4, Y+16	; 0x10
    130a:	5f 84       	ldd	r5, Y+15	; 0x0f
    130c:	6e 84       	ldd	r6, Y+14	; 0x0e
    130e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1310:	8c 84       	ldd	r8, Y+12	; 0x0c
    1312:	9b 84       	ldd	r9, Y+11	; 0x0b
    1314:	aa 84       	ldd	r10, Y+10	; 0x0a
    1316:	b9 84       	ldd	r11, Y+9	; 0x09
    1318:	c8 84       	ldd	r12, Y+8	; 0x08
    131a:	df 80       	ldd	r13, Y+7	; 0x07
    131c:	ee 80       	ldd	r14, Y+6	; 0x06
    131e:	fd 80       	ldd	r15, Y+5	; 0x05
    1320:	0c 81       	ldd	r16, Y+4	; 0x04
    1322:	1b 81       	ldd	r17, Y+3	; 0x03
    1324:	aa 81       	ldd	r26, Y+2	; 0x02
    1326:	b9 81       	ldd	r27, Y+1	; 0x01
    1328:	ce 0f       	add	r28, r30
    132a:	d1 1d       	adc	r29, r1
    132c:	0f b6       	in	r0, 0x3f	; 63
    132e:	f8 94       	cli
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	0f be       	out	0x3f, r0	; 63
    1334:	cd bf       	out	0x3d, r28	; 61
    1336:	ed 01       	movw	r28, r26
    1338:	08 95       	ret

0000133a <__udivmodhi4>:
    133a:	aa 1b       	sub	r26, r26
    133c:	bb 1b       	sub	r27, r27
    133e:	51 e1       	ldi	r21, 0x11	; 17
    1340:	07 c0       	rjmp	.+14     	; 0x1350 <__udivmodhi4_ep>

00001342 <__udivmodhi4_loop>:
    1342:	aa 1f       	adc	r26, r26
    1344:	bb 1f       	adc	r27, r27
    1346:	a6 17       	cp	r26, r22
    1348:	b7 07       	cpc	r27, r23
    134a:	10 f0       	brcs	.+4      	; 0x1350 <__udivmodhi4_ep>
    134c:	a6 1b       	sub	r26, r22
    134e:	b7 0b       	sbc	r27, r23

00001350 <__udivmodhi4_ep>:
    1350:	88 1f       	adc	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	5a 95       	dec	r21
    1356:	a9 f7       	brne	.-22     	; 0x1342 <__udivmodhi4_loop>
    1358:	80 95       	com	r24
    135a:	90 95       	com	r25
    135c:	bc 01       	movw	r22, r24
    135e:	cd 01       	movw	r24, r26
    1360:	08 95       	ret

00001362 <abort>:
    1362:	81 e0       	ldi	r24, 0x01	; 1
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	f8 94       	cli
    1368:	0c 94 6e 0b 	jmp	0x16dc	; 0x16dc <_exit>

0000136c <__ftoa_engine>:
    136c:	28 30       	cpi	r18, 0x08	; 8
    136e:	08 f0       	brcs	.+2      	; 0x1372 <__ftoa_engine+0x6>
    1370:	27 e0       	ldi	r18, 0x07	; 7
    1372:	33 27       	eor	r19, r19
    1374:	da 01       	movw	r26, r20
    1376:	99 0f       	add	r25, r25
    1378:	31 1d       	adc	r19, r1
    137a:	87 fd       	sbrc	r24, 7
    137c:	91 60       	ori	r25, 0x01	; 1
    137e:	00 96       	adiw	r24, 0x00	; 0
    1380:	61 05       	cpc	r22, r1
    1382:	71 05       	cpc	r23, r1
    1384:	39 f4       	brne	.+14     	; 0x1394 <__ftoa_engine+0x28>
    1386:	32 60       	ori	r19, 0x02	; 2
    1388:	2e 5f       	subi	r18, 0xFE	; 254
    138a:	3d 93       	st	X+, r19
    138c:	30 e3       	ldi	r19, 0x30	; 48
    138e:	2a 95       	dec	r18
    1390:	e1 f7       	brne	.-8      	; 0x138a <__ftoa_engine+0x1e>
    1392:	08 95       	ret
    1394:	9f 3f       	cpi	r25, 0xFF	; 255
    1396:	30 f0       	brcs	.+12     	; 0x13a4 <__ftoa_engine+0x38>
    1398:	80 38       	cpi	r24, 0x80	; 128
    139a:	71 05       	cpc	r23, r1
    139c:	61 05       	cpc	r22, r1
    139e:	09 f0       	breq	.+2      	; 0x13a2 <__ftoa_engine+0x36>
    13a0:	3c 5f       	subi	r19, 0xFC	; 252
    13a2:	3c 5f       	subi	r19, 0xFC	; 252
    13a4:	3d 93       	st	X+, r19
    13a6:	91 30       	cpi	r25, 0x01	; 1
    13a8:	08 f0       	brcs	.+2      	; 0x13ac <__ftoa_engine+0x40>
    13aa:	80 68       	ori	r24, 0x80	; 128
    13ac:	91 1d       	adc	r25, r1
    13ae:	df 93       	push	r29
    13b0:	cf 93       	push	r28
    13b2:	1f 93       	push	r17
    13b4:	0f 93       	push	r16
    13b6:	ff 92       	push	r15
    13b8:	ef 92       	push	r14
    13ba:	19 2f       	mov	r17, r25
    13bc:	98 7f       	andi	r25, 0xF8	; 248
    13be:	96 95       	lsr	r25
    13c0:	e9 2f       	mov	r30, r25
    13c2:	96 95       	lsr	r25
    13c4:	96 95       	lsr	r25
    13c6:	e9 0f       	add	r30, r25
    13c8:	ff 27       	eor	r31, r31
    13ca:	e6 53       	subi	r30, 0x36	; 54
    13cc:	ff 4f       	sbci	r31, 0xFF	; 255
    13ce:	99 27       	eor	r25, r25
    13d0:	33 27       	eor	r19, r19
    13d2:	ee 24       	eor	r14, r14
    13d4:	ff 24       	eor	r15, r15
    13d6:	a7 01       	movw	r20, r14
    13d8:	e7 01       	movw	r28, r14
    13da:	05 90       	lpm	r0, Z+
    13dc:	08 94       	sec
    13de:	07 94       	ror	r0
    13e0:	28 f4       	brcc	.+10     	; 0x13ec <__ftoa_engine+0x80>
    13e2:	36 0f       	add	r19, r22
    13e4:	e7 1e       	adc	r14, r23
    13e6:	f8 1e       	adc	r15, r24
    13e8:	49 1f       	adc	r20, r25
    13ea:	51 1d       	adc	r21, r1
    13ec:	66 0f       	add	r22, r22
    13ee:	77 1f       	adc	r23, r23
    13f0:	88 1f       	adc	r24, r24
    13f2:	99 1f       	adc	r25, r25
    13f4:	06 94       	lsr	r0
    13f6:	a1 f7       	brne	.-24     	; 0x13e0 <__ftoa_engine+0x74>
    13f8:	05 90       	lpm	r0, Z+
    13fa:	07 94       	ror	r0
    13fc:	28 f4       	brcc	.+10     	; 0x1408 <__ftoa_engine+0x9c>
    13fe:	e7 0e       	add	r14, r23
    1400:	f8 1e       	adc	r15, r24
    1402:	49 1f       	adc	r20, r25
    1404:	56 1f       	adc	r21, r22
    1406:	c1 1d       	adc	r28, r1
    1408:	77 0f       	add	r23, r23
    140a:	88 1f       	adc	r24, r24
    140c:	99 1f       	adc	r25, r25
    140e:	66 1f       	adc	r22, r22
    1410:	06 94       	lsr	r0
    1412:	a1 f7       	brne	.-24     	; 0x13fc <__ftoa_engine+0x90>
    1414:	05 90       	lpm	r0, Z+
    1416:	07 94       	ror	r0
    1418:	28 f4       	brcc	.+10     	; 0x1424 <__ftoa_engine+0xb8>
    141a:	f8 0e       	add	r15, r24
    141c:	49 1f       	adc	r20, r25
    141e:	56 1f       	adc	r21, r22
    1420:	c7 1f       	adc	r28, r23
    1422:	d1 1d       	adc	r29, r1
    1424:	88 0f       	add	r24, r24
    1426:	99 1f       	adc	r25, r25
    1428:	66 1f       	adc	r22, r22
    142a:	77 1f       	adc	r23, r23
    142c:	06 94       	lsr	r0
    142e:	a1 f7       	brne	.-24     	; 0x1418 <__ftoa_engine+0xac>
    1430:	05 90       	lpm	r0, Z+
    1432:	07 94       	ror	r0
    1434:	20 f4       	brcc	.+8      	; 0x143e <__ftoa_engine+0xd2>
    1436:	49 0f       	add	r20, r25
    1438:	56 1f       	adc	r21, r22
    143a:	c7 1f       	adc	r28, r23
    143c:	d8 1f       	adc	r29, r24
    143e:	99 0f       	add	r25, r25
    1440:	66 1f       	adc	r22, r22
    1442:	77 1f       	adc	r23, r23
    1444:	88 1f       	adc	r24, r24
    1446:	06 94       	lsr	r0
    1448:	a9 f7       	brne	.-22     	; 0x1434 <__ftoa_engine+0xc8>
    144a:	84 91       	lpm	r24, Z
    144c:	10 95       	com	r17
    144e:	17 70       	andi	r17, 0x07	; 7
    1450:	41 f0       	breq	.+16     	; 0x1462 <__ftoa_engine+0xf6>
    1452:	d6 95       	lsr	r29
    1454:	c7 95       	ror	r28
    1456:	57 95       	ror	r21
    1458:	47 95       	ror	r20
    145a:	f7 94       	ror	r15
    145c:	e7 94       	ror	r14
    145e:	1a 95       	dec	r17
    1460:	c1 f7       	brne	.-16     	; 0x1452 <__ftoa_engine+0xe6>
    1462:	e0 e7       	ldi	r30, 0x70	; 112
    1464:	f0 e0       	ldi	r31, 0x00	; 0
    1466:	68 94       	set
    1468:	15 90       	lpm	r1, Z+
    146a:	15 91       	lpm	r17, Z+
    146c:	35 91       	lpm	r19, Z+
    146e:	65 91       	lpm	r22, Z+
    1470:	95 91       	lpm	r25, Z+
    1472:	05 90       	lpm	r0, Z+
    1474:	7f e2       	ldi	r23, 0x2F	; 47
    1476:	73 95       	inc	r23
    1478:	e1 18       	sub	r14, r1
    147a:	f1 0a       	sbc	r15, r17
    147c:	43 0b       	sbc	r20, r19
    147e:	56 0b       	sbc	r21, r22
    1480:	c9 0b       	sbc	r28, r25
    1482:	d0 09       	sbc	r29, r0
    1484:	c0 f7       	brcc	.-16     	; 0x1476 <__ftoa_engine+0x10a>
    1486:	e1 0c       	add	r14, r1
    1488:	f1 1e       	adc	r15, r17
    148a:	43 1f       	adc	r20, r19
    148c:	56 1f       	adc	r21, r22
    148e:	c9 1f       	adc	r28, r25
    1490:	d0 1d       	adc	r29, r0
    1492:	7e f4       	brtc	.+30     	; 0x14b2 <__ftoa_engine+0x146>
    1494:	70 33       	cpi	r23, 0x30	; 48
    1496:	11 f4       	brne	.+4      	; 0x149c <__ftoa_engine+0x130>
    1498:	8a 95       	dec	r24
    149a:	e6 cf       	rjmp	.-52     	; 0x1468 <__ftoa_engine+0xfc>
    149c:	e8 94       	clt
    149e:	01 50       	subi	r16, 0x01	; 1
    14a0:	30 f0       	brcs	.+12     	; 0x14ae <__ftoa_engine+0x142>
    14a2:	08 0f       	add	r16, r24
    14a4:	0a f4       	brpl	.+2      	; 0x14a8 <__ftoa_engine+0x13c>
    14a6:	00 27       	eor	r16, r16
    14a8:	02 17       	cp	r16, r18
    14aa:	08 f4       	brcc	.+2      	; 0x14ae <__ftoa_engine+0x142>
    14ac:	20 2f       	mov	r18, r16
    14ae:	23 95       	inc	r18
    14b0:	02 2f       	mov	r16, r18
    14b2:	7a 33       	cpi	r23, 0x3A	; 58
    14b4:	28 f0       	brcs	.+10     	; 0x14c0 <__ftoa_engine+0x154>
    14b6:	79 e3       	ldi	r23, 0x39	; 57
    14b8:	7d 93       	st	X+, r23
    14ba:	2a 95       	dec	r18
    14bc:	e9 f7       	brne	.-6      	; 0x14b8 <__ftoa_engine+0x14c>
    14be:	10 c0       	rjmp	.+32     	; 0x14e0 <__ftoa_engine+0x174>
    14c0:	7d 93       	st	X+, r23
    14c2:	2a 95       	dec	r18
    14c4:	89 f6       	brne	.-94     	; 0x1468 <__ftoa_engine+0xfc>
    14c6:	06 94       	lsr	r0
    14c8:	97 95       	ror	r25
    14ca:	67 95       	ror	r22
    14cc:	37 95       	ror	r19
    14ce:	17 95       	ror	r17
    14d0:	17 94       	ror	r1
    14d2:	e1 18       	sub	r14, r1
    14d4:	f1 0a       	sbc	r15, r17
    14d6:	43 0b       	sbc	r20, r19
    14d8:	56 0b       	sbc	r21, r22
    14da:	c9 0b       	sbc	r28, r25
    14dc:	d0 09       	sbc	r29, r0
    14de:	98 f0       	brcs	.+38     	; 0x1506 <__ftoa_engine+0x19a>
    14e0:	23 95       	inc	r18
    14e2:	7e 91       	ld	r23, -X
    14e4:	73 95       	inc	r23
    14e6:	7a 33       	cpi	r23, 0x3A	; 58
    14e8:	08 f0       	brcs	.+2      	; 0x14ec <__ftoa_engine+0x180>
    14ea:	70 e3       	ldi	r23, 0x30	; 48
    14ec:	7c 93       	st	X, r23
    14ee:	20 13       	cpse	r18, r16
    14f0:	b8 f7       	brcc	.-18     	; 0x14e0 <__ftoa_engine+0x174>
    14f2:	7e 91       	ld	r23, -X
    14f4:	70 61       	ori	r23, 0x10	; 16
    14f6:	7d 93       	st	X+, r23
    14f8:	30 f0       	brcs	.+12     	; 0x1506 <__ftoa_engine+0x19a>
    14fa:	83 95       	inc	r24
    14fc:	71 e3       	ldi	r23, 0x31	; 49
    14fe:	7d 93       	st	X+, r23
    1500:	70 e3       	ldi	r23, 0x30	; 48
    1502:	2a 95       	dec	r18
    1504:	e1 f7       	brne	.-8      	; 0x14fe <__ftoa_engine+0x192>
    1506:	11 24       	eor	r1, r1
    1508:	ef 90       	pop	r14
    150a:	ff 90       	pop	r15
    150c:	0f 91       	pop	r16
    150e:	1f 91       	pop	r17
    1510:	cf 91       	pop	r28
    1512:	df 91       	pop	r29
    1514:	99 27       	eor	r25, r25
    1516:	87 fd       	sbrc	r24, 7
    1518:	90 95       	com	r25
    151a:	08 95       	ret

0000151c <strnlen_P>:
    151c:	fc 01       	movw	r30, r24
    151e:	05 90       	lpm	r0, Z+
    1520:	61 50       	subi	r22, 0x01	; 1
    1522:	70 40       	sbci	r23, 0x00	; 0
    1524:	01 10       	cpse	r0, r1
    1526:	d8 f7       	brcc	.-10     	; 0x151e <strnlen_P+0x2>
    1528:	80 95       	com	r24
    152a:	90 95       	com	r25
    152c:	8e 0f       	add	r24, r30
    152e:	9f 1f       	adc	r25, r31
    1530:	08 95       	ret

00001532 <strcmp>:
    1532:	fb 01       	movw	r30, r22
    1534:	dc 01       	movw	r26, r24
    1536:	8d 91       	ld	r24, X+
    1538:	01 90       	ld	r0, Z+
    153a:	80 19       	sub	r24, r0
    153c:	01 10       	cpse	r0, r1
    153e:	d9 f3       	breq	.-10     	; 0x1536 <strcmp+0x4>
    1540:	99 0b       	sbc	r25, r25
    1542:	08 95       	ret

00001544 <strnlen>:
    1544:	fc 01       	movw	r30, r24
    1546:	61 50       	subi	r22, 0x01	; 1
    1548:	70 40       	sbci	r23, 0x00	; 0
    154a:	01 90       	ld	r0, Z+
    154c:	01 10       	cpse	r0, r1
    154e:	d8 f7       	brcc	.-10     	; 0x1546 <strnlen+0x2>
    1550:	80 95       	com	r24
    1552:	90 95       	com	r25
    1554:	8e 0f       	add	r24, r30
    1556:	9f 1f       	adc	r25, r31
    1558:	08 95       	ret

0000155a <fputc>:
    155a:	0f 93       	push	r16
    155c:	1f 93       	push	r17
    155e:	cf 93       	push	r28
    1560:	df 93       	push	r29
    1562:	8c 01       	movw	r16, r24
    1564:	eb 01       	movw	r28, r22
    1566:	8b 81       	ldd	r24, Y+3	; 0x03
    1568:	81 ff       	sbrs	r24, 1
    156a:	1b c0       	rjmp	.+54     	; 0x15a2 <fputc+0x48>
    156c:	82 ff       	sbrs	r24, 2
    156e:	0d c0       	rjmp	.+26     	; 0x158a <fputc+0x30>
    1570:	2e 81       	ldd	r18, Y+6	; 0x06
    1572:	3f 81       	ldd	r19, Y+7	; 0x07
    1574:	8c 81       	ldd	r24, Y+4	; 0x04
    1576:	9d 81       	ldd	r25, Y+5	; 0x05
    1578:	28 17       	cp	r18, r24
    157a:	39 07       	cpc	r19, r25
    157c:	64 f4       	brge	.+24     	; 0x1596 <fputc+0x3c>
    157e:	e8 81       	ld	r30, Y
    1580:	f9 81       	ldd	r31, Y+1	; 0x01
    1582:	01 93       	st	Z+, r16
    1584:	f9 83       	std	Y+1, r31	; 0x01
    1586:	e8 83       	st	Y, r30
    1588:	06 c0       	rjmp	.+12     	; 0x1596 <fputc+0x3c>
    158a:	e8 85       	ldd	r30, Y+8	; 0x08
    158c:	f9 85       	ldd	r31, Y+9	; 0x09
    158e:	80 2f       	mov	r24, r16
    1590:	09 95       	icall
    1592:	00 97       	sbiw	r24, 0x00	; 0
    1594:	31 f4       	brne	.+12     	; 0x15a2 <fputc+0x48>
    1596:	8e 81       	ldd	r24, Y+6	; 0x06
    1598:	9f 81       	ldd	r25, Y+7	; 0x07
    159a:	01 96       	adiw	r24, 0x01	; 1
    159c:	9f 83       	std	Y+7, r25	; 0x07
    159e:	8e 83       	std	Y+6, r24	; 0x06
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <fputc+0x4c>
    15a2:	0f ef       	ldi	r16, 0xFF	; 255
    15a4:	1f ef       	ldi	r17, 0xFF	; 255
    15a6:	c8 01       	movw	r24, r16
    15a8:	df 91       	pop	r29
    15aa:	cf 91       	pop	r28
    15ac:	1f 91       	pop	r17
    15ae:	0f 91       	pop	r16
    15b0:	08 95       	ret

000015b2 <printf>:
    15b2:	a0 e0       	ldi	r26, 0x00	; 0
    15b4:	b0 e0       	ldi	r27, 0x00	; 0
    15b6:	ef ed       	ldi	r30, 0xDF	; 223
    15b8:	fa e0       	ldi	r31, 0x0A	; 10
    15ba:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__prologue_saves__+0x20>
    15be:	fe 01       	movw	r30, r28
    15c0:	35 96       	adiw	r30, 0x05	; 5
    15c2:	61 91       	ld	r22, Z+
    15c4:	71 91       	ld	r23, Z+
    15c6:	80 91 bc 03 	lds	r24, 0x03BC
    15ca:	90 91 bd 03 	lds	r25, 0x03BD
    15ce:	af 01       	movw	r20, r30
    15d0:	0e 94 c7 05 	call	0xb8e	; 0xb8e <vfprintf>
    15d4:	20 96       	adiw	r28, 0x00	; 0
    15d6:	e2 e0       	ldi	r30, 0x02	; 2
    15d8:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__epilogue_restores__+0x20>

000015dc <sprintf>:
    15dc:	ae e0       	ldi	r26, 0x0E	; 14
    15de:	b0 e0       	ldi	r27, 0x00	; 0
    15e0:	e4 ef       	ldi	r30, 0xF4	; 244
    15e2:	fa e0       	ldi	r31, 0x0A	; 10
    15e4:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <__prologue_saves__+0x1c>
    15e8:	0d 89       	ldd	r16, Y+21	; 0x15
    15ea:	1e 89       	ldd	r17, Y+22	; 0x16
    15ec:	86 e0       	ldi	r24, 0x06	; 6
    15ee:	8c 83       	std	Y+4, r24	; 0x04
    15f0:	1a 83       	std	Y+2, r17	; 0x02
    15f2:	09 83       	std	Y+1, r16	; 0x01
    15f4:	8f ef       	ldi	r24, 0xFF	; 255
    15f6:	9f e7       	ldi	r25, 0x7F	; 127
    15f8:	9e 83       	std	Y+6, r25	; 0x06
    15fa:	8d 83       	std	Y+5, r24	; 0x05
    15fc:	ae 01       	movw	r20, r28
    15fe:	47 5e       	subi	r20, 0xE7	; 231
    1600:	5f 4f       	sbci	r21, 0xFF	; 255
    1602:	ce 01       	movw	r24, r28
    1604:	01 96       	adiw	r24, 0x01	; 1
    1606:	6f 89       	ldd	r22, Y+23	; 0x17
    1608:	78 8d       	ldd	r23, Y+24	; 0x18
    160a:	0e 94 c7 05 	call	0xb8e	; 0xb8e <vfprintf>
    160e:	ef 81       	ldd	r30, Y+7	; 0x07
    1610:	f8 85       	ldd	r31, Y+8	; 0x08
    1612:	e0 0f       	add	r30, r16
    1614:	f1 1f       	adc	r31, r17
    1616:	10 82       	st	Z, r1
    1618:	2e 96       	adiw	r28, 0x0e	; 14
    161a:	e4 e0       	ldi	r30, 0x04	; 4
    161c:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__epilogue_restores__+0x1c>

00001620 <__ultoa_invert>:
    1620:	fa 01       	movw	r30, r20
    1622:	aa 27       	eor	r26, r26
    1624:	28 30       	cpi	r18, 0x08	; 8
    1626:	51 f1       	breq	.+84     	; 0x167c <__ultoa_invert+0x5c>
    1628:	20 31       	cpi	r18, 0x10	; 16
    162a:	81 f1       	breq	.+96     	; 0x168c <__ultoa_invert+0x6c>
    162c:	e8 94       	clt
    162e:	6f 93       	push	r22
    1630:	6e 7f       	andi	r22, 0xFE	; 254
    1632:	6e 5f       	subi	r22, 0xFE	; 254
    1634:	7f 4f       	sbci	r23, 0xFF	; 255
    1636:	8f 4f       	sbci	r24, 0xFF	; 255
    1638:	9f 4f       	sbci	r25, 0xFF	; 255
    163a:	af 4f       	sbci	r26, 0xFF	; 255
    163c:	b1 e0       	ldi	r27, 0x01	; 1
    163e:	3e d0       	rcall	.+124    	; 0x16bc <__ultoa_invert+0x9c>
    1640:	b4 e0       	ldi	r27, 0x04	; 4
    1642:	3c d0       	rcall	.+120    	; 0x16bc <__ultoa_invert+0x9c>
    1644:	67 0f       	add	r22, r23
    1646:	78 1f       	adc	r23, r24
    1648:	89 1f       	adc	r24, r25
    164a:	9a 1f       	adc	r25, r26
    164c:	a1 1d       	adc	r26, r1
    164e:	68 0f       	add	r22, r24
    1650:	79 1f       	adc	r23, r25
    1652:	8a 1f       	adc	r24, r26
    1654:	91 1d       	adc	r25, r1
    1656:	a1 1d       	adc	r26, r1
    1658:	6a 0f       	add	r22, r26
    165a:	71 1d       	adc	r23, r1
    165c:	81 1d       	adc	r24, r1
    165e:	91 1d       	adc	r25, r1
    1660:	a1 1d       	adc	r26, r1
    1662:	20 d0       	rcall	.+64     	; 0x16a4 <__ultoa_invert+0x84>
    1664:	09 f4       	brne	.+2      	; 0x1668 <__ultoa_invert+0x48>
    1666:	68 94       	set
    1668:	3f 91       	pop	r19
    166a:	2a e0       	ldi	r18, 0x0A	; 10
    166c:	26 9f       	mul	r18, r22
    166e:	11 24       	eor	r1, r1
    1670:	30 19       	sub	r19, r0
    1672:	30 5d       	subi	r19, 0xD0	; 208
    1674:	31 93       	st	Z+, r19
    1676:	de f6       	brtc	.-74     	; 0x162e <__ultoa_invert+0xe>
    1678:	cf 01       	movw	r24, r30
    167a:	08 95       	ret
    167c:	46 2f       	mov	r20, r22
    167e:	47 70       	andi	r20, 0x07	; 7
    1680:	40 5d       	subi	r20, 0xD0	; 208
    1682:	41 93       	st	Z+, r20
    1684:	b3 e0       	ldi	r27, 0x03	; 3
    1686:	0f d0       	rcall	.+30     	; 0x16a6 <__ultoa_invert+0x86>
    1688:	c9 f7       	brne	.-14     	; 0x167c <__ultoa_invert+0x5c>
    168a:	f6 cf       	rjmp	.-20     	; 0x1678 <__ultoa_invert+0x58>
    168c:	46 2f       	mov	r20, r22
    168e:	4f 70       	andi	r20, 0x0F	; 15
    1690:	40 5d       	subi	r20, 0xD0	; 208
    1692:	4a 33       	cpi	r20, 0x3A	; 58
    1694:	18 f0       	brcs	.+6      	; 0x169c <__ultoa_invert+0x7c>
    1696:	49 5d       	subi	r20, 0xD9	; 217
    1698:	31 fd       	sbrc	r19, 1
    169a:	40 52       	subi	r20, 0x20	; 32
    169c:	41 93       	st	Z+, r20
    169e:	02 d0       	rcall	.+4      	; 0x16a4 <__ultoa_invert+0x84>
    16a0:	a9 f7       	brne	.-22     	; 0x168c <__ultoa_invert+0x6c>
    16a2:	ea cf       	rjmp	.-44     	; 0x1678 <__ultoa_invert+0x58>
    16a4:	b4 e0       	ldi	r27, 0x04	; 4
    16a6:	a6 95       	lsr	r26
    16a8:	97 95       	ror	r25
    16aa:	87 95       	ror	r24
    16ac:	77 95       	ror	r23
    16ae:	67 95       	ror	r22
    16b0:	ba 95       	dec	r27
    16b2:	c9 f7       	brne	.-14     	; 0x16a6 <__ultoa_invert+0x86>
    16b4:	00 97       	sbiw	r24, 0x00	; 0
    16b6:	61 05       	cpc	r22, r1
    16b8:	71 05       	cpc	r23, r1
    16ba:	08 95       	ret
    16bc:	9b 01       	movw	r18, r22
    16be:	ac 01       	movw	r20, r24
    16c0:	0a 2e       	mov	r0, r26
    16c2:	06 94       	lsr	r0
    16c4:	57 95       	ror	r21
    16c6:	47 95       	ror	r20
    16c8:	37 95       	ror	r19
    16ca:	27 95       	ror	r18
    16cc:	ba 95       	dec	r27
    16ce:	c9 f7       	brne	.-14     	; 0x16c2 <__ultoa_invert+0xa2>
    16d0:	62 0f       	add	r22, r18
    16d2:	73 1f       	adc	r23, r19
    16d4:	84 1f       	adc	r24, r20
    16d6:	95 1f       	adc	r25, r21
    16d8:	a0 1d       	adc	r26, r0
    16da:	08 95       	ret

000016dc <_exit>:
    16dc:	f8 94       	cli

000016de <__stop_program>:
    16de:	ff cf       	rjmp	.-2      	; 0x16de <__stop_program>
