
Besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000472  00800100  00001872  00001906  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001872  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  00800572  00800572  00001d78  2**0
                  ALLOC
  3 .stab         00002a24  00000000  00000000  00001d78  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000779  00000000  00000000  0000479c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  00004f18  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001963  00000000  00000000  000050d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c9  00000000  00000000  00006a3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001101  00000000  00000000  00007404  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003e8  00000000  00000000  00008508  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b4  00000000  00000000  000088f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fdf  00000000  00000000  00008da4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00009d83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__vector_1>
       8:	0c 94 3e 02 	jmp	0x47c	; 0x47c <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1905>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1903>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	15 e0       	ldi	r17, 0x05	; 5
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e2 e7       	ldi	r30, 0x72	; 114
     17e:	f8 e1       	ldi	r31, 0x18	; 24
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 37       	cpi	r26, 0x72	; 114
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	15 e0       	ldi	r17, 0x05	; 5
     18e:	a2 e7       	ldi	r26, 0x72	; 114
     190:	b5 e0       	ldi	r27, 0x05	; 5
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ae 3d       	cpi	r26, 0xDE	; 222
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 65 01 	call	0x2ca	; 0x2ca <main>
     1a0:	0c 94 37 0c 	jmp	0x186e	; 0x186e <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <ADC_init>:


void ADC_init()
{
	// enable the ADC & prescale = 128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
     1a8:	87 e8       	ldi	r24, 0x87	; 135
     1aa:	80 93 7a 00 	sts	0x007A, r24
	DIDR0 = (1<<ADC5D); //!!Disables pin 5? not sure what it does atm
     1ae:	80 e2       	ldi	r24, 0x20	; 32
     1b0:	80 93 7e 00 	sts	0x007E, r24
	
}
     1b4:	08 95       	ret

000001b6 <get_adc_value>:

// Dit was om te kijken of de code wat geoptimaliseerd kon worden
// Geen succes, dus gaat het via 2 aparte get adc's
uint8_t get_adc_value(uint8_t inputPin)
{
	ADCSRA |= (1<<ADSC); // start conversion
     1b6:	ea e7       	ldi	r30, 0x7A	; 122
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	80 64       	ori	r24, 0x40	; 64
     1be:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1c0:	80 81       	ld	r24, Z
     1c2:	86 fd       	sbrc	r24, 6
     1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <get_adc_value+0xa>
	return ADCH; // 8bit resolution, left adjusted
     1c6:	80 91 79 00 	lds	r24, 0x0079
	else{
		ADCSRA |= (1<<ADSC); // start conversion
		loop_until_bit_is_clear(ADCSRA, ADSC);
		return ADCH; // 8bit resolution, left adjusted
	}*/	
}
     1ca:	08 95       	ret

000001cc <get_temp_adc>:




uint8_t get_temp_adc(){
	ADMUX = (1 << REFS0) | (1 << MUX0) | (1 << MUX2); // port A5
     1cc:	85 e4       	ldi	r24, 0x45	; 69
     1ce:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC); // start conversion
     1d2:	ea e7       	ldi	r30, 0x7A	; 122
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	80 64       	ori	r24, 0x40	; 64
     1da:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1dc:	80 81       	ld	r24, Z
     1de:	86 fd       	sbrc	r24, 6
     1e0:	fd cf       	rjmp	.-6      	; 0x1dc <get_temp_adc+0x10>
	return ADC;
     1e2:	80 91 78 00 	lds	r24, 0x0078
     1e6:	90 91 79 00 	lds	r25, 0x0079
}
     1ea:	08 95       	ret

000001ec <get_light_adc>:

uint8_t get_light_adc(){
	ADMUX = (1 << REFS0) | (1 << MUX1)| (1<<ADLAR); // port A2
     1ec:	82 e6       	ldi	r24, 0x62	; 98
     1ee:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC); // start conversion
     1f2:	ea e7       	ldi	r30, 0x7A	; 122
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 81       	ld	r24, Z
     1f8:	80 64       	ori	r24, 0x40	; 64
     1fa:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
     1fc:	80 81       	ld	r24, Z
     1fe:	86 fd       	sbrc	r24, 6
     200:	fd cf       	rjmp	.-6      	; 0x1fc <get_light_adc+0x10>
	return ADCH; // 8bit resolution, left adjusted
     202:	80 91 79 00 	lds	r24, 0x0079
     206:	08 95       	ret

00000208 <init_ports>:

volatile int index = 0;
volatile int extraTime = 0;

void init_ports(void){
	DDRD = 0b11110111; //set PORTD4 as INPUT
     208:	87 ef       	ldi	r24, 0xF7	; 247
     20a:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF; //set PORTB as output
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	84 b9       	out	0x04, r24	; 4
}
     210:	08 95       	ret

00000212 <init_ext_int>:

void init_ext_int(void){
	EICRA =(1<<ISC10); //setting interrupt triggering logic change
     212:	84 e0       	ldi	r24, 0x04	; 4
     214:	80 93 69 00 	sts	0x0069, r24
	EIMSK =(1<<INT1); //enabling interrupt1
     218:	82 e0       	ldi	r24, 0x02	; 2
     21a:	8d bb       	out	0x1d, r24	; 29
	TCCR1A = 0;
     21c:	10 92 80 00 	sts	0x0080, r1
}
     220:	08 95       	ret

00000222 <getTemp>:
	omdat wanneer ik een if else statement gebruikte het niet de 
	gewenste resultaten toonde.
*/
double getTemp(){
	//uint8_t temp = get_adc_value(PC2);
	Volt = get_temp_adc() * 0.0048828125;
     222:	0e 94 e6 00 	call	0x1cc	; 0x1cc <get_temp_adc>
     226:	68 2f       	mov	r22, r24
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	80 e0       	ldi	r24, 0x00	; 0
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	0e 94 c3 05 	call	0xb86	; 0xb86 <__floatsisf>
     232:	20 e0       	ldi	r18, 0x00	; 0
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	40 ea       	ldi	r20, 0xA0	; 160
     238:	5b e3       	ldi	r21, 0x3B	; 59
     23a:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__mulsf3>
     23e:	26 2f       	mov	r18, r22
     240:	37 2f       	mov	r19, r23
     242:	f8 2f       	mov	r31, r24
     244:	e9 2f       	mov	r30, r25
     246:	46 2f       	mov	r20, r22
     248:	57 2f       	mov	r21, r23
     24a:	68 2f       	mov	r22, r24
     24c:	79 2f       	mov	r23, r25
     24e:	40 93 82 05 	sts	0x0582, r20
     252:	50 93 83 05 	sts	0x0583, r21
     256:	60 93 84 05 	sts	0x0584, r22
     25a:	70 93 85 05 	sts	0x0585, r23
	ADCRes = (Volt - 0.5) * 100;
     25e:	82 2f       	mov	r24, r18
     260:	93 2f       	mov	r25, r19
     262:	af 2f       	mov	r26, r31
     264:	be 2f       	mov	r27, r30
     266:	bc 01       	movw	r22, r24
     268:	cd 01       	movw	r24, r26
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	5f e3       	ldi	r21, 0x3F	; 63
     272:	0e 94 5c 05 	call	0xab8	; 0xab8 <__subsf3>
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	48 ec       	ldi	r20, 0xC8	; 200
     27c:	52 e4       	ldi	r21, 0x42	; 66
     27e:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__mulsf3>
     282:	26 2f       	mov	r18, r22
     284:	37 2f       	mov	r19, r23
     286:	f8 2f       	mov	r31, r24
     288:	e9 2f       	mov	r30, r25
     28a:	46 2f       	mov	r20, r22
     28c:	57 2f       	mov	r21, r23
     28e:	68 2f       	mov	r22, r24
     290:	79 2f       	mov	r23, r25
     292:	40 93 ae 05 	sts	0x05AE, r20
     296:	50 93 af 05 	sts	0x05AF, r21
     29a:	60 93 b0 05 	sts	0x05B0, r22
     29e:	70 93 b1 05 	sts	0x05B1, r23
	return ADCRes;
}
     2a2:	82 2f       	mov	r24, r18
     2a4:	93 2f       	mov	r25, r19
     2a6:	af 2f       	mov	r26, r31
     2a8:	be 2f       	mov	r27, r30
     2aa:	bc 01       	movw	r22, r24
     2ac:	cd 01       	movw	r24, r26
     2ae:	08 95       	ret

000002b0 <getLight>:

uint8_t getLight(){
	//uint8_t temp = get_adc_value(PC5);
	uint8_t temp = get_light_adc();
     2b0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <get_light_adc>
	return temp;
}
     2b4:	08 95       	ret

000002b6 <init_timer>:

void init_timer (void){
	//8bittimer
	TCCR0A = (1<< WGM01); // set CTC Bit
     2b6:	82 e0       	ldi	r24, 0x02	; 2
     2b8:	84 bd       	out	0x24, r24	; 36
	OCR0A = 156; // Dit geeft 1/10 miliseconde
     2ba:	9c e9       	ldi	r25, 0x9C	; 156
     2bc:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = (1<< OCIE0A);
     2be:	80 93 6e 00 	sts	0x006E, r24
	
	TCCR0B |= (1 << CS02) | (1 <<CS00); // start at 1024 prescaler
     2c2:	85 b5       	in	r24, 0x25	; 37
     2c4:	85 60       	ori	r24, 0x05	; 5
     2c6:	85 bd       	out	0x25, r24	; 37
	
}
     2c8:	08 95       	ret

000002ca <main>:
	TCCR1A = 0;
}

int main(void)
{
	init_timer();
     2ca:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <init_timer>
	ser_init();
     2ce:	0e 94 da 04 	call	0x9b4	; 0x9b4 <ser_init>
	ADC_init();
     2d2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ADC_init>
	
	init_ports();
     2d6:	0e 94 04 01 	call	0x208	; 0x208 <init_ports>
	init_ext_int();
     2da:	0e 94 09 01 	call	0x212	; 0x212 <init_ext_int>
	
	sei(); // set external interrupt
     2de:	78 94       	sei
	  
	//printf("An interrupt should be occuring every 30 seconds\n");
	
	while(1){
		protocolCom();
		PORTB = (1<<PINB0); //set trigger HIGH
     2e0:	c1 e0       	ldi	r28, 0x01	; 1
	sei(); // set external interrupt
	  
	//printf("An interrupt should be occuring every 30 seconds\n");
	
	while(1){
		protocolCom();
     2e2:	0e 94 4a 03 	call	0x694	; 0x694 <protocolCom>
		PORTB = (1<<PINB0); //set trigger HIGH
     2e6:	c5 b9       	out	0x05, r28	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e8:	8f ef       	ldi	r24, 0xFF	; 255
     2ea:	99 e6       	ldi	r25, 0x69	; 105
     2ec:	a8 e1       	ldi	r26, 0x18	; 24
     2ee:	81 50       	subi	r24, 0x01	; 1
     2f0:	90 40       	sbci	r25, 0x00	; 0
     2f2:	a0 40       	sbci	r26, 0x00	; 0
     2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0x24>
     2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x2e>
     2f8:	00 00       	nop
		_delay_ms(500); //500 ms delay
		PORTB &= ~(1<<PINB0); //set trigger LOW
     2fa:	28 98       	cbi	0x05, 0	; 5
		
		afstand = (pulse * 0.5) * 0.0023;
     2fc:	60 91 7c 05 	lds	r22, 0x057C
     300:	70 91 7d 05 	lds	r23, 0x057D
     304:	80 91 7e 05 	lds	r24, 0x057E
     308:	90 91 7f 05 	lds	r25, 0x057F
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	40 e0       	ldi	r20, 0x00	; 0
     312:	5f e3       	ldi	r21, 0x3F	; 63
     314:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__mulsf3>
     318:	29 e9       	ldi	r18, 0x99	; 153
     31a:	3b eb       	ldi	r19, 0xBB	; 187
     31c:	46 e1       	ldi	r20, 0x16	; 22
     31e:	5b e3       	ldi	r21, 0x3B	; 59
     320:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__mulsf3>
     324:	dc 01       	movw	r26, r24
     326:	cb 01       	movw	r24, r22
     328:	80 93 76 05 	sts	0x0576, r24
     32c:	90 93 77 05 	sts	0x0577, r25
     330:	a0 93 78 05 	sts	0x0578, r26
     334:	b0 93 79 05 	sts	0x0579, r27
     338:	d4 cf       	rjmp	.-88     	; 0x2e2 <main+0x18>

0000033a <__vector_14>:

/*
Timerinterrupt geeft om de 5* seconden een interrupt
https://eleccelerator.com/avr-timer-calculator/
*/
ISR(TIMER0_COMPA_vect){
     33a:	1f 92       	push	r1
     33c:	0f 92       	push	r0
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	0f 92       	push	r0
     342:	11 24       	eor	r1, r1
     344:	2f 93       	push	r18
     346:	3f 93       	push	r19
     348:	4f 93       	push	r20
     34a:	5f 93       	push	r21
     34c:	6f 93       	push	r22
     34e:	7f 93       	push	r23
     350:	8f 93       	push	r24
     352:	9f 93       	push	r25
     354:	af 93       	push	r26
     356:	bf 93       	push	r27
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	ef 93       	push	r30
     35e:	ff 93       	push	r31
	
	extraTime++;
     360:	80 91 72 05 	lds	r24, 0x0572
     364:	90 91 73 05 	lds	r25, 0x0573
     368:	01 96       	adiw	r24, 0x01	; 1
     36a:	90 93 73 05 	sts	0x0573, r25
     36e:	80 93 72 05 	sts	0x0572, r24
	
	if(extraTime>3000){
     372:	80 91 72 05 	lds	r24, 0x0572
     376:	90 91 73 05 	lds	r25, 0x0573
     37a:	2b e0       	ldi	r18, 0x0B	; 11
     37c:	89 3b       	cpi	r24, 0xB9	; 185
     37e:	92 07       	cpc	r25, r18
     380:	0c f4       	brge	.+2      	; 0x384 <__vector_14+0x4a>
     382:	69 c0       	rjmp	.+210    	; 0x456 <__vector_14+0x11c>
		printf("%i temperatuur=% 6.2f\n", index, getTemp());
     384:	c0 91 74 05 	lds	r28, 0x0574
     388:	d0 91 75 05 	lds	r29, 0x0575
     38c:	0e 94 11 01 	call	0x222	; 0x222 <getTemp>
     390:	dc 01       	movw	r26, r24
     392:	cb 01       	movw	r24, r22
     394:	ed b7       	in	r30, 0x3d	; 61
     396:	fe b7       	in	r31, 0x3e	; 62
     398:	38 97       	sbiw	r30, 0x08	; 8
     39a:	0f b6       	in	r0, 0x3f	; 63
     39c:	f8 94       	cli
     39e:	fe bf       	out	0x3e, r31	; 62
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	ed bf       	out	0x3d, r30	; 61
     3a4:	4d b7       	in	r20, 0x3d	; 61
     3a6:	5e b7       	in	r21, 0x3e	; 62
     3a8:	4f 5f       	subi	r20, 0xFF	; 255
     3aa:	5f 4f       	sbci	r21, 0xFF	; 255
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	31 e0       	ldi	r19, 0x01	; 1
     3b0:	32 83       	std	Z+2, r19	; 0x02
     3b2:	21 83       	std	Z+1, r18	; 0x01
     3b4:	fa 01       	movw	r30, r20
     3b6:	d3 83       	std	Z+3, r29	; 0x03
     3b8:	c2 83       	std	Z+2, r28	; 0x02
     3ba:	84 83       	std	Z+4, r24	; 0x04
     3bc:	95 83       	std	Z+5, r25	; 0x05
     3be:	a6 83       	std	Z+6, r26	; 0x06
     3c0:	b7 83       	std	Z+7, r27	; 0x07
     3c2:	0e 94 c4 0b 	call	0x1788	; 0x1788 <printf>
     3c6:	8f e3       	ldi	r24, 0x3F	; 63
     3c8:	9c e9       	ldi	r25, 0x9C	; 156
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <__vector_14+0x90>
     3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <__vector_14+0x96>
     3d0:	00 00       	nop
		_delay_ms(10);
		printf("%i intensiteit=%d\n", index, getLight());
     3d2:	c0 91 74 05 	lds	r28, 0x0574
     3d6:	d0 91 75 05 	lds	r29, 0x0575
     3da:	ad b7       	in	r26, 0x3d	; 61
     3dc:	be b7       	in	r27, 0x3e	; 62
     3de:	18 96       	adiw	r26, 0x08	; 8
     3e0:	0f b6       	in	r0, 0x3f	; 63
     3e2:	f8 94       	cli
     3e4:	be bf       	out	0x3e, r27	; 62
     3e6:	0f be       	out	0x3f, r0	; 63
     3e8:	ad bf       	out	0x3d, r26	; 61
     3ea:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     3ee:	00 d0       	rcall	.+0      	; 0x3f0 <__vector_14+0xb6>
     3f0:	00 d0       	rcall	.+0      	; 0x3f2 <__vector_14+0xb8>
     3f2:	00 d0       	rcall	.+0      	; 0x3f4 <__vector_14+0xba>
     3f4:	ed b7       	in	r30, 0x3d	; 61
     3f6:	fe b7       	in	r31, 0x3e	; 62
     3f8:	31 96       	adiw	r30, 0x01	; 1
     3fa:	27 e1       	ldi	r18, 0x17	; 23
     3fc:	31 e0       	ldi	r19, 0x01	; 1
     3fe:	ad b7       	in	r26, 0x3d	; 61
     400:	be b7       	in	r27, 0x3e	; 62
     402:	12 96       	adiw	r26, 0x02	; 2
     404:	3c 93       	st	X, r19
     406:	2e 93       	st	-X, r18
     408:	11 97       	sbiw	r26, 0x01	; 1
     40a:	d3 83       	std	Z+3, r29	; 0x03
     40c:	c2 83       	std	Z+2, r28	; 0x02
     40e:	84 83       	std	Z+4, r24	; 0x04
     410:	15 82       	std	Z+5, r1	; 0x05
     412:	0e 94 c4 0b 	call	0x1788	; 0x1788 <printf>
		
		if(getLight()> GRENS_LIGHT)
     416:	ed b7       	in	r30, 0x3d	; 61
     418:	fe b7       	in	r31, 0x3e	; 62
     41a:	36 96       	adiw	r30, 0x06	; 6
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	fe bf       	out	0x3e, r31	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	ed bf       	out	0x3d, r30	; 61
     426:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     42a:	90 91 2a 01 	lds	r25, 0x012A
     42e:	98 17       	cp	r25, r24
     430:	18 f4       	brcc	.+6      	; 0x438 <__vector_14+0xfe>
		{
			uitrollen();
     432:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <uitrollen>
     436:	02 c0       	rjmp	.+4      	; 0x43c <__vector_14+0x102>
		}
		else{
			oprollen();
     438:	0e 94 96 02 	call	0x52c	; 0x52c <oprollen>
		}
		
		index++;
     43c:	80 91 74 05 	lds	r24, 0x0574
     440:	90 91 75 05 	lds	r25, 0x0575
     444:	01 96       	adiw	r24, 0x01	; 1
     446:	90 93 75 05 	sts	0x0575, r25
     44a:	80 93 74 05 	sts	0x0574, r24
		
		// Resets de timer en de Totale timer ticks
		extraTime = 0;
     44e:	10 92 73 05 	sts	0x0573, r1
     452:	10 92 72 05 	sts	0x0572, r1
	}
}
     456:	ff 91       	pop	r31
     458:	ef 91       	pop	r30
     45a:	df 91       	pop	r29
     45c:	cf 91       	pop	r28
     45e:	bf 91       	pop	r27
     460:	af 91       	pop	r26
     462:	9f 91       	pop	r25
     464:	8f 91       	pop	r24
     466:	7f 91       	pop	r23
     468:	6f 91       	pop	r22
     46a:	5f 91       	pop	r21
     46c:	4f 91       	pop	r20
     46e:	3f 91       	pop	r19
     470:	2f 91       	pop	r18
     472:	0f 90       	pop	r0
     474:	0f be       	out	0x3f, r0	; 63
     476:	0f 90       	pop	r0
     478:	1f 90       	pop	r1
     47a:	18 95       	reti

0000047c <__vector_2>:

ISR(INT1_vect)
{
     47c:	1f 92       	push	r1
     47e:	0f 92       	push	r0
     480:	0f b6       	in	r0, 0x3f	; 63
     482:	0f 92       	push	r0
     484:	11 24       	eor	r1, r1
     486:	2f 93       	push	r18
     488:	3f 93       	push	r19
     48a:	4f 93       	push	r20
     48c:	5f 93       	push	r21
     48e:	6f 93       	push	r22
     490:	7f 93       	push	r23
     492:	8f 93       	push	r24
     494:	9f 93       	push	r25
     496:	af 93       	push	r26
     498:	bf 93       	push	r27
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	ef 93       	push	r30
     4a0:	ff 93       	push	r31
	if(i == 1)
     4a2:	80 91 7a 05 	lds	r24, 0x057A
     4a6:	90 91 7b 05 	lds	r25, 0x057B
     4aa:	81 30       	cpi	r24, 0x01	; 1
     4ac:	91 05       	cpc	r25, r1
     4ae:	d1 f4       	brne	.+52     	; 0x4e4 <__vector_2+0x68>
	{
		TCCR1B = 0; //Stop counter
     4b0:	10 92 81 00 	sts	0x0081, r1
		pulse = TCNT1; //Write duration (TCNT1) to pulse
     4b4:	c4 e8       	ldi	r28, 0x84	; 132
     4b6:	d0 e0       	ldi	r29, 0x00	; 0
     4b8:	68 81       	ld	r22, Y
     4ba:	79 81       	ldd	r23, Y+1	; 0x01
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 c1 05 	call	0xb82	; 0xb82 <__floatunsisf>
     4c4:	dc 01       	movw	r26, r24
     4c6:	cb 01       	movw	r24, r22
     4c8:	80 93 7c 05 	sts	0x057C, r24
     4cc:	90 93 7d 05 	sts	0x057D, r25
     4d0:	a0 93 7e 05 	sts	0x057E, r26
     4d4:	b0 93 7f 05 	sts	0x057F, r27
		TCNT1 = 0; //Reset duration
     4d8:	19 82       	std	Y+1, r1	; 0x01
     4da:	18 82       	st	Y, r1
		i = 0; //Reset counter
     4dc:	10 92 7b 05 	sts	0x057B, r1
     4e0:	10 92 7a 05 	sts	0x057A, r1
	}

	if(i==0)
     4e4:	80 91 7a 05 	lds	r24, 0x057A
     4e8:	90 91 7b 05 	lds	r25, 0x057B
     4ec:	00 97       	sbiw	r24, 0x00	; 0
     4ee:	59 f4       	brne	.+22     	; 0x506 <__vector_2+0x8a>
	{
		TCCR1B |= (1<<CS10); //Start counter
     4f0:	e1 e8       	ldi	r30, 0x81	; 129
     4f2:	f0 e0       	ldi	r31, 0x00	; 0
     4f4:	80 81       	ld	r24, Z
     4f6:	81 60       	ori	r24, 0x01	; 1
     4f8:	80 83       	st	Z, r24
		i = 1;
     4fa:	81 e0       	ldi	r24, 0x01	; 1
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	90 93 7b 05 	sts	0x057B, r25
     502:	80 93 7a 05 	sts	0x057A, r24
	}
     506:	ff 91       	pop	r31
     508:	ef 91       	pop	r30
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	bf 91       	pop	r27
     510:	af 91       	pop	r26
     512:	9f 91       	pop	r25
     514:	8f 91       	pop	r24
     516:	7f 91       	pop	r23
     518:	6f 91       	pop	r22
     51a:	5f 91       	pop	r21
     51c:	4f 91       	pop	r20
     51e:	3f 91       	pop	r19
     520:	2f 91       	pop	r18
     522:	0f 90       	pop	r0
     524:	0f be       	out	0x3f, r0	; 63
     526:	0f 90       	pop	r0
     528:	1f 90       	pop	r1
     52a:	18 95       	reti

0000052c <oprollen>:
	i = 0;
	ser_writeln("\n\r201 Zonnescherm is uitgerold\n");
	_delay_ms(DELAY_MS);
}

void oprollen(){
     52c:	cf 93       	push	r28
     52e:	df 93       	push	r29
	IN = (IN + 1);
     530:	80 91 d6 05 	lds	r24, 0x05D6
     534:	90 91 d7 05 	lds	r25, 0x05D7
     538:	01 96       	adiw	r24, 0x01	; 1
     53a:	90 93 d7 05 	sts	0x05D7, r25
     53e:	80 93 d6 05 	sts	0x05D6, r24
	OUT = (OUT + 1);
     542:	80 91 80 05 	lds	r24, 0x0580
     546:	90 91 81 05 	lds	r25, 0x0581
     54a:	01 96       	adiw	r24, 0x01	; 1
     54c:	90 93 81 05 	sts	0x0581, r25
     550:	80 93 80 05 	sts	0x0580, r24
	ser_write("250 "); //Geef aan dat het commando is gelukt
     554:	8b e2       	ldi	r24, 0x2B	; 43
     556:	91 e0       	ldi	r25, 0x01	; 1
     558:	0e 94 0a 05 	call	0xa14	; 0xa14 <ser_write>
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
     55c:	2b 98       	cbi	0x05, 3	; 5
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
     55e:	2d 9a       	sbi	0x05, 5	; 5
		PORTB |= _BV(PORTB4);
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
	if (i % 2 == 0){ser_write(".");}
     560:	c0 e3       	ldi	r28, 0x30	; 48
     562:	d1 e0       	ldi	r29, 0x01	; 1
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
	while (i < 25){
     564:	22 c0       	rjmp	.+68     	; 0x5aa <oprollen+0x7e>
		// Laat pin 4 knippen (gele lampje)
		PORTB |= _BV(PORTB4);
     566:	2c 9a       	sbi	0x05, 4	; 5
     568:	8f e3       	ldi	r24, 0x3F	; 63
     56a:	9d e0       	ldi	r25, 0x0D	; 13
     56c:	a3 e0       	ldi	r26, 0x03	; 3
     56e:	81 50       	subi	r24, 0x01	; 1
     570:	90 40       	sbci	r25, 0x00	; 0
     572:	a0 40       	sbci	r26, 0x00	; 0
     574:	e1 f7       	brne	.-8      	; 0x56e <oprollen+0x42>
     576:	00 c0       	rjmp	.+0      	; 0x578 <oprollen+0x4c>
     578:	00 00       	nop
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
     57a:	2c 98       	cbi	0x05, 4	; 5
     57c:	8f e3       	ldi	r24, 0x3F	; 63
     57e:	9d e0       	ldi	r25, 0x0D	; 13
     580:	a3 e0       	ldi	r26, 0x03	; 3
     582:	81 50       	subi	r24, 0x01	; 1
     584:	90 40       	sbci	r25, 0x00	; 0
     586:	a0 40       	sbci	r26, 0x00	; 0
     588:	e1 f7       	brne	.-8      	; 0x582 <oprollen+0x56>
     58a:	00 c0       	rjmp	.+0      	; 0x58c <oprollen+0x60>
     58c:	00 00       	nop
		_delay_ms(DELAY_MS);
		i += 1;
     58e:	80 91 b6 05 	lds	r24, 0x05B6
     592:	90 91 b7 05 	lds	r25, 0x05B7
     596:	01 96       	adiw	r24, 0x01	; 1
     598:	90 93 b7 05 	sts	0x05B7, r25
     59c:	80 93 b6 05 	sts	0x05B6, r24
	if (i % 2 == 0){ser_write(".");}
     5a0:	80 fd       	sbrc	r24, 0
     5a2:	03 c0       	rjmp	.+6      	; 0x5aa <oprollen+0x7e>
     5a4:	ce 01       	movw	r24, r28
     5a6:	0e 94 0a 05 	call	0xa14	; 0xa14 <ser_write>
	// Zet pin 3 uit (rode lampje)
	PORTB &= ~_BV(PORTB3);
	//PORTD = 0x00; //													DELETE AFTER
	// Zet pin 5 aan (groene lampje)
	PORTB |= _BV(PORTB5);
	while (i < 25){
     5aa:	80 91 b6 05 	lds	r24, 0x05B6
     5ae:	90 91 b7 05 	lds	r25, 0x05B7
     5b2:	89 31       	cpi	r24, 0x19	; 25
     5b4:	91 05       	cpc	r25, r1
     5b6:	bc f2       	brlt	.-82     	; 0x566 <oprollen+0x3a>
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
	if (i % 2 == 0){ser_write(".");}
	}
	i = 0;
     5b8:	10 92 b7 05 	sts	0x05B7, r1
     5bc:	10 92 b6 05 	sts	0x05B6, r1
	ser_writeln("\n\r201 Zonnescherm is opgerold\n");
     5c0:	82 e3       	ldi	r24, 0x32	; 50
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
     5c8:	8f e3       	ldi	r24, 0x3F	; 63
     5ca:	9d e0       	ldi	r25, 0x0D	; 13
     5cc:	a3 e0       	ldi	r26, 0x03	; 3
     5ce:	81 50       	subi	r24, 0x01	; 1
     5d0:	90 40       	sbci	r25, 0x00	; 0
     5d2:	a0 40       	sbci	r26, 0x00	; 0
     5d4:	e1 f7       	brne	.-8      	; 0x5ce <oprollen+0xa2>
     5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <oprollen+0xac>
     5d8:	00 00       	nop
	_delay_ms(DELAY_MS);	
}
     5da:	df 91       	pop	r29
     5dc:	cf 91       	pop	r28
     5de:	08 95       	ret

000005e0 <uitrollen>:
				ser_writeln("510 Commando niet gevonden! Type Help voor alle commando's\n");
			}		
}


void uitrollen(){
     5e0:	cf 93       	push	r28
     5e2:	df 93       	push	r29
	OUT = (OUT + 1);
     5e4:	80 91 80 05 	lds	r24, 0x0580
     5e8:	90 91 81 05 	lds	r25, 0x0581
     5ec:	01 96       	adiw	r24, 0x01	; 1
     5ee:	90 93 81 05 	sts	0x0581, r25
     5f2:	80 93 80 05 	sts	0x0580, r24
	IN = (IN + 1);
     5f6:	80 91 d6 05 	lds	r24, 0x05D6
     5fa:	90 91 d7 05 	lds	r25, 0x05D7
     5fe:	01 96       	adiw	r24, 0x01	; 1
     600:	90 93 d7 05 	sts	0x05D7, r25
     604:	80 93 d6 05 	sts	0x05D6, r24
	ser_write("250 "); //Geef aan dat het commando is gelukt
     608:	8b e2       	ldi	r24, 0x2B	; 43
     60a:	91 e0       	ldi	r25, 0x01	; 1
     60c:	0e 94 0a 05 	call	0xa14	; 0xa14 <ser_write>
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
     610:	2d 98       	cbi	0x05, 5	; 5
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
     612:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= _BV(PORTB4);
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
		if (i % 2 == 0){ser_write(".");}
     614:	c0 e3       	ldi	r28, 0x30	; 48
     616:	d1 e0       	ldi	r29, 0x01	; 1
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
	while (i < 25){
     618:	22 c0       	rjmp	.+68     	; 0x65e <uitrollen+0x7e>
		// Laat pin 4 knippen (gele lampje)
		PORTB |= _BV(PORTB4);
     61a:	2c 9a       	sbi	0x05, 4	; 5
     61c:	8f e3       	ldi	r24, 0x3F	; 63
     61e:	9d e0       	ldi	r25, 0x0D	; 13
     620:	a3 e0       	ldi	r26, 0x03	; 3
     622:	81 50       	subi	r24, 0x01	; 1
     624:	90 40       	sbci	r25, 0x00	; 0
     626:	a0 40       	sbci	r26, 0x00	; 0
     628:	e1 f7       	brne	.-8      	; 0x622 <uitrollen+0x42>
     62a:	00 c0       	rjmp	.+0      	; 0x62c <uitrollen+0x4c>
     62c:	00 00       	nop
		_delay_ms(DELAY_MS);
		PORTB &= ~_BV(PORTB4);
     62e:	2c 98       	cbi	0x05, 4	; 5
     630:	8f e3       	ldi	r24, 0x3F	; 63
     632:	9d e0       	ldi	r25, 0x0D	; 13
     634:	a3 e0       	ldi	r26, 0x03	; 3
     636:	81 50       	subi	r24, 0x01	; 1
     638:	90 40       	sbci	r25, 0x00	; 0
     63a:	a0 40       	sbci	r26, 0x00	; 0
     63c:	e1 f7       	brne	.-8      	; 0x636 <uitrollen+0x56>
     63e:	00 c0       	rjmp	.+0      	; 0x640 <uitrollen+0x60>
     640:	00 00       	nop
		_delay_ms(DELAY_MS);
		i += 1;
     642:	80 91 b6 05 	lds	r24, 0x05B6
     646:	90 91 b7 05 	lds	r25, 0x05B7
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	90 93 b7 05 	sts	0x05B7, r25
     650:	80 93 b6 05 	sts	0x05B6, r24
		if (i % 2 == 0){ser_write(".");}
     654:	80 fd       	sbrc	r24, 0
     656:	03 c0       	rjmp	.+6      	; 0x65e <uitrollen+0x7e>
     658:	ce 01       	movw	r24, r28
     65a:	0e 94 0a 05 	call	0xa14	; 0xa14 <ser_write>
	// Zet pin 5 uit (groene lampje)
	PORTB &= ~_BV(PORTB5);
	//PORTD = 0xff; //													DELETE AFTER
	// Zet pin 3 aan (rode lampje)
	PORTB |= _BV(PORTB3);
	while (i < 25){
     65e:	80 91 b6 05 	lds	r24, 0x05B6
     662:	90 91 b7 05 	lds	r25, 0x05B7
     666:	89 31       	cpi	r24, 0x19	; 25
     668:	91 05       	cpc	r25, r1
     66a:	bc f2       	brlt	.-82     	; 0x61a <uitrollen+0x3a>
		PORTB &= ~_BV(PORTB4);
		_delay_ms(DELAY_MS);
		i += 1;
		if (i % 2 == 0){ser_write(".");}
	}
	i = 0;
     66c:	10 92 b7 05 	sts	0x05B7, r1
     670:	10 92 b6 05 	sts	0x05B6, r1
	ser_writeln("\n\r201 Zonnescherm is uitgerold\n");
     674:	81 e5       	ldi	r24, 0x51	; 81
     676:	91 e0       	ldi	r25, 0x01	; 1
     678:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
     67c:	8f e3       	ldi	r24, 0x3F	; 63
     67e:	9d e0       	ldi	r25, 0x0D	; 13
     680:	a3 e0       	ldi	r26, 0x03	; 3
     682:	81 50       	subi	r24, 0x01	; 1
     684:	90 40       	sbci	r25, 0x00	; 0
     686:	a0 40       	sbci	r26, 0x00	; 0
     688:	e1 f7       	brne	.-8      	; 0x682 <uitrollen+0xa2>
     68a:	00 c0       	rjmp	.+0      	; 0x68c <uitrollen+0xac>
     68c:	00 00       	nop
	_delay_ms(DELAY_MS);
}
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <protocolCom>:

int i, IN, OUT = 0; //Voor knipperen van zonnescherm | Voor het kijken of hij uitgerold/opgerold is

char in_buf[30]; // Invoerbuffer

void protocolCom(){
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
	// set pin 3,4,5 of PORTB for output
	DDRB |= _BV(DDB3); 
     698:	23 9a       	sbi	0x04, 3	; 4
	DDRB |= _BV(DDB4); 
     69a:	24 9a       	sbi	0x04, 4	; 4
	DDRB |= _BV(DDB5); 
     69c:	25 9a       	sbi	0x04, 5	; 4
	//DDRD = 0xff; //													DELETE AFTER
	
	//EIMSK = 1 << INT0;//													DELETE AFTER
	EICRA |= 1 << ISC00;
     69e:	e9 e6       	ldi	r30, 0x69	; 105
     6a0:	f0 e0       	ldi	r31, 0x00	; 0
     6a2:	80 81       	ld	r24, Z
     6a4:	81 60       	ori	r24, 0x01	; 1
     6a6:	80 83       	st	Z, r24
	EIFR =  1 << INTF0;
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	8c bb       	out	0x1c, r24	; 28

	// LED op Portb5 aan = Zonnescherm opgerold (rode lampje)
	PORTB |= _BV(PORTB5);
     6ac:	2d 9a       	sbi	0x05, 5	; 5
	//while (1) {
		ser_write("Wat kan ik voor u doen?");
     6ae:	81 e7       	ldi	r24, 0x71	; 113
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	0e 94 0a 05 	call	0xa14	; 0xa14 <ser_write>
		ser_readln(in_buf, sizeof(in_buf), 1);
     6b6:	c8 eb       	ldi	r28, 0xB8	; 184
     6b8:	d5 e0       	ldi	r29, 0x05	; 5
     6ba:	ce 01       	movw	r24, r28
     6bc:	6e e1       	ldi	r22, 0x1E	; 30
     6be:	70 e0       	ldi	r23, 0x00	; 0
     6c0:	41 e0       	ldi	r20, 0x01	; 1
     6c2:	0e 94 22 05 	call	0xa44	; 0xa44 <ser_readln>
/**********************************************************Zonnescherm uitrollen************************************************************/
			if (strcmp("Uitrollen", in_buf) == 0){ //Wanneer uitrollen wordt gerequest
     6c6:	89 e8       	ldi	r24, 0x89	; 137
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	be 01       	movw	r22, r28
     6cc:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     6d0:	28 2f       	mov	r18, r24
     6d2:	39 2f       	mov	r19, r25
     6d4:	21 15       	cp	r18, r1
     6d6:	31 05       	cpc	r19, r1
     6d8:	b1 f4       	brne	.+44     	; 0x706 <protocolCom+0x72>
				if ((OUT % 2) == 1){
     6da:	80 91 80 05 	lds	r24, 0x0580
     6de:	90 91 81 05 	lds	r25, 0x0581
     6e2:	62 e0       	ldi	r22, 0x02	; 2
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	0e 94 3e 0a 	call	0x147c	; 0x147c <__divmodhi4>
     6ea:	81 30       	cpi	r24, 0x01	; 1
     6ec:	91 05       	cpc	r25, r1
     6ee:	21 f4       	brne	.+8      	; 0x6f8 <protocolCom+0x64>
					ser_writeln("Zonnescherm is al uitgerold!");
     6f0:	83 e9       	ldi	r24, 0x93	; 147
     6f2:	91 e0       	ldi	r25, 0x01	; 1
     6f4:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
				} if((OUT % 2) == 0){
     6f8:	80 91 80 05 	lds	r24, 0x0580
     6fc:	80 fd       	sbrc	r24, 0
     6fe:	23 c0       	rjmp	.+70     	; 0x746 <protocolCom+0xb2>
					uitrollen();
     700:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <uitrollen>
     704:	20 c0       	rjmp	.+64     	; 0x746 <protocolCom+0xb2>
				}				
			}
/*---------------------------------------------------------Zonnescherm oprollen------------------------------------------------------------*/ 
			else if(strcmp("Oprollen", in_buf) == 0){
     706:	80 eb       	ldi	r24, 0xB0	; 176
     708:	91 e0       	ldi	r25, 0x01	; 1
     70a:	68 eb       	ldi	r22, 0xB8	; 184
     70c:	75 e0       	ldi	r23, 0x05	; 5
     70e:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     712:	28 2f       	mov	r18, r24
     714:	39 2f       	mov	r19, r25
     716:	21 15       	cp	r18, r1
     718:	31 05       	cpc	r19, r1
     71a:	a9 f4       	brne	.+42     	; 0x746 <protocolCom+0xb2>
				if ((IN % 2) == 0){
     71c:	80 91 d6 05 	lds	r24, 0x05D6
     720:	80 fd       	sbrc	r24, 0
     722:	04 c0       	rjmp	.+8      	; 0x72c <protocolCom+0x98>
					ser_writeln("Zonnescherm is al opgerold!");
     724:	89 eb       	ldi	r24, 0xB9	; 185
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
				} if((IN % 2) == 1){
     72c:	80 91 d6 05 	lds	r24, 0x05D6
     730:	90 91 d7 05 	lds	r25, 0x05D7
     734:	62 e0       	ldi	r22, 0x02	; 2
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	0e 94 3e 0a 	call	0x147c	; 0x147c <__divmodhi4>
     73c:	81 30       	cpi	r24, 0x01	; 1
     73e:	91 05       	cpc	r25, r1
     740:	11 f4       	brne	.+4      	; 0x746 <protocolCom+0xb2>
					oprollen();
     742:	0e 94 96 02 	call	0x52c	; 0x52c <oprollen>
				}				
			} 
/**********************************************************Zonnescherm uitrollen************************************************************/
			if (strcmp("STATUS", in_buf) == 0){ //Wanneer uitrollen wordt gerequest
     746:	85 ed       	ldi	r24, 0xD5	; 213
     748:	91 e0       	ldi	r25, 0x01	; 1
     74a:	68 eb       	ldi	r22, 0xB8	; 184
     74c:	75 e0       	ldi	r23, 0x05	; 5
     74e:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     752:	28 2f       	mov	r18, r24
     754:	39 2f       	mov	r19, r25
     756:	21 15       	cp	r18, r1
     758:	31 05       	cpc	r19, r1
     75a:	09 f4       	brne	.+2      	; 0x75e <protocolCom+0xca>
     75c:	fc c0       	rjmp	.+504    	; 0x956 <__stack+0x57>

			}
/*--------------------------------------------------------Get Temperatuur -----------------------------------------------------------------*/
			else if(strcmp("GET_TEMP", in_buf) == 0){
     75e:	8c ed       	ldi	r24, 0xDC	; 220
     760:	91 e0       	ldi	r25, 0x01	; 1
     762:	68 eb       	ldi	r22, 0xB8	; 184
     764:	75 e0       	ldi	r23, 0x05	; 5
     766:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     76a:	28 2f       	mov	r18, r24
     76c:	39 2f       	mov	r19, r25
     76e:	21 15       	cp	r18, r1
     770:	31 05       	cpc	r19, r1
     772:	99 f4       	brne	.+38     	; 0x79a <protocolCom+0x106>
				printf("202 TEMP= % 6.2f \n", getTemp());
     774:	0e 94 11 01 	call	0x222	; 0x222 <getTemp>
     778:	00 d0       	rcall	.+0      	; 0x77a <protocolCom+0xe6>
     77a:	00 d0       	rcall	.+0      	; 0x77c <protocolCom+0xe8>
     77c:	25 ee       	ldi	r18, 0xE5	; 229
     77e:	31 e0       	ldi	r19, 0x01	; 1
     780:	ed b7       	in	r30, 0x3d	; 61
     782:	fe b7       	in	r31, 0x3e	; 62
     784:	32 83       	std	Z+2, r19	; 0x02
     786:	21 83       	std	Z+1, r18	; 0x01
     788:	94 83       	std	Z+4, r25	; 0x04
     78a:	83 83       	std	Z+3, r24	; 0x03
     78c:	0e 94 c4 0b 	call	0x1788	; 0x1788 <printf>
     790:	0f 90       	pop	r0
     792:	0f 90       	pop	r0
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	de c0       	rjmp	.+444    	; 0x956 <__stack+0x57>
				char ADCOut[24];
				sprintf(ADCOut, "% 6.2f", ADCRes);
				printf("%f", ADCRes);
				ser_write("202 TEMP: "); ser_writeln(ADCOut);*/
			}
			else if(strcmp("GET_GRENS_TEMP", in_buf) == 0){
     79a:	88 ef       	ldi	r24, 0xF8	; 248
     79c:	91 e0       	ldi	r25, 0x01	; 1
     79e:	68 eb       	ldi	r22, 0xB8	; 184
     7a0:	75 e0       	ldi	r23, 0x05	; 5
     7a2:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     7a6:	28 2f       	mov	r18, r24
     7a8:	39 2f       	mov	r19, r25
     7aa:	21 15       	cp	r18, r1
     7ac:	31 05       	cpc	r19, r1
     7ae:	09 f4       	brne	.+2      	; 0x7b2 <protocolCom+0x11e>
     7b0:	d2 c0       	rjmp	.+420    	; 0x956 <__stack+0x57>
				
			}
			else if(strcmp("SET_GRENS_TEMP(Z)", in_buf) == 0){
     7b2:	87 e0       	ldi	r24, 0x07	; 7
     7b4:	92 e0       	ldi	r25, 0x02	; 2
     7b6:	68 eb       	ldi	r22, 0xB8	; 184
     7b8:	75 e0       	ldi	r23, 0x05	; 5
     7ba:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     7be:	28 2f       	mov	r18, r24
     7c0:	39 2f       	mov	r19, r25
     7c2:	21 15       	cp	r18, r1
     7c4:	31 05       	cpc	r19, r1
     7c6:	09 f4       	brne	.+2      	; 0x7ca <protocolCom+0x136>
     7c8:	c6 c0       	rjmp	.+396    	; 0x956 <__stack+0x57>
				
			}
/*----------------------------------------------------------Get Lichtintensiteit---------------------------------------------------------------------*/
			else if(strcmp("GET_LIGHT", in_buf) == 0){
     7ca:	89 e1       	ldi	r24, 0x19	; 25
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	68 eb       	ldi	r22, 0xB8	; 184
     7d0:	75 e0       	ldi	r23, 0x05	; 5
     7d2:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     7d6:	28 2f       	mov	r18, r24
     7d8:	39 2f       	mov	r19, r25
     7da:	21 15       	cp	r18, r1
     7dc:	31 05       	cpc	r19, r1
     7de:	99 f4       	brne	.+38     	; 0x806 <protocolCom+0x172>
				printf("202 LIGHT %i \n", getLight());
     7e0:	0e 94 58 01 	call	0x2b0	; 0x2b0 <getLight>
     7e4:	00 d0       	rcall	.+0      	; 0x7e6 <protocolCom+0x152>
     7e6:	00 d0       	rcall	.+0      	; 0x7e8 <protocolCom+0x154>
     7e8:	23 e2       	ldi	r18, 0x23	; 35
     7ea:	32 e0       	ldi	r19, 0x02	; 2
     7ec:	ed b7       	in	r30, 0x3d	; 61
     7ee:	fe b7       	in	r31, 0x3e	; 62
     7f0:	32 83       	std	Z+2, r19	; 0x02
     7f2:	21 83       	std	Z+1, r18	; 0x01
     7f4:	94 83       	std	Z+4, r25	; 0x04
     7f6:	83 83       	std	Z+3, r24	; 0x03
     7f8:	0e 94 c4 0b 	call	0x1788	; 0x1788 <printf>
     7fc:	0f 90       	pop	r0
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	0f 90       	pop	r0
     804:	a8 c0       	rjmp	.+336    	; 0x956 <__stack+0x57>
			}
			
			else if(strcmp("GET_GRENS_LIGHT", in_buf) == 0){
     806:	82 e3       	ldi	r24, 0x32	; 50
     808:	92 e0       	ldi	r25, 0x02	; 2
     80a:	68 eb       	ldi	r22, 0xB8	; 184
     80c:	75 e0       	ldi	r23, 0x05	; 5
     80e:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     812:	28 2f       	mov	r18, r24
     814:	39 2f       	mov	r19, r25
     816:	21 15       	cp	r18, r1
     818:	31 05       	cpc	r19, r1
     81a:	09 f4       	brne	.+2      	; 0x81e <protocolCom+0x18a>
     81c:	9c c0       	rjmp	.+312    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("SET_GRENS_LIGHT(Z)", in_buf) == 0){
     81e:	82 e4       	ldi	r24, 0x42	; 66
     820:	92 e0       	ldi	r25, 0x02	; 2
     822:	68 eb       	ldi	r22, 0xB8	; 184
     824:	75 e0       	ldi	r23, 0x05	; 5
     826:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     82a:	28 2f       	mov	r18, r24
     82c:	39 2f       	mov	r19, r25
     82e:	21 15       	cp	r18, r1
     830:	31 05       	cpc	r19, r1
     832:	09 f4       	brne	.+2      	; 0x836 <protocolCom+0x1a2>
     834:	90 c0       	rjmp	.+288    	; 0x956 <__stack+0x57>

			}
/*----------------------------------------------------------Afstandsensor---------------------------------------------------------------------*/
			else if(strcmp("GET_MAX_UNROLL", in_buf) == 0){
     836:	85 e5       	ldi	r24, 0x55	; 85
     838:	92 e0       	ldi	r25, 0x02	; 2
     83a:	68 eb       	ldi	r22, 0xB8	; 184
     83c:	75 e0       	ldi	r23, 0x05	; 5
     83e:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     842:	28 2f       	mov	r18, r24
     844:	39 2f       	mov	r19, r25
     846:	21 15       	cp	r18, r1
     848:	31 05       	cpc	r19, r1
     84a:	09 f4       	brne	.+2      	; 0x84e <protocolCom+0x1ba>
     84c:	84 c0       	rjmp	.+264    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("SET_MAX_UNROLL(Z)", in_buf) == 0){
     84e:	84 e6       	ldi	r24, 0x64	; 100
     850:	92 e0       	ldi	r25, 0x02	; 2
     852:	68 eb       	ldi	r22, 0xB8	; 184
     854:	75 e0       	ldi	r23, 0x05	; 5
     856:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     85a:	28 2f       	mov	r18, r24
     85c:	39 2f       	mov	r19, r25
     85e:	21 15       	cp	r18, r1
     860:	31 05       	cpc	r19, r1
     862:	09 f4       	brne	.+2      	; 0x866 <protocolCom+0x1d2>
     864:	78 c0       	rjmp	.+240    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("GET_MIN_UNROLL", in_buf) == 0){
     866:	86 e7       	ldi	r24, 0x76	; 118
     868:	92 e0       	ldi	r25, 0x02	; 2
     86a:	68 eb       	ldi	r22, 0xB8	; 184
     86c:	75 e0       	ldi	r23, 0x05	; 5
     86e:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     872:	28 2f       	mov	r18, r24
     874:	39 2f       	mov	r19, r25
     876:	21 15       	cp	r18, r1
     878:	31 05       	cpc	r19, r1
     87a:	09 f4       	brne	.+2      	; 0x87e <protocolCom+0x1ea>
     87c:	6c c0       	rjmp	.+216    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("SET_MIN_UNROLL(Z)", in_buf) == 0){
     87e:	85 e8       	ldi	r24, 0x85	; 133
     880:	92 e0       	ldi	r25, 0x02	; 2
     882:	68 eb       	ldi	r22, 0xB8	; 184
     884:	75 e0       	ldi	r23, 0x05	; 5
     886:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     88a:	28 2f       	mov	r18, r24
     88c:	39 2f       	mov	r19, r25
     88e:	21 15       	cp	r18, r1
     890:	31 05       	cpc	r19, r1
     892:	09 f4       	brne	.+2      	; 0x896 <protocolCom+0x202>
     894:	60 c0       	rjmp	.+192    	; 0x956 <__stack+0x57>

			}
/*----------------------------------------------------------Information---------------------------------------------------------------------*/
			else if(strcmp("GET_NAME", in_buf) == 0){
     896:	87 e9       	ldi	r24, 0x97	; 151
     898:	92 e0       	ldi	r25, 0x02	; 2
     89a:	68 eb       	ldi	r22, 0xB8	; 184
     89c:	75 e0       	ldi	r23, 0x05	; 5
     89e:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     8a2:	28 2f       	mov	r18, r24
     8a4:	39 2f       	mov	r19, r25
     8a6:	21 15       	cp	r18, r1
     8a8:	31 05       	cpc	r19, r1
     8aa:	09 f4       	brne	.+2      	; 0x8ae <protocolCom+0x21a>
     8ac:	54 c0       	rjmp	.+168    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("SET_NAME", in_buf) == 0){
     8ae:	80 ea       	ldi	r24, 0xA0	; 160
     8b0:	92 e0       	ldi	r25, 0x02	; 2
     8b2:	68 eb       	ldi	r22, 0xB8	; 184
     8b4:	75 e0       	ldi	r23, 0x05	; 5
     8b6:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     8ba:	28 2f       	mov	r18, r24
     8bc:	39 2f       	mov	r19, r25
     8be:	21 15       	cp	r18, r1
     8c0:	31 05       	cpc	r19, r1
     8c2:	09 f4       	brne	.+2      	; 0x8c6 <protocolCom+0x232>
     8c4:	48 c0       	rjmp	.+144    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("GET_LOCATION", in_buf) == 0){
     8c6:	89 ea       	ldi	r24, 0xA9	; 169
     8c8:	92 e0       	ldi	r25, 0x02	; 2
     8ca:	68 eb       	ldi	r22, 0xB8	; 184
     8cc:	75 e0       	ldi	r23, 0x05	; 5
     8ce:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     8d2:	28 2f       	mov	r18, r24
     8d4:	39 2f       	mov	r19, r25
     8d6:	21 15       	cp	r18, r1
     8d8:	31 05       	cpc	r19, r1
     8da:	e9 f1       	breq	.+122    	; 0x956 <__stack+0x57>

			}
			else if(strcmp("SET_LOCATION(Z)", in_buf) == 0){
     8dc:	86 eb       	ldi	r24, 0xB6	; 182
     8de:	92 e0       	ldi	r25, 0x02	; 2
     8e0:	68 eb       	ldi	r22, 0xB8	; 184
     8e2:	75 e0       	ldi	r23, 0x05	; 5
     8e4:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     8e8:	28 2f       	mov	r18, r24
     8ea:	39 2f       	mov	r19, r25
     8ec:	21 15       	cp	r18, r1
     8ee:	31 05       	cpc	r19, r1
     8f0:	91 f1       	breq	.+100    	; 0x956 <__stack+0x57>

			}

/*****************************************************************Exit**********************************************************************/			
			else if(strcmp("Exit", in_buf) == 0){
     8f2:	86 ec       	ldi	r24, 0xC6	; 198
     8f4:	92 e0       	ldi	r25, 0x02	; 2
     8f6:	68 eb       	ldi	r22, 0xB8	; 184
     8f8:	75 e0       	ldi	r23, 0x05	; 5
     8fa:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     8fe:	28 2f       	mov	r18, r24
     900:	39 2f       	mov	r19, r25
     902:	21 15       	cp	r18, r1
     904:	31 05       	cpc	r19, r1
     906:	99 f4       	brne	.+38     	; 0x92e <__stack+0x2f>
				if ((OUT % 2) == 1){
     908:	80 91 80 05 	lds	r24, 0x0580
     90c:	90 91 81 05 	lds	r25, 0x0581
     910:	62 e0       	ldi	r22, 0x02	; 2
     912:	70 e0       	ldi	r23, 0x00	; 0
     914:	0e 94 3e 0a 	call	0x147c	; 0x147c <__divmodhi4>
     918:	81 30       	cpi	r24, 0x01	; 1
     91a:	91 05       	cpc	r25, r1
     91c:	11 f4       	brne	.+4      	; 0x922 <__stack+0x23>
					uitrollen();					
     91e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <uitrollen>
				}
				ser_writeln("221 Bye!"); //Groeting wanneer je het programma sluit
     922:	8b ec       	ldi	r24, 0xCB	; 203
     924:	92 e0       	ldi	r25, 0x02	; 2
     926:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
				abort();
     92a:	0e 94 9c 0a 	call	0x1538	; 0x1538 <abort>
			}

/*----------------------------------------------------------------Help---------------------------------------------------------------------*/
			else if(strcmp("Help", in_buf) == 0){
     92e:	84 ed       	ldi	r24, 0xD4	; 212
     930:	92 e0       	ldi	r25, 0x02	; 2
     932:	68 eb       	ldi	r22, 0xB8	; 184
     934:	75 e0       	ldi	r23, 0x05	; 5
     936:	0e 94 84 0b 	call	0x1708	; 0x1708 <strcmp>
     93a:	28 2f       	mov	r18, r24
     93c:	39 2f       	mov	r19, r25
     93e:	21 15       	cp	r18, r1
     940:	31 05       	cpc	r19, r1
     942:	29 f4       	brne	.+10     	; 0x94e <__stack+0x4f>
				ser_writeln(
     944:	89 ed       	ldi	r24, 0xD9	; 217
     946:	92 e0       	ldi	r25, 0x02	; 2
     948:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
     94c:	04 c0       	rjmp	.+8      	; 0x956 <__stack+0x57>
				"Exit\t\t\tSluit het programma\n"
				);
			}
/*********************************************************Commando niet gevonden************************************************************/		
			else{
				ser_writeln("510 Commando niet gevonden! Type Help voor alle commando's\n");
     94e:	88 e1       	ldi	r24, 0x18	; 24
     950:	95 e0       	ldi	r25, 0x05	; 5
     952:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
			}		
}
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	08 95       	ret

0000095c <__vector_1>:
	ser_writeln("\n\r201 Zonnescherm is opgerold\n");
	_delay_ms(DELAY_MS);	
}

ISR(INT0_vect)
{
     95c:	1f 92       	push	r1
     95e:	0f 92       	push	r0
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	0f 92       	push	r0
     964:	11 24       	eor	r1, r1
     966:	2f 93       	push	r18
     968:	3f 93       	push	r19
     96a:	4f 93       	push	r20
     96c:	5f 93       	push	r21
     96e:	6f 93       	push	r22
     970:	7f 93       	push	r23
     972:	8f 93       	push	r24
     974:	9f 93       	push	r25
     976:	af 93       	push	r26
     978:	bf 93       	push	r27
     97a:	ef 93       	push	r30
     97c:	ff 93       	push	r31
     97e:	83 ed       	ldi	r24, 0xD3	; 211
     980:	90 e3       	ldi	r25, 0x30	; 48
     982:	01 97       	sbiw	r24, 0x01	; 1
     984:	f1 f7       	brne	.-4      	; 0x982 <__vector_1+0x26>
     986:	00 c0       	rjmp	.+0      	; 0x988 <__vector_1+0x2c>
     988:	00 00       	nop
	_delay_ms(50);
	ser_writeln("Interupt werk!");
     98a:	84 e5       	ldi	r24, 0x54	; 84
     98c:	95 e0       	ldi	r25, 0x05	; 5
     98e:	0e 94 19 05 	call	0xa32	; 0xa32 <ser_writeln>
     992:	ff 91       	pop	r31
     994:	ef 91       	pop	r30
     996:	bf 91       	pop	r27
     998:	af 91       	pop	r26
     99a:	9f 91       	pop	r25
     99c:	8f 91       	pop	r24
     99e:	7f 91       	pop	r23
     9a0:	6f 91       	pop	r22
     9a2:	5f 91       	pop	r21
     9a4:	4f 91       	pop	r20
     9a6:	3f 91       	pop	r19
     9a8:	2f 91       	pop	r18
     9aa:	0f 90       	pop	r0
     9ac:	0f be       	out	0x3f, r0	; 63
     9ae:	0f 90       	pop	r0
     9b0:	1f 90       	pop	r1
     9b2:	18 95       	reti

000009b4 <ser_init>:

FILE uart_output = FDEV_SETUP_STREAM(ser_stdio_putchar, NULL, _FDEV_SETUP_WRITE);

void ser_init() {
	// set the baud rate
	UBRR0H = 0;
     9b4:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
     9b8:	83 e3       	ldi	r24, 0x33	; 51
     9ba:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
     9be:	10 92 c0 00 	sts	0x00C0, r1
	// enable TX and RX
	UCSR0B = _BV(TXEN0) | _BV(RXEN0);
     9c2:	88 e1       	ldi	r24, 0x18	; 24
     9c4:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
     9c8:	86 e0       	ldi	r24, 0x06	; 6
     9ca:	80 93 c2 00 	sts	0x00C2, r24
	// Setup stdout
	stdout=&uart_output;
     9ce:	83 e6       	ldi	r24, 0x63	; 99
     9d0:	95 e0       	ldi	r25, 0x05	; 5
     9d2:	90 93 db 05 	sts	0x05DB, r25
     9d6:	80 93 da 05 	sts	0x05DA, r24
}
     9da:	08 95       	ret

000009dc <ser_transmit>:

// Low level transmit
void ser_transmit(uint8_t data) {
	// wait for an empty transmit buffer
	// UDRE is set when the transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
     9dc:	e0 ec       	ldi	r30, 0xC0	; 192
     9de:	f0 e0       	ldi	r31, 0x00	; 0
     9e0:	90 81       	ld	r25, Z
     9e2:	95 ff       	sbrs	r25, 5
     9e4:	fd cf       	rjmp	.-6      	; 0x9e0 <ser_transmit+0x4>
	// send the data
	UDR0 = data;
     9e6:	80 93 c6 00 	sts	0x00C6, r24
}
     9ea:	08 95       	ret

000009ec <ser_stdio_putchar>:
// output on USB = PD1 = board pin 1
// datasheet p.190; F_OSC = 16 MHz & baud rate = 19.200
#define UBBRVAL 51

// Getchar en putchar tbv. stdio.h
void ser_stdio_putchar(char c, FILE *stream) {
     9ec:	cf 93       	push	r28
     9ee:	c8 2f       	mov	r28, r24
	if (c=='\n') {
     9f0:	8a 30       	cpi	r24, 0x0A	; 10
     9f2:	19 f4       	brne	.+6      	; 0x9fa <ser_stdio_putchar+0xe>
		ser_transmit('\r');
     9f4:	8d e0       	ldi	r24, 0x0D	; 13
     9f6:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>
	}
	ser_transmit(c);
     9fa:	8c 2f       	mov	r24, r28
     9fc:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>
}
     a00:	cf 91       	pop	r28
     a02:	08 95       	ret

00000a04 <ser_receive>:
	UDR0 = data;
}

// Low level receive
uint8_t ser_receive() {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
     a04:	e0 ec       	ldi	r30, 0xC0	; 192
     a06:	f0 e0       	ldi	r31, 0x00	; 0
     a08:	80 81       	ld	r24, Z
     a0a:	88 23       	and	r24, r24
     a0c:	ec f7       	brge	.-6      	; 0xa08 <ser_receive+0x4>
	return UDR0;
     a0e:	80 91 c6 00 	lds	r24, 0x00C6
}
     a12:	08 95       	ret

00000a14 <ser_write>:

// Hele regel schrijven

void ser_write(char *s) {
     a14:	cf 93       	push	r28
     a16:	df 93       	push	r29
     a18:	ec 01       	movw	r28, r24
	int i=0;
	while (s[i]!='\0') {
     a1a:	88 81       	ld	r24, Y
     a1c:	88 23       	and	r24, r24
     a1e:	31 f0       	breq	.+12     	; 0xa2c <ser_write+0x18>
	return UDR0;
}

// Hele regel schrijven

void ser_write(char *s) {
     a20:	21 96       	adiw	r28, 0x01	; 1
	int i=0;
	while (s[i]!='\0') {
		ser_transmit(s[i++]);
     a22:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>

// Hele regel schrijven

void ser_write(char *s) {
	int i=0;
	while (s[i]!='\0') {
     a26:	89 91       	ld	r24, Y+
     a28:	88 23       	and	r24, r24
     a2a:	d9 f7       	brne	.-10     	; 0xa22 <ser_write+0xe>
		ser_transmit(s[i++]);
	}
}
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	08 95       	ret

00000a32 <ser_writeln>:

void ser_writeln(char* s) {
	ser_write(s);
     a32:	0e 94 0a 05 	call	0xa14	; 0xa14 <ser_write>
	ser_transmit('\r');
     a36:	8d e0       	ldi	r24, 0x0D	; 13
     a38:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>
	ser_transmit('\n');
     a3c:	8a e0       	ldi	r24, 0x0A	; 10
     a3e:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>
}
     a42:	08 95       	ret

00000a44 <ser_readln>:

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
     a44:	af 92       	push	r10
     a46:	bf 92       	push	r11
     a48:	cf 92       	push	r12
     a4a:	df 92       	push	r13
     a4c:	ef 92       	push	r14
     a4e:	ff 92       	push	r15
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	5c 01       	movw	r10, r24
     a5a:	d4 2f       	mov	r29, r20
	int i=0;
     a5c:	6c 01       	movw	r12, r24
     a5e:	ee 24       	eor	r14, r14
     a60:	ff 24       	eor	r15, r15
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     a62:	8b 01       	movw	r16, r22
     a64:	01 50       	subi	r16, 0x01	; 1
     a66:	10 40       	sbci	r17, 0x00	; 0

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;
	while(1) {
		uint8_t c = ser_receive();
     a68:	0e 94 02 05 	call	0xa04	; 0xa04 <ser_receive>
     a6c:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
     a6e:	dd 23       	and	r29, r29
     a70:	11 f0       	breq	.+4      	; 0xa76 <ser_readln+0x32>
     a72:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>
		if (c=='\r') {
     a76:	cd 30       	cpi	r28, 0x0D	; 13
     a78:	31 f4       	brne	.+12     	; 0xa86 <ser_readln+0x42>
			if (echo) ser_transmit('\n');
     a7a:	dd 23       	and	r29, r29
     a7c:	71 f0       	breq	.+28     	; 0xa9a <ser_readln+0x56>
     a7e:	8a e0       	ldi	r24, 0x0A	; 10
     a80:	0e 94 ee 04 	call	0x9dc	; 0x9dc <ser_transmit>
     a84:	0a c0       	rjmp	.+20     	; 0xa9a <ser_readln+0x56>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     a86:	e0 16       	cp	r14, r16
     a88:	f1 06       	cpc	r15, r17
     a8a:	74 f7       	brge	.-36     	; 0xa68 <ser_readln+0x24>
			buf[i++]=c;
     a8c:	f6 01       	movw	r30, r12
     a8e:	c1 93       	st	Z+, r28
     a90:	6f 01       	movw	r12, r30
     a92:	08 94       	sec
     a94:	e1 1c       	adc	r14, r1
     a96:	f1 1c       	adc	r15, r1
     a98:	e7 cf       	rjmp	.-50     	; 0xa68 <ser_readln+0x24>
		}
	}
	buf[i]='\0';
     a9a:	ea 0c       	add	r14, r10
     a9c:	fb 1c       	adc	r15, r11
     a9e:	f7 01       	movw	r30, r14
     aa0:	10 82       	st	Z, r1
}
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	1f 91       	pop	r17
     aa8:	0f 91       	pop	r16
     aaa:	ff 90       	pop	r15
     aac:	ef 90       	pop	r14
     aae:	df 90       	pop	r13
     ab0:	cf 90       	pop	r12
     ab2:	bf 90       	pop	r11
     ab4:	af 90       	pop	r10
     ab6:	08 95       	ret

00000ab8 <__subsf3>:
     ab8:	50 58       	subi	r21, 0x80	; 128

00000aba <__addsf3>:
     aba:	bb 27       	eor	r27, r27
     abc:	aa 27       	eor	r26, r26
     abe:	0e d0       	rcall	.+28     	; 0xadc <__addsf3x>
     ac0:	b4 c0       	rjmp	.+360    	; 0xc2a <__fp_round>
     ac2:	a5 d0       	rcall	.+330    	; 0xc0e <__fp_pscA>
     ac4:	30 f0       	brcs	.+12     	; 0xad2 <__addsf3+0x18>
     ac6:	aa d0       	rcall	.+340    	; 0xc1c <__fp_pscB>
     ac8:	20 f0       	brcs	.+8      	; 0xad2 <__addsf3+0x18>
     aca:	31 f4       	brne	.+12     	; 0xad8 <__addsf3+0x1e>
     acc:	9f 3f       	cpi	r25, 0xFF	; 255
     ace:	11 f4       	brne	.+4      	; 0xad4 <__addsf3+0x1a>
     ad0:	1e f4       	brtc	.+6      	; 0xad8 <__addsf3+0x1e>
     ad2:	9a c0       	rjmp	.+308    	; 0xc08 <__fp_nan>
     ad4:	0e f4       	brtc	.+2      	; 0xad8 <__addsf3+0x1e>
     ad6:	e0 95       	com	r30
     ad8:	e7 fb       	bst	r30, 7
     ada:	90 c0       	rjmp	.+288    	; 0xbfc <__fp_inf>

00000adc <__addsf3x>:
     adc:	e9 2f       	mov	r30, r25
     ade:	b6 d0       	rcall	.+364    	; 0xc4c <__fp_split3>
     ae0:	80 f3       	brcs	.-32     	; 0xac2 <__addsf3+0x8>
     ae2:	ba 17       	cp	r27, r26
     ae4:	62 07       	cpc	r22, r18
     ae6:	73 07       	cpc	r23, r19
     ae8:	84 07       	cpc	r24, r20
     aea:	95 07       	cpc	r25, r21
     aec:	18 f0       	brcs	.+6      	; 0xaf4 <__addsf3x+0x18>
     aee:	71 f4       	brne	.+28     	; 0xb0c <__addsf3x+0x30>
     af0:	9e f5       	brtc	.+102    	; 0xb58 <__addsf3x+0x7c>
     af2:	ce c0       	rjmp	.+412    	; 0xc90 <__fp_zero>
     af4:	0e f4       	brtc	.+2      	; 0xaf8 <__addsf3x+0x1c>
     af6:	e0 95       	com	r30
     af8:	0b 2e       	mov	r0, r27
     afa:	ba 2f       	mov	r27, r26
     afc:	a0 2d       	mov	r26, r0
     afe:	0b 01       	movw	r0, r22
     b00:	b9 01       	movw	r22, r18
     b02:	90 01       	movw	r18, r0
     b04:	0c 01       	movw	r0, r24
     b06:	ca 01       	movw	r24, r20
     b08:	a0 01       	movw	r20, r0
     b0a:	11 24       	eor	r1, r1
     b0c:	ff 27       	eor	r31, r31
     b0e:	59 1b       	sub	r21, r25
     b10:	99 f0       	breq	.+38     	; 0xb38 <__addsf3x+0x5c>
     b12:	59 3f       	cpi	r21, 0xF9	; 249
     b14:	50 f4       	brcc	.+20     	; 0xb2a <__addsf3x+0x4e>
     b16:	50 3e       	cpi	r21, 0xE0	; 224
     b18:	68 f1       	brcs	.+90     	; 0xb74 <__addsf3x+0x98>
     b1a:	1a 16       	cp	r1, r26
     b1c:	f0 40       	sbci	r31, 0x00	; 0
     b1e:	a2 2f       	mov	r26, r18
     b20:	23 2f       	mov	r18, r19
     b22:	34 2f       	mov	r19, r20
     b24:	44 27       	eor	r20, r20
     b26:	58 5f       	subi	r21, 0xF8	; 248
     b28:	f3 cf       	rjmp	.-26     	; 0xb10 <__addsf3x+0x34>
     b2a:	46 95       	lsr	r20
     b2c:	37 95       	ror	r19
     b2e:	27 95       	ror	r18
     b30:	a7 95       	ror	r26
     b32:	f0 40       	sbci	r31, 0x00	; 0
     b34:	53 95       	inc	r21
     b36:	c9 f7       	brne	.-14     	; 0xb2a <__addsf3x+0x4e>
     b38:	7e f4       	brtc	.+30     	; 0xb58 <__addsf3x+0x7c>
     b3a:	1f 16       	cp	r1, r31
     b3c:	ba 0b       	sbc	r27, r26
     b3e:	62 0b       	sbc	r22, r18
     b40:	73 0b       	sbc	r23, r19
     b42:	84 0b       	sbc	r24, r20
     b44:	ba f0       	brmi	.+46     	; 0xb74 <__addsf3x+0x98>
     b46:	91 50       	subi	r25, 0x01	; 1
     b48:	a1 f0       	breq	.+40     	; 0xb72 <__addsf3x+0x96>
     b4a:	ff 0f       	add	r31, r31
     b4c:	bb 1f       	adc	r27, r27
     b4e:	66 1f       	adc	r22, r22
     b50:	77 1f       	adc	r23, r23
     b52:	88 1f       	adc	r24, r24
     b54:	c2 f7       	brpl	.-16     	; 0xb46 <__addsf3x+0x6a>
     b56:	0e c0       	rjmp	.+28     	; 0xb74 <__addsf3x+0x98>
     b58:	ba 0f       	add	r27, r26
     b5a:	62 1f       	adc	r22, r18
     b5c:	73 1f       	adc	r23, r19
     b5e:	84 1f       	adc	r24, r20
     b60:	48 f4       	brcc	.+18     	; 0xb74 <__addsf3x+0x98>
     b62:	87 95       	ror	r24
     b64:	77 95       	ror	r23
     b66:	67 95       	ror	r22
     b68:	b7 95       	ror	r27
     b6a:	f7 95       	ror	r31
     b6c:	9e 3f       	cpi	r25, 0xFE	; 254
     b6e:	08 f0       	brcs	.+2      	; 0xb72 <__addsf3x+0x96>
     b70:	b3 cf       	rjmp	.-154    	; 0xad8 <__addsf3+0x1e>
     b72:	93 95       	inc	r25
     b74:	88 0f       	add	r24, r24
     b76:	08 f0       	brcs	.+2      	; 0xb7a <__addsf3x+0x9e>
     b78:	99 27       	eor	r25, r25
     b7a:	ee 0f       	add	r30, r30
     b7c:	97 95       	ror	r25
     b7e:	87 95       	ror	r24
     b80:	08 95       	ret

00000b82 <__floatunsisf>:
     b82:	e8 94       	clt
     b84:	09 c0       	rjmp	.+18     	; 0xb98 <__floatsisf+0x12>

00000b86 <__floatsisf>:
     b86:	97 fb       	bst	r25, 7
     b88:	3e f4       	brtc	.+14     	; 0xb98 <__floatsisf+0x12>
     b8a:	90 95       	com	r25
     b8c:	80 95       	com	r24
     b8e:	70 95       	com	r23
     b90:	61 95       	neg	r22
     b92:	7f 4f       	sbci	r23, 0xFF	; 255
     b94:	8f 4f       	sbci	r24, 0xFF	; 255
     b96:	9f 4f       	sbci	r25, 0xFF	; 255
     b98:	99 23       	and	r25, r25
     b9a:	a9 f0       	breq	.+42     	; 0xbc6 <__floatsisf+0x40>
     b9c:	f9 2f       	mov	r31, r25
     b9e:	96 e9       	ldi	r25, 0x96	; 150
     ba0:	bb 27       	eor	r27, r27
     ba2:	93 95       	inc	r25
     ba4:	f6 95       	lsr	r31
     ba6:	87 95       	ror	r24
     ba8:	77 95       	ror	r23
     baa:	67 95       	ror	r22
     bac:	b7 95       	ror	r27
     bae:	f1 11       	cpse	r31, r1
     bb0:	f8 cf       	rjmp	.-16     	; 0xba2 <__floatsisf+0x1c>
     bb2:	fa f4       	brpl	.+62     	; 0xbf2 <__floatsisf+0x6c>
     bb4:	bb 0f       	add	r27, r27
     bb6:	11 f4       	brne	.+4      	; 0xbbc <__floatsisf+0x36>
     bb8:	60 ff       	sbrs	r22, 0
     bba:	1b c0       	rjmp	.+54     	; 0xbf2 <__floatsisf+0x6c>
     bbc:	6f 5f       	subi	r22, 0xFF	; 255
     bbe:	7f 4f       	sbci	r23, 0xFF	; 255
     bc0:	8f 4f       	sbci	r24, 0xFF	; 255
     bc2:	9f 4f       	sbci	r25, 0xFF	; 255
     bc4:	16 c0       	rjmp	.+44     	; 0xbf2 <__floatsisf+0x6c>
     bc6:	88 23       	and	r24, r24
     bc8:	11 f0       	breq	.+4      	; 0xbce <__floatsisf+0x48>
     bca:	96 e9       	ldi	r25, 0x96	; 150
     bcc:	11 c0       	rjmp	.+34     	; 0xbf0 <__floatsisf+0x6a>
     bce:	77 23       	and	r23, r23
     bd0:	21 f0       	breq	.+8      	; 0xbda <__floatsisf+0x54>
     bd2:	9e e8       	ldi	r25, 0x8E	; 142
     bd4:	87 2f       	mov	r24, r23
     bd6:	76 2f       	mov	r23, r22
     bd8:	05 c0       	rjmp	.+10     	; 0xbe4 <__floatsisf+0x5e>
     bda:	66 23       	and	r22, r22
     bdc:	71 f0       	breq	.+28     	; 0xbfa <__floatsisf+0x74>
     bde:	96 e8       	ldi	r25, 0x86	; 134
     be0:	86 2f       	mov	r24, r22
     be2:	70 e0       	ldi	r23, 0x00	; 0
     be4:	60 e0       	ldi	r22, 0x00	; 0
     be6:	2a f0       	brmi	.+10     	; 0xbf2 <__floatsisf+0x6c>
     be8:	9a 95       	dec	r25
     bea:	66 0f       	add	r22, r22
     bec:	77 1f       	adc	r23, r23
     bee:	88 1f       	adc	r24, r24
     bf0:	da f7       	brpl	.-10     	; 0xbe8 <__floatsisf+0x62>
     bf2:	88 0f       	add	r24, r24
     bf4:	96 95       	lsr	r25
     bf6:	87 95       	ror	r24
     bf8:	97 f9       	bld	r25, 7
     bfa:	08 95       	ret

00000bfc <__fp_inf>:
     bfc:	97 f9       	bld	r25, 7
     bfe:	9f 67       	ori	r25, 0x7F	; 127
     c00:	80 e8       	ldi	r24, 0x80	; 128
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	08 95       	ret

00000c08 <__fp_nan>:
     c08:	9f ef       	ldi	r25, 0xFF	; 255
     c0a:	80 ec       	ldi	r24, 0xC0	; 192
     c0c:	08 95       	ret

00000c0e <__fp_pscA>:
     c0e:	00 24       	eor	r0, r0
     c10:	0a 94       	dec	r0
     c12:	16 16       	cp	r1, r22
     c14:	17 06       	cpc	r1, r23
     c16:	18 06       	cpc	r1, r24
     c18:	09 06       	cpc	r0, r25
     c1a:	08 95       	ret

00000c1c <__fp_pscB>:
     c1c:	00 24       	eor	r0, r0
     c1e:	0a 94       	dec	r0
     c20:	12 16       	cp	r1, r18
     c22:	13 06       	cpc	r1, r19
     c24:	14 06       	cpc	r1, r20
     c26:	05 06       	cpc	r0, r21
     c28:	08 95       	ret

00000c2a <__fp_round>:
     c2a:	09 2e       	mov	r0, r25
     c2c:	03 94       	inc	r0
     c2e:	00 0c       	add	r0, r0
     c30:	11 f4       	brne	.+4      	; 0xc36 <__fp_round+0xc>
     c32:	88 23       	and	r24, r24
     c34:	52 f0       	brmi	.+20     	; 0xc4a <__fp_round+0x20>
     c36:	bb 0f       	add	r27, r27
     c38:	40 f4       	brcc	.+16     	; 0xc4a <__fp_round+0x20>
     c3a:	bf 2b       	or	r27, r31
     c3c:	11 f4       	brne	.+4      	; 0xc42 <__fp_round+0x18>
     c3e:	60 ff       	sbrs	r22, 0
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <__fp_round+0x20>
     c42:	6f 5f       	subi	r22, 0xFF	; 255
     c44:	7f 4f       	sbci	r23, 0xFF	; 255
     c46:	8f 4f       	sbci	r24, 0xFF	; 255
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	08 95       	ret

00000c4c <__fp_split3>:
     c4c:	57 fd       	sbrc	r21, 7
     c4e:	90 58       	subi	r25, 0x80	; 128
     c50:	44 0f       	add	r20, r20
     c52:	55 1f       	adc	r21, r21
     c54:	59 f0       	breq	.+22     	; 0xc6c <__fp_splitA+0x10>
     c56:	5f 3f       	cpi	r21, 0xFF	; 255
     c58:	71 f0       	breq	.+28     	; 0xc76 <__fp_splitA+0x1a>
     c5a:	47 95       	ror	r20

00000c5c <__fp_splitA>:
     c5c:	88 0f       	add	r24, r24
     c5e:	97 fb       	bst	r25, 7
     c60:	99 1f       	adc	r25, r25
     c62:	61 f0       	breq	.+24     	; 0xc7c <__fp_splitA+0x20>
     c64:	9f 3f       	cpi	r25, 0xFF	; 255
     c66:	79 f0       	breq	.+30     	; 0xc86 <__fp_splitA+0x2a>
     c68:	87 95       	ror	r24
     c6a:	08 95       	ret
     c6c:	12 16       	cp	r1, r18
     c6e:	13 06       	cpc	r1, r19
     c70:	14 06       	cpc	r1, r20
     c72:	55 1f       	adc	r21, r21
     c74:	f2 cf       	rjmp	.-28     	; 0xc5a <__fp_split3+0xe>
     c76:	46 95       	lsr	r20
     c78:	f1 df       	rcall	.-30     	; 0xc5c <__fp_splitA>
     c7a:	08 c0       	rjmp	.+16     	; 0xc8c <__fp_splitA+0x30>
     c7c:	16 16       	cp	r1, r22
     c7e:	17 06       	cpc	r1, r23
     c80:	18 06       	cpc	r1, r24
     c82:	99 1f       	adc	r25, r25
     c84:	f1 cf       	rjmp	.-30     	; 0xc68 <__fp_splitA+0xc>
     c86:	86 95       	lsr	r24
     c88:	71 05       	cpc	r23, r1
     c8a:	61 05       	cpc	r22, r1
     c8c:	08 94       	sec
     c8e:	08 95       	ret

00000c90 <__fp_zero>:
     c90:	e8 94       	clt

00000c92 <__fp_szero>:
     c92:	bb 27       	eor	r27, r27
     c94:	66 27       	eor	r22, r22
     c96:	77 27       	eor	r23, r23
     c98:	cb 01       	movw	r24, r22
     c9a:	97 f9       	bld	r25, 7
     c9c:	08 95       	ret

00000c9e <__mulsf3>:
     c9e:	0b d0       	rcall	.+22     	; 0xcb6 <__mulsf3x>
     ca0:	c4 cf       	rjmp	.-120    	; 0xc2a <__fp_round>
     ca2:	b5 df       	rcall	.-150    	; 0xc0e <__fp_pscA>
     ca4:	28 f0       	brcs	.+10     	; 0xcb0 <__mulsf3+0x12>
     ca6:	ba df       	rcall	.-140    	; 0xc1c <__fp_pscB>
     ca8:	18 f0       	brcs	.+6      	; 0xcb0 <__mulsf3+0x12>
     caa:	95 23       	and	r25, r21
     cac:	09 f0       	breq	.+2      	; 0xcb0 <__mulsf3+0x12>
     cae:	a6 cf       	rjmp	.-180    	; 0xbfc <__fp_inf>
     cb0:	ab cf       	rjmp	.-170    	; 0xc08 <__fp_nan>
     cb2:	11 24       	eor	r1, r1
     cb4:	ee cf       	rjmp	.-36     	; 0xc92 <__fp_szero>

00000cb6 <__mulsf3x>:
     cb6:	ca df       	rcall	.-108    	; 0xc4c <__fp_split3>
     cb8:	a0 f3       	brcs	.-24     	; 0xca2 <__mulsf3+0x4>

00000cba <__mulsf3_pse>:
     cba:	95 9f       	mul	r25, r21
     cbc:	d1 f3       	breq	.-12     	; 0xcb2 <__mulsf3+0x14>
     cbe:	95 0f       	add	r25, r21
     cc0:	50 e0       	ldi	r21, 0x00	; 0
     cc2:	55 1f       	adc	r21, r21
     cc4:	62 9f       	mul	r22, r18
     cc6:	f0 01       	movw	r30, r0
     cc8:	72 9f       	mul	r23, r18
     cca:	bb 27       	eor	r27, r27
     ccc:	f0 0d       	add	r31, r0
     cce:	b1 1d       	adc	r27, r1
     cd0:	63 9f       	mul	r22, r19
     cd2:	aa 27       	eor	r26, r26
     cd4:	f0 0d       	add	r31, r0
     cd6:	b1 1d       	adc	r27, r1
     cd8:	aa 1f       	adc	r26, r26
     cda:	64 9f       	mul	r22, r20
     cdc:	66 27       	eor	r22, r22
     cde:	b0 0d       	add	r27, r0
     ce0:	a1 1d       	adc	r26, r1
     ce2:	66 1f       	adc	r22, r22
     ce4:	82 9f       	mul	r24, r18
     ce6:	22 27       	eor	r18, r18
     ce8:	b0 0d       	add	r27, r0
     cea:	a1 1d       	adc	r26, r1
     cec:	62 1f       	adc	r22, r18
     cee:	73 9f       	mul	r23, r19
     cf0:	b0 0d       	add	r27, r0
     cf2:	a1 1d       	adc	r26, r1
     cf4:	62 1f       	adc	r22, r18
     cf6:	83 9f       	mul	r24, r19
     cf8:	a0 0d       	add	r26, r0
     cfa:	61 1d       	adc	r22, r1
     cfc:	22 1f       	adc	r18, r18
     cfe:	74 9f       	mul	r23, r20
     d00:	33 27       	eor	r19, r19
     d02:	a0 0d       	add	r26, r0
     d04:	61 1d       	adc	r22, r1
     d06:	23 1f       	adc	r18, r19
     d08:	84 9f       	mul	r24, r20
     d0a:	60 0d       	add	r22, r0
     d0c:	21 1d       	adc	r18, r1
     d0e:	82 2f       	mov	r24, r18
     d10:	76 2f       	mov	r23, r22
     d12:	6a 2f       	mov	r22, r26
     d14:	11 24       	eor	r1, r1
     d16:	9f 57       	subi	r25, 0x7F	; 127
     d18:	50 40       	sbci	r21, 0x00	; 0
     d1a:	8a f0       	brmi	.+34     	; 0xd3e <__mulsf3_pse+0x84>
     d1c:	e1 f0       	breq	.+56     	; 0xd56 <__mulsf3_pse+0x9c>
     d1e:	88 23       	and	r24, r24
     d20:	4a f0       	brmi	.+18     	; 0xd34 <__mulsf3_pse+0x7a>
     d22:	ee 0f       	add	r30, r30
     d24:	ff 1f       	adc	r31, r31
     d26:	bb 1f       	adc	r27, r27
     d28:	66 1f       	adc	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	88 1f       	adc	r24, r24
     d2e:	91 50       	subi	r25, 0x01	; 1
     d30:	50 40       	sbci	r21, 0x00	; 0
     d32:	a9 f7       	brne	.-22     	; 0xd1e <__mulsf3_pse+0x64>
     d34:	9e 3f       	cpi	r25, 0xFE	; 254
     d36:	51 05       	cpc	r21, r1
     d38:	70 f0       	brcs	.+28     	; 0xd56 <__mulsf3_pse+0x9c>
     d3a:	60 cf       	rjmp	.-320    	; 0xbfc <__fp_inf>
     d3c:	aa cf       	rjmp	.-172    	; 0xc92 <__fp_szero>
     d3e:	5f 3f       	cpi	r21, 0xFF	; 255
     d40:	ec f3       	brlt	.-6      	; 0xd3c <__mulsf3_pse+0x82>
     d42:	98 3e       	cpi	r25, 0xE8	; 232
     d44:	dc f3       	brlt	.-10     	; 0xd3c <__mulsf3_pse+0x82>
     d46:	86 95       	lsr	r24
     d48:	77 95       	ror	r23
     d4a:	67 95       	ror	r22
     d4c:	b7 95       	ror	r27
     d4e:	f7 95       	ror	r31
     d50:	e7 95       	ror	r30
     d52:	9f 5f       	subi	r25, 0xFF	; 255
     d54:	c1 f7       	brne	.-16     	; 0xd46 <__mulsf3_pse+0x8c>
     d56:	fe 2b       	or	r31, r30
     d58:	88 0f       	add	r24, r24
     d5a:	91 1d       	adc	r25, r1
     d5c:	96 95       	lsr	r25
     d5e:	87 95       	ror	r24
     d60:	97 f9       	bld	r25, 7
     d62:	08 95       	ret

00000d64 <vfprintf>:
     d64:	a5 e1       	ldi	r26, 0x15	; 21
     d66:	b0 e0       	ldi	r27, 0x00	; 0
     d68:	e8 eb       	ldi	r30, 0xB8	; 184
     d6a:	f6 e0       	ldi	r31, 0x06	; 6
     d6c:	0c 94 51 0a 	jmp	0x14a2	; 0x14a2 <__prologue_saves__>
     d70:	4c 01       	movw	r8, r24
     d72:	7f 87       	std	Y+15, r23	; 0x0f
     d74:	6e 87       	std	Y+14, r22	; 0x0e
     d76:	fc 01       	movw	r30, r24
     d78:	17 82       	std	Z+7, r1	; 0x07
     d7a:	16 82       	std	Z+6, r1	; 0x06
     d7c:	83 81       	ldd	r24, Z+3	; 0x03
     d7e:	81 fd       	sbrc	r24, 1
     d80:	04 c0       	rjmp	.+8      	; 0xd8a <vfprintf+0x26>
     d82:	76 c3       	rjmp	.+1772   	; 0x1470 <vfprintf+0x70c>
     d84:	4c 85       	ldd	r20, Y+12	; 0x0c
     d86:	5d 85       	ldd	r21, Y+13	; 0x0d
     d88:	04 c0       	rjmp	.+8      	; 0xd92 <vfprintf+0x2e>
     d8a:	1e 01       	movw	r2, r28
     d8c:	08 94       	sec
     d8e:	21 1c       	adc	r2, r1
     d90:	31 1c       	adc	r3, r1
     d92:	f4 01       	movw	r30, r8
     d94:	93 81       	ldd	r25, Z+3	; 0x03
     d96:	ee 85       	ldd	r30, Y+14	; 0x0e
     d98:	ff 85       	ldd	r31, Y+15	; 0x0f
     d9a:	93 fd       	sbrc	r25, 3
     d9c:	85 91       	lpm	r24, Z+
     d9e:	93 ff       	sbrs	r25, 3
     da0:	81 91       	ld	r24, Z+
     da2:	ff 87       	std	Y+15, r31	; 0x0f
     da4:	ee 87       	std	Y+14, r30	; 0x0e
     da6:	88 23       	and	r24, r24
     da8:	09 f4       	brne	.+2      	; 0xdac <vfprintf+0x48>
     daa:	5e c3       	rjmp	.+1724   	; 0x1468 <vfprintf+0x704>
     dac:	85 32       	cpi	r24, 0x25	; 37
     dae:	41 f4       	brne	.+16     	; 0xdc0 <vfprintf+0x5c>
     db0:	93 fd       	sbrc	r25, 3
     db2:	85 91       	lpm	r24, Z+
     db4:	93 ff       	sbrs	r25, 3
     db6:	81 91       	ld	r24, Z+
     db8:	ff 87       	std	Y+15, r31	; 0x0f
     dba:	ee 87       	std	Y+14, r30	; 0x0e
     dbc:	85 32       	cpi	r24, 0x25	; 37
     dbe:	59 f4       	brne	.+22     	; 0xdd6 <vfprintf+0x72>
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	b4 01       	movw	r22, r8
     dc4:	4c 8b       	std	Y+20, r20	; 0x14
     dc6:	5d 8b       	std	Y+21, r21	; 0x15
     dc8:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
     dcc:	4c 89       	ldd	r20, Y+20	; 0x14
     dce:	5d 89       	ldd	r21, Y+21	; 0x15
     dd0:	5d 87       	std	Y+13, r21	; 0x0d
     dd2:	4c 87       	std	Y+12, r20	; 0x0c
     dd4:	d7 cf       	rjmp	.-82     	; 0xd84 <vfprintf+0x20>
     dd6:	ff 24       	eor	r15, r15
     dd8:	dd 24       	eor	r13, r13
     dda:	10 e0       	ldi	r17, 0x00	; 0
     ddc:	10 32       	cpi	r17, 0x20	; 32
     dde:	b0 f4       	brcc	.+44     	; 0xe0c <vfprintf+0xa8>
     de0:	8b 32       	cpi	r24, 0x2B	; 43
     de2:	69 f0       	breq	.+26     	; 0xdfe <vfprintf+0x9a>
     de4:	8c 32       	cpi	r24, 0x2C	; 44
     de6:	28 f4       	brcc	.+10     	; 0xdf2 <vfprintf+0x8e>
     de8:	80 32       	cpi	r24, 0x20	; 32
     dea:	51 f0       	breq	.+20     	; 0xe00 <vfprintf+0x9c>
     dec:	83 32       	cpi	r24, 0x23	; 35
     dee:	71 f4       	brne	.+28     	; 0xe0c <vfprintf+0xa8>
     df0:	0b c0       	rjmp	.+22     	; 0xe08 <vfprintf+0xa4>
     df2:	8d 32       	cpi	r24, 0x2D	; 45
     df4:	39 f0       	breq	.+14     	; 0xe04 <vfprintf+0xa0>
     df6:	80 33       	cpi	r24, 0x30	; 48
     df8:	49 f4       	brne	.+18     	; 0xe0c <vfprintf+0xa8>
     dfa:	11 60       	ori	r17, 0x01	; 1
     dfc:	2c c0       	rjmp	.+88     	; 0xe56 <vfprintf+0xf2>
     dfe:	12 60       	ori	r17, 0x02	; 2
     e00:	14 60       	ori	r17, 0x04	; 4
     e02:	29 c0       	rjmp	.+82     	; 0xe56 <vfprintf+0xf2>
     e04:	18 60       	ori	r17, 0x08	; 8
     e06:	27 c0       	rjmp	.+78     	; 0xe56 <vfprintf+0xf2>
     e08:	10 61       	ori	r17, 0x10	; 16
     e0a:	25 c0       	rjmp	.+74     	; 0xe56 <vfprintf+0xf2>
     e0c:	17 fd       	sbrc	r17, 7
     e0e:	2e c0       	rjmp	.+92     	; 0xe6c <vfprintf+0x108>
     e10:	28 2f       	mov	r18, r24
     e12:	20 53       	subi	r18, 0x30	; 48
     e14:	2a 30       	cpi	r18, 0x0A	; 10
     e16:	98 f4       	brcc	.+38     	; 0xe3e <vfprintf+0xda>
     e18:	16 ff       	sbrs	r17, 6
     e1a:	08 c0       	rjmp	.+16     	; 0xe2c <vfprintf+0xc8>
     e1c:	8f 2d       	mov	r24, r15
     e1e:	88 0f       	add	r24, r24
     e20:	f8 2e       	mov	r15, r24
     e22:	ff 0c       	add	r15, r15
     e24:	ff 0c       	add	r15, r15
     e26:	f8 0e       	add	r15, r24
     e28:	f2 0e       	add	r15, r18
     e2a:	15 c0       	rjmp	.+42     	; 0xe56 <vfprintf+0xf2>
     e2c:	8d 2d       	mov	r24, r13
     e2e:	88 0f       	add	r24, r24
     e30:	d8 2e       	mov	r13, r24
     e32:	dd 0c       	add	r13, r13
     e34:	dd 0c       	add	r13, r13
     e36:	d8 0e       	add	r13, r24
     e38:	d2 0e       	add	r13, r18
     e3a:	10 62       	ori	r17, 0x20	; 32
     e3c:	0c c0       	rjmp	.+24     	; 0xe56 <vfprintf+0xf2>
     e3e:	8e 32       	cpi	r24, 0x2E	; 46
     e40:	21 f4       	brne	.+8      	; 0xe4a <vfprintf+0xe6>
     e42:	16 fd       	sbrc	r17, 6
     e44:	11 c3       	rjmp	.+1570   	; 0x1468 <vfprintf+0x704>
     e46:	10 64       	ori	r17, 0x40	; 64
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0xf2>
     e4a:	8c 36       	cpi	r24, 0x6C	; 108
     e4c:	11 f4       	brne	.+4      	; 0xe52 <vfprintf+0xee>
     e4e:	10 68       	ori	r17, 0x80	; 128
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <vfprintf+0xf2>
     e52:	88 36       	cpi	r24, 0x68	; 104
     e54:	59 f4       	brne	.+22     	; 0xe6c <vfprintf+0x108>
     e56:	ee 85       	ldd	r30, Y+14	; 0x0e
     e58:	ff 85       	ldd	r31, Y+15	; 0x0f
     e5a:	93 fd       	sbrc	r25, 3
     e5c:	85 91       	lpm	r24, Z+
     e5e:	93 ff       	sbrs	r25, 3
     e60:	81 91       	ld	r24, Z+
     e62:	ff 87       	std	Y+15, r31	; 0x0f
     e64:	ee 87       	std	Y+14, r30	; 0x0e
     e66:	88 23       	and	r24, r24
     e68:	09 f0       	breq	.+2      	; 0xe6c <vfprintf+0x108>
     e6a:	b8 cf       	rjmp	.-144    	; 0xddc <vfprintf+0x78>
     e6c:	98 2f       	mov	r25, r24
     e6e:	95 54       	subi	r25, 0x45	; 69
     e70:	93 30       	cpi	r25, 0x03	; 3
     e72:	18 f4       	brcc	.+6      	; 0xe7a <vfprintf+0x116>
     e74:	10 61       	ori	r17, 0x10	; 16
     e76:	80 5e       	subi	r24, 0xE0	; 224
     e78:	06 c0       	rjmp	.+12     	; 0xe86 <vfprintf+0x122>
     e7a:	98 2f       	mov	r25, r24
     e7c:	95 56       	subi	r25, 0x65	; 101
     e7e:	93 30       	cpi	r25, 0x03	; 3
     e80:	08 f0       	brcs	.+2      	; 0xe84 <vfprintf+0x120>
     e82:	a2 c1       	rjmp	.+836    	; 0x11c8 <vfprintf+0x464>
     e84:	1f 7e       	andi	r17, 0xEF	; 239
     e86:	16 fd       	sbrc	r17, 6
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x12a>
     e8a:	e6 e0       	ldi	r30, 0x06	; 6
     e8c:	fe 2e       	mov	r15, r30
     e8e:	1f 73       	andi	r17, 0x3F	; 63
     e90:	85 36       	cpi	r24, 0x65	; 101
     e92:	11 f4       	brne	.+4      	; 0xe98 <vfprintf+0x134>
     e94:	10 64       	ori	r17, 0x40	; 64
     e96:	06 c0       	rjmp	.+12     	; 0xea4 <vfprintf+0x140>
     e98:	86 36       	cpi	r24, 0x66	; 102
     e9a:	11 f4       	brne	.+4      	; 0xea0 <vfprintf+0x13c>
     e9c:	10 68       	ori	r17, 0x80	; 128
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <vfprintf+0x140>
     ea0:	f1 10       	cpse	r15, r1
     ea2:	fa 94       	dec	r15
     ea4:	17 ff       	sbrs	r17, 7
     ea6:	07 c0       	rjmp	.+14     	; 0xeb6 <vfprintf+0x152>
     ea8:	fb e3       	ldi	r31, 0x3B	; 59
     eaa:	ff 15       	cp	r31, r15
     eac:	48 f0       	brcs	.+18     	; 0xec0 <vfprintf+0x15c>
     eae:	ef 2c       	mov	r14, r15
     eb0:	e3 94       	inc	r14
     eb2:	27 e0       	ldi	r18, 0x07	; 7
     eb4:	0d c0       	rjmp	.+26     	; 0xed0 <vfprintf+0x16c>
     eb6:	27 e0       	ldi	r18, 0x07	; 7
     eb8:	2f 15       	cp	r18, r15
     eba:	30 f0       	brcs	.+12     	; 0xec8 <vfprintf+0x164>
     ebc:	2f 2d       	mov	r18, r15
     ebe:	07 c0       	rjmp	.+14     	; 0xece <vfprintf+0x16a>
     ec0:	27 e0       	ldi	r18, 0x07	; 7
     ec2:	7c e3       	ldi	r23, 0x3C	; 60
     ec4:	e7 2e       	mov	r14, r23
     ec6:	04 c0       	rjmp	.+8      	; 0xed0 <vfprintf+0x16c>
     ec8:	27 e0       	ldi	r18, 0x07	; 7
     eca:	67 e0       	ldi	r22, 0x07	; 7
     ecc:	f6 2e       	mov	r15, r22
     ece:	ee 24       	eor	r14, r14
     ed0:	ca 01       	movw	r24, r20
     ed2:	04 96       	adiw	r24, 0x04	; 4
     ed4:	9d 87       	std	Y+13, r25	; 0x0d
     ed6:	8c 87       	std	Y+12, r24	; 0x0c
     ed8:	fa 01       	movw	r30, r20
     eda:	60 81       	ld	r22, Z
     edc:	71 81       	ldd	r23, Z+1	; 0x01
     ede:	82 81       	ldd	r24, Z+2	; 0x02
     ee0:	93 81       	ldd	r25, Z+3	; 0x03
     ee2:	a1 01       	movw	r20, r2
     ee4:	0e 2d       	mov	r16, r14
     ee6:	0e 94 a1 0a 	call	0x1542	; 0x1542 <__ftoa_engine>
     eea:	5c 01       	movw	r10, r24
     eec:	c9 80       	ldd	r12, Y+1	; 0x01
     eee:	2c 2d       	mov	r18, r12
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	39 8b       	std	Y+17, r19	; 0x11
     ef4:	28 8b       	std	Y+16, r18	; 0x10
     ef6:	c0 fe       	sbrs	r12, 0
     ef8:	03 c0       	rjmp	.+6      	; 0xf00 <vfprintf+0x19c>
     efa:	38 89       	ldd	r19, Y+16	; 0x10
     efc:	33 ff       	sbrs	r19, 3
     efe:	06 c0       	rjmp	.+12     	; 0xf0c <vfprintf+0x1a8>
     f00:	11 fd       	sbrc	r17, 1
     f02:	06 c0       	rjmp	.+12     	; 0xf10 <vfprintf+0x1ac>
     f04:	12 ff       	sbrs	r17, 2
     f06:	06 c0       	rjmp	.+12     	; 0xf14 <vfprintf+0x1b0>
     f08:	00 e2       	ldi	r16, 0x20	; 32
     f0a:	05 c0       	rjmp	.+10     	; 0xf16 <vfprintf+0x1b2>
     f0c:	0d e2       	ldi	r16, 0x2D	; 45
     f0e:	03 c0       	rjmp	.+6      	; 0xf16 <vfprintf+0x1b2>
     f10:	0b e2       	ldi	r16, 0x2B	; 43
     f12:	01 c0       	rjmp	.+2      	; 0xf16 <vfprintf+0x1b2>
     f14:	00 e0       	ldi	r16, 0x00	; 0
     f16:	88 89       	ldd	r24, Y+16	; 0x10
     f18:	99 89       	ldd	r25, Y+17	; 0x11
     f1a:	8c 70       	andi	r24, 0x0C	; 12
     f1c:	90 70       	andi	r25, 0x00	; 0
     f1e:	00 97       	sbiw	r24, 0x00	; 0
     f20:	09 f4       	brne	.+2      	; 0xf24 <vfprintf+0x1c0>
     f22:	3c c0       	rjmp	.+120    	; 0xf9c <vfprintf+0x238>
     f24:	00 23       	and	r16, r16
     f26:	11 f0       	breq	.+4      	; 0xf2c <vfprintf+0x1c8>
     f28:	84 e0       	ldi	r24, 0x04	; 4
     f2a:	01 c0       	rjmp	.+2      	; 0xf2e <vfprintf+0x1ca>
     f2c:	83 e0       	ldi	r24, 0x03	; 3
     f2e:	8d 15       	cp	r24, r13
     f30:	58 f4       	brcc	.+22     	; 0xf48 <vfprintf+0x1e4>
     f32:	d8 1a       	sub	r13, r24
     f34:	13 fd       	sbrc	r17, 3
     f36:	09 c0       	rjmp	.+18     	; 0xf4a <vfprintf+0x1e6>
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	b4 01       	movw	r22, r8
     f3e:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
     f42:	da 94       	dec	r13
     f44:	c9 f7       	brne	.-14     	; 0xf38 <vfprintf+0x1d4>
     f46:	01 c0       	rjmp	.+2      	; 0xf4a <vfprintf+0x1e6>
     f48:	dd 24       	eor	r13, r13
     f4a:	00 23       	and	r16, r16
     f4c:	29 f0       	breq	.+10     	; 0xf58 <vfprintf+0x1f4>
     f4e:	80 2f       	mov	r24, r16
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	b4 01       	movw	r22, r8
     f54:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
     f58:	88 89       	ldd	r24, Y+16	; 0x10
     f5a:	83 fd       	sbrc	r24, 3
     f5c:	05 c0       	rjmp	.+10     	; 0xf68 <vfprintf+0x204>
     f5e:	3c e6       	ldi	r19, 0x6C	; 108
     f60:	e3 2e       	mov	r14, r19
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	f3 2e       	mov	r15, r19
     f66:	11 c0       	rjmp	.+34     	; 0xf8a <vfprintf+0x226>
     f68:	28 e6       	ldi	r18, 0x68	; 104
     f6a:	e2 2e       	mov	r14, r18
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	f2 2e       	mov	r15, r18
     f70:	0c c0       	rjmp	.+24     	; 0xf8a <vfprintf+0x226>
     f72:	01 15       	cp	r16, r1
     f74:	11 05       	cpc	r17, r1
     f76:	09 f0       	breq	.+2      	; 0xf7a <vfprintf+0x216>
     f78:	80 52       	subi	r24, 0x20	; 32
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	b4 01       	movw	r22, r8
     f7e:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
     f82:	08 94       	sec
     f84:	e1 1c       	adc	r14, r1
     f86:	f1 1c       	adc	r15, r1
     f88:	04 c0       	rjmp	.+8      	; 0xf92 <vfprintf+0x22e>
     f8a:	01 2f       	mov	r16, r17
     f8c:	10 e0       	ldi	r17, 0x00	; 0
     f8e:	00 71       	andi	r16, 0x10	; 16
     f90:	10 70       	andi	r17, 0x00	; 0
     f92:	f7 01       	movw	r30, r14
     f94:	84 91       	lpm	r24, Z
     f96:	88 23       	and	r24, r24
     f98:	61 f7       	brne	.-40     	; 0xf72 <vfprintf+0x20e>
     f9a:	63 c2       	rjmp	.+1222   	; 0x1462 <vfprintf+0x6fe>
     f9c:	17 ff       	sbrs	r17, 7
     f9e:	0e c0       	rjmp	.+28     	; 0xfbc <vfprintf+0x258>
     fa0:	ea 0c       	add	r14, r10
     fa2:	f8 89       	ldd	r31, Y+16	; 0x10
     fa4:	f4 ff       	sbrs	r31, 4
     fa6:	04 c0       	rjmp	.+8      	; 0xfb0 <vfprintf+0x24c>
     fa8:	8a 81       	ldd	r24, Y+2	; 0x02
     faa:	81 33       	cpi	r24, 0x31	; 49
     fac:	09 f4       	brne	.+2      	; 0xfb0 <vfprintf+0x24c>
     fae:	ea 94       	dec	r14
     fb0:	1e 14       	cp	r1, r14
     fb2:	4c f5       	brge	.+82     	; 0x1006 <vfprintf+0x2a2>
     fb4:	28 e0       	ldi	r18, 0x08	; 8
     fb6:	2e 15       	cp	r18, r14
     fb8:	48 f1       	brcs	.+82     	; 0x100c <vfprintf+0x2a8>
     fba:	2c c0       	rjmp	.+88     	; 0x1014 <vfprintf+0x2b0>
     fbc:	16 fd       	sbrc	r17, 6
     fbe:	2a c0       	rjmp	.+84     	; 0x1014 <vfprintf+0x2b0>
     fc0:	8f 2d       	mov	r24, r15
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	8a 15       	cp	r24, r10
     fc6:	9b 05       	cpc	r25, r11
     fc8:	44 f0       	brlt	.+16     	; 0xfda <vfprintf+0x276>
     fca:	3c ef       	ldi	r19, 0xFC	; 252
     fcc:	a3 16       	cp	r10, r19
     fce:	3f ef       	ldi	r19, 0xFF	; 255
     fd0:	b3 06       	cpc	r11, r19
     fd2:	1c f0       	brlt	.+6      	; 0xfda <vfprintf+0x276>
     fd4:	10 68       	ori	r17, 0x80	; 128
     fd6:	01 c0       	rjmp	.+2      	; 0xfda <vfprintf+0x276>
     fd8:	fa 94       	dec	r15
     fda:	ff 20       	and	r15, r15
     fdc:	49 f0       	breq	.+18     	; 0xff0 <vfprintf+0x28c>
     fde:	e2 e0       	ldi	r30, 0x02	; 2
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	ec 0f       	add	r30, r28
     fe4:	fd 1f       	adc	r31, r29
     fe6:	ef 0d       	add	r30, r15
     fe8:	f1 1d       	adc	r31, r1
     fea:	80 81       	ld	r24, Z
     fec:	80 33       	cpi	r24, 0x30	; 48
     fee:	a1 f3       	breq	.-24     	; 0xfd8 <vfprintf+0x274>
     ff0:	17 ff       	sbrs	r17, 7
     ff2:	10 c0       	rjmp	.+32     	; 0x1014 <vfprintf+0x2b0>
     ff4:	ef 2c       	mov	r14, r15
     ff6:	e3 94       	inc	r14
     ff8:	8f 2d       	mov	r24, r15
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	a8 16       	cp	r10, r24
     ffe:	b9 06       	cpc	r11, r25
    1000:	44 f4       	brge	.+16     	; 0x1012 <vfprintf+0x2ae>
    1002:	fa 18       	sub	r15, r10
    1004:	07 c0       	rjmp	.+14     	; 0x1014 <vfprintf+0x2b0>
    1006:	ee 24       	eor	r14, r14
    1008:	e3 94       	inc	r14
    100a:	04 c0       	rjmp	.+8      	; 0x1014 <vfprintf+0x2b0>
    100c:	98 e0       	ldi	r25, 0x08	; 8
    100e:	e9 2e       	mov	r14, r25
    1010:	01 c0       	rjmp	.+2      	; 0x1014 <vfprintf+0x2b0>
    1012:	ff 24       	eor	r15, r15
    1014:	17 ff       	sbrs	r17, 7
    1016:	07 c0       	rjmp	.+14     	; 0x1026 <vfprintf+0x2c2>
    1018:	1a 14       	cp	r1, r10
    101a:	1b 04       	cpc	r1, r11
    101c:	3c f4       	brge	.+14     	; 0x102c <vfprintf+0x2c8>
    101e:	95 01       	movw	r18, r10
    1020:	2f 5f       	subi	r18, 0xFF	; 255
    1022:	3f 4f       	sbci	r19, 0xFF	; 255
    1024:	05 c0       	rjmp	.+10     	; 0x1030 <vfprintf+0x2cc>
    1026:	25 e0       	ldi	r18, 0x05	; 5
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <vfprintf+0x2cc>
    102c:	21 e0       	ldi	r18, 0x01	; 1
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	00 23       	and	r16, r16
    1032:	11 f0       	breq	.+4      	; 0x1038 <vfprintf+0x2d4>
    1034:	2f 5f       	subi	r18, 0xFF	; 255
    1036:	3f 4f       	sbci	r19, 0xFF	; 255
    1038:	ff 20       	and	r15, r15
    103a:	29 f0       	breq	.+10     	; 0x1046 <vfprintf+0x2e2>
    103c:	8f 2d       	mov	r24, r15
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	01 96       	adiw	r24, 0x01	; 1
    1042:	28 0f       	add	r18, r24
    1044:	39 1f       	adc	r19, r25
    1046:	8d 2d       	mov	r24, r13
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	28 17       	cp	r18, r24
    104c:	39 07       	cpc	r19, r25
    104e:	14 f4       	brge	.+4      	; 0x1054 <vfprintf+0x2f0>
    1050:	d2 1a       	sub	r13, r18
    1052:	01 c0       	rjmp	.+2      	; 0x1056 <vfprintf+0x2f2>
    1054:	dd 24       	eor	r13, r13
    1056:	61 2e       	mov	r6, r17
    1058:	77 24       	eor	r7, r7
    105a:	c3 01       	movw	r24, r6
    105c:	89 70       	andi	r24, 0x09	; 9
    105e:	90 70       	andi	r25, 0x00	; 0
    1060:	00 97       	sbiw	r24, 0x00	; 0
    1062:	49 f4       	brne	.+18     	; 0x1076 <vfprintf+0x312>
    1064:	06 c0       	rjmp	.+12     	; 0x1072 <vfprintf+0x30e>
    1066:	80 e2       	ldi	r24, 0x20	; 32
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	b4 01       	movw	r22, r8
    106c:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1070:	da 94       	dec	r13
    1072:	dd 20       	and	r13, r13
    1074:	c1 f7       	brne	.-16     	; 0x1066 <vfprintf+0x302>
    1076:	00 23       	and	r16, r16
    1078:	29 f0       	breq	.+10     	; 0x1084 <vfprintf+0x320>
    107a:	80 2f       	mov	r24, r16
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	b4 01       	movw	r22, r8
    1080:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1084:	63 fc       	sbrc	r6, 3
    1086:	09 c0       	rjmp	.+18     	; 0x109a <vfprintf+0x336>
    1088:	06 c0       	rjmp	.+12     	; 0x1096 <vfprintf+0x332>
    108a:	80 e3       	ldi	r24, 0x30	; 48
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	b4 01       	movw	r22, r8
    1090:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1094:	da 94       	dec	r13
    1096:	dd 20       	and	r13, r13
    1098:	c1 f7       	brne	.-16     	; 0x108a <vfprintf+0x326>
    109a:	17 ff       	sbrs	r17, 7
    109c:	48 c0       	rjmp	.+144    	; 0x112e <vfprintf+0x3ca>
    109e:	85 01       	movw	r16, r10
    10a0:	b7 fe       	sbrs	r11, 7
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <vfprintf+0x344>
    10a4:	00 e0       	ldi	r16, 0x00	; 0
    10a6:	10 e0       	ldi	r17, 0x00	; 0
    10a8:	66 24       	eor	r6, r6
    10aa:	77 24       	eor	r7, r7
    10ac:	95 01       	movw	r18, r10
    10ae:	2e 19       	sub	r18, r14
    10b0:	31 09       	sbc	r19, r1
    10b2:	3b 8b       	std	Y+19, r19	; 0x13
    10b4:	2a 8b       	std	Y+18, r18	; 0x12
    10b6:	25 01       	movw	r4, r10
    10b8:	40 1a       	sub	r4, r16
    10ba:	51 0a       	sbc	r5, r17
    10bc:	42 0c       	add	r4, r2
    10be:	53 1c       	adc	r5, r3
    10c0:	6f 2d       	mov	r22, r15
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	ee 24       	eor	r14, r14
    10c6:	ff 24       	eor	r15, r15
    10c8:	e6 1a       	sub	r14, r22
    10ca:	f7 0a       	sbc	r15, r23
    10cc:	3f ef       	ldi	r19, 0xFF	; 255
    10ce:	0f 3f       	cpi	r16, 0xFF	; 255
    10d0:	13 07       	cpc	r17, r19
    10d2:	29 f4       	brne	.+10     	; 0x10de <vfprintf+0x37a>
    10d4:	8e e2       	ldi	r24, 0x2E	; 46
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	b4 01       	movw	r22, r8
    10da:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    10de:	a0 16       	cp	r10, r16
    10e0:	b1 06       	cpc	r11, r17
    10e2:	54 f0       	brlt	.+20     	; 0x10f8 <vfprintf+0x394>
    10e4:	2a 89       	ldd	r18, Y+18	; 0x12
    10e6:	3b 89       	ldd	r19, Y+19	; 0x13
    10e8:	20 17       	cp	r18, r16
    10ea:	31 07       	cpc	r19, r17
    10ec:	2c f4       	brge	.+10     	; 0x10f8 <vfprintf+0x394>
    10ee:	f2 01       	movw	r30, r4
    10f0:	e6 0d       	add	r30, r6
    10f2:	f7 1d       	adc	r31, r7
    10f4:	81 81       	ldd	r24, Z+1	; 0x01
    10f6:	01 c0       	rjmp	.+2      	; 0x10fa <vfprintf+0x396>
    10f8:	80 e3       	ldi	r24, 0x30	; 48
    10fa:	01 50       	subi	r16, 0x01	; 1
    10fc:	10 40       	sbci	r17, 0x00	; 0
    10fe:	08 94       	sec
    1100:	61 1c       	adc	r6, r1
    1102:	71 1c       	adc	r7, r1
    1104:	0e 15       	cp	r16, r14
    1106:	1f 05       	cpc	r17, r15
    1108:	2c f0       	brlt	.+10     	; 0x1114 <vfprintf+0x3b0>
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	b4 01       	movw	r22, r8
    110e:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1112:	dc cf       	rjmp	.-72     	; 0x10cc <vfprintf+0x368>
    1114:	0a 15       	cp	r16, r10
    1116:	1b 05       	cpc	r17, r11
    1118:	41 f4       	brne	.+16     	; 0x112a <vfprintf+0x3c6>
    111a:	9a 81       	ldd	r25, Y+2	; 0x02
    111c:	96 33       	cpi	r25, 0x36	; 54
    111e:	20 f4       	brcc	.+8      	; 0x1128 <vfprintf+0x3c4>
    1120:	95 33       	cpi	r25, 0x35	; 53
    1122:	19 f4       	brne	.+6      	; 0x112a <vfprintf+0x3c6>
    1124:	38 89       	ldd	r19, Y+16	; 0x10
    1126:	34 ff       	sbrs	r19, 4
    1128:	81 e3       	ldi	r24, 0x31	; 49
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	49 c0       	rjmp	.+146    	; 0x11c0 <vfprintf+0x45c>
    112e:	8a 81       	ldd	r24, Y+2	; 0x02
    1130:	81 33       	cpi	r24, 0x31	; 49
    1132:	11 f0       	breq	.+4      	; 0x1138 <vfprintf+0x3d4>
    1134:	9f ee       	ldi	r25, 0xEF	; 239
    1136:	c9 22       	and	r12, r25
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	b4 01       	movw	r22, r8
    113c:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1140:	ff 20       	and	r15, r15
    1142:	89 f0       	breq	.+34     	; 0x1166 <vfprintf+0x402>
    1144:	8e e2       	ldi	r24, 0x2E	; 46
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	b4 01       	movw	r22, r8
    114a:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    114e:	12 e0       	ldi	r17, 0x02	; 2
    1150:	f1 01       	movw	r30, r2
    1152:	e1 0f       	add	r30, r17
    1154:	f1 1d       	adc	r31, r1
    1156:	1f 5f       	subi	r17, 0xFF	; 255
    1158:	80 81       	ld	r24, Z
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	b4 01       	movw	r22, r8
    115e:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1162:	fa 94       	dec	r15
    1164:	a9 f7       	brne	.-22     	; 0x1150 <vfprintf+0x3ec>
    1166:	64 fe       	sbrs	r6, 4
    1168:	03 c0       	rjmp	.+6      	; 0x1170 <vfprintf+0x40c>
    116a:	85 e4       	ldi	r24, 0x45	; 69
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <vfprintf+0x410>
    1170:	85 e6       	ldi	r24, 0x65	; 101
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	b4 01       	movw	r22, r8
    1176:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    117a:	b7 fc       	sbrc	r11, 7
    117c:	05 c0       	rjmp	.+10     	; 0x1188 <vfprintf+0x424>
    117e:	a1 14       	cp	r10, r1
    1180:	b1 04       	cpc	r11, r1
    1182:	41 f4       	brne	.+16     	; 0x1194 <vfprintf+0x430>
    1184:	c4 fe       	sbrs	r12, 4
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <vfprintf+0x430>
    1188:	b0 94       	com	r11
    118a:	a1 94       	neg	r10
    118c:	b1 08       	sbc	r11, r1
    118e:	b3 94       	inc	r11
    1190:	8d e2       	ldi	r24, 0x2D	; 45
    1192:	01 c0       	rjmp	.+2      	; 0x1196 <vfprintf+0x432>
    1194:	8b e2       	ldi	r24, 0x2B	; 43
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	b4 01       	movw	r22, r8
    119a:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    119e:	80 e3       	ldi	r24, 0x30	; 48
    11a0:	05 c0       	rjmp	.+10     	; 0x11ac <vfprintf+0x448>
    11a2:	8f 5f       	subi	r24, 0xFF	; 255
    11a4:	e6 ef       	ldi	r30, 0xF6	; 246
    11a6:	ff ef       	ldi	r31, 0xFF	; 255
    11a8:	ae 0e       	add	r10, r30
    11aa:	bf 1e       	adc	r11, r31
    11ac:	fa e0       	ldi	r31, 0x0A	; 10
    11ae:	af 16       	cp	r10, r31
    11b0:	b1 04       	cpc	r11, r1
    11b2:	bc f7       	brge	.-18     	; 0x11a2 <vfprintf+0x43e>
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	b4 01       	movw	r22, r8
    11b8:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    11bc:	c5 01       	movw	r24, r10
    11be:	c0 96       	adiw	r24, 0x30	; 48
    11c0:	b4 01       	movw	r22, r8
    11c2:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    11c6:	4d c1       	rjmp	.+666    	; 0x1462 <vfprintf+0x6fe>
    11c8:	83 36       	cpi	r24, 0x63	; 99
    11ca:	31 f0       	breq	.+12     	; 0x11d8 <vfprintf+0x474>
    11cc:	83 37       	cpi	r24, 0x73	; 115
    11ce:	89 f0       	breq	.+34     	; 0x11f2 <vfprintf+0x48e>
    11d0:	83 35       	cpi	r24, 0x53	; 83
    11d2:	09 f0       	breq	.+2      	; 0x11d6 <vfprintf+0x472>
    11d4:	59 c0       	rjmp	.+178    	; 0x1288 <vfprintf+0x524>
    11d6:	22 c0       	rjmp	.+68     	; 0x121c <vfprintf+0x4b8>
    11d8:	9a 01       	movw	r18, r20
    11da:	2e 5f       	subi	r18, 0xFE	; 254
    11dc:	3f 4f       	sbci	r19, 0xFF	; 255
    11de:	3d 87       	std	Y+13, r19	; 0x0d
    11e0:	2c 87       	std	Y+12, r18	; 0x0c
    11e2:	fa 01       	movw	r30, r20
    11e4:	80 81       	ld	r24, Z
    11e6:	89 83       	std	Y+1, r24	; 0x01
    11e8:	81 e0       	ldi	r24, 0x01	; 1
    11ea:	e8 2e       	mov	r14, r24
    11ec:	f1 2c       	mov	r15, r1
    11ee:	51 01       	movw	r10, r2
    11f0:	13 c0       	rjmp	.+38     	; 0x1218 <vfprintf+0x4b4>
    11f2:	9a 01       	movw	r18, r20
    11f4:	2e 5f       	subi	r18, 0xFE	; 254
    11f6:	3f 4f       	sbci	r19, 0xFF	; 255
    11f8:	3d 87       	std	Y+13, r19	; 0x0d
    11fa:	2c 87       	std	Y+12, r18	; 0x0c
    11fc:	fa 01       	movw	r30, r20
    11fe:	a0 80       	ld	r10, Z
    1200:	b1 80       	ldd	r11, Z+1	; 0x01
    1202:	16 ff       	sbrs	r17, 6
    1204:	03 c0       	rjmp	.+6      	; 0x120c <vfprintf+0x4a8>
    1206:	6f 2d       	mov	r22, r15
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <vfprintf+0x4ac>
    120c:	6f ef       	ldi	r22, 0xFF	; 255
    120e:	7f ef       	ldi	r23, 0xFF	; 255
    1210:	c5 01       	movw	r24, r10
    1212:	0e 94 8d 0b 	call	0x171a	; 0x171a <strnlen>
    1216:	7c 01       	movw	r14, r24
    1218:	1f 77       	andi	r17, 0x7F	; 127
    121a:	14 c0       	rjmp	.+40     	; 0x1244 <vfprintf+0x4e0>
    121c:	9a 01       	movw	r18, r20
    121e:	2e 5f       	subi	r18, 0xFE	; 254
    1220:	3f 4f       	sbci	r19, 0xFF	; 255
    1222:	3d 87       	std	Y+13, r19	; 0x0d
    1224:	2c 87       	std	Y+12, r18	; 0x0c
    1226:	fa 01       	movw	r30, r20
    1228:	a0 80       	ld	r10, Z
    122a:	b1 80       	ldd	r11, Z+1	; 0x01
    122c:	16 ff       	sbrs	r17, 6
    122e:	03 c0       	rjmp	.+6      	; 0x1236 <vfprintf+0x4d2>
    1230:	6f 2d       	mov	r22, r15
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	02 c0       	rjmp	.+4      	; 0x123a <vfprintf+0x4d6>
    1236:	6f ef       	ldi	r22, 0xFF	; 255
    1238:	7f ef       	ldi	r23, 0xFF	; 255
    123a:	c5 01       	movw	r24, r10
    123c:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <strnlen_P>
    1240:	7c 01       	movw	r14, r24
    1242:	10 68       	ori	r17, 0x80	; 128
    1244:	13 fd       	sbrc	r17, 3
    1246:	1c c0       	rjmp	.+56     	; 0x1280 <vfprintf+0x51c>
    1248:	06 c0       	rjmp	.+12     	; 0x1256 <vfprintf+0x4f2>
    124a:	80 e2       	ldi	r24, 0x20	; 32
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	b4 01       	movw	r22, r8
    1250:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1254:	da 94       	dec	r13
    1256:	8d 2d       	mov	r24, r13
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	e8 16       	cp	r14, r24
    125c:	f9 06       	cpc	r15, r25
    125e:	a8 f3       	brcs	.-22     	; 0x124a <vfprintf+0x4e6>
    1260:	0f c0       	rjmp	.+30     	; 0x1280 <vfprintf+0x51c>
    1262:	f5 01       	movw	r30, r10
    1264:	17 fd       	sbrc	r17, 7
    1266:	85 91       	lpm	r24, Z+
    1268:	17 ff       	sbrs	r17, 7
    126a:	81 91       	ld	r24, Z+
    126c:	5f 01       	movw	r10, r30
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	b4 01       	movw	r22, r8
    1272:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1276:	d1 10       	cpse	r13, r1
    1278:	da 94       	dec	r13
    127a:	08 94       	sec
    127c:	e1 08       	sbc	r14, r1
    127e:	f1 08       	sbc	r15, r1
    1280:	e1 14       	cp	r14, r1
    1282:	f1 04       	cpc	r15, r1
    1284:	71 f7       	brne	.-36     	; 0x1262 <vfprintf+0x4fe>
    1286:	ed c0       	rjmp	.+474    	; 0x1462 <vfprintf+0x6fe>
    1288:	84 36       	cpi	r24, 0x64	; 100
    128a:	11 f0       	breq	.+4      	; 0x1290 <vfprintf+0x52c>
    128c:	89 36       	cpi	r24, 0x69	; 105
    128e:	71 f5       	brne	.+92     	; 0x12ec <vfprintf+0x588>
    1290:	9a 01       	movw	r18, r20
    1292:	17 ff       	sbrs	r17, 7
    1294:	0a c0       	rjmp	.+20     	; 0x12aa <vfprintf+0x546>
    1296:	2c 5f       	subi	r18, 0xFC	; 252
    1298:	3f 4f       	sbci	r19, 0xFF	; 255
    129a:	3d 87       	std	Y+13, r19	; 0x0d
    129c:	2c 87       	std	Y+12, r18	; 0x0c
    129e:	fa 01       	movw	r30, r20
    12a0:	80 81       	ld	r24, Z
    12a2:	91 81       	ldd	r25, Z+1	; 0x01
    12a4:	a2 81       	ldd	r26, Z+2	; 0x02
    12a6:	b3 81       	ldd	r27, Z+3	; 0x03
    12a8:	0b c0       	rjmp	.+22     	; 0x12c0 <vfprintf+0x55c>
    12aa:	2e 5f       	subi	r18, 0xFE	; 254
    12ac:	3f 4f       	sbci	r19, 0xFF	; 255
    12ae:	3d 87       	std	Y+13, r19	; 0x0d
    12b0:	2c 87       	std	Y+12, r18	; 0x0c
    12b2:	fa 01       	movw	r30, r20
    12b4:	80 81       	ld	r24, Z
    12b6:	91 81       	ldd	r25, Z+1	; 0x01
    12b8:	aa 27       	eor	r26, r26
    12ba:	97 fd       	sbrc	r25, 7
    12bc:	a0 95       	com	r26
    12be:	ba 2f       	mov	r27, r26
    12c0:	01 2f       	mov	r16, r17
    12c2:	0f 76       	andi	r16, 0x6F	; 111
    12c4:	b7 ff       	sbrs	r27, 7
    12c6:	08 c0       	rjmp	.+16     	; 0x12d8 <vfprintf+0x574>
    12c8:	b0 95       	com	r27
    12ca:	a0 95       	com	r26
    12cc:	90 95       	com	r25
    12ce:	81 95       	neg	r24
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	af 4f       	sbci	r26, 0xFF	; 255
    12d4:	bf 4f       	sbci	r27, 0xFF	; 255
    12d6:	00 68       	ori	r16, 0x80	; 128
    12d8:	bc 01       	movw	r22, r24
    12da:	cd 01       	movw	r24, r26
    12dc:	a1 01       	movw	r20, r2
    12de:	2a e0       	ldi	r18, 0x0A	; 10
    12e0:	30 e0       	ldi	r19, 0x00	; 0
    12e2:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__ultoa_invert>
    12e6:	e8 2e       	mov	r14, r24
    12e8:	e2 18       	sub	r14, r2
    12ea:	41 c0       	rjmp	.+130    	; 0x136e <vfprintf+0x60a>
    12ec:	85 37       	cpi	r24, 0x75	; 117
    12ee:	21 f4       	brne	.+8      	; 0x12f8 <vfprintf+0x594>
    12f0:	1f 7e       	andi	r17, 0xEF	; 239
    12f2:	2a e0       	ldi	r18, 0x0A	; 10
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	20 c0       	rjmp	.+64     	; 0x1338 <vfprintf+0x5d4>
    12f8:	19 7f       	andi	r17, 0xF9	; 249
    12fa:	8f 36       	cpi	r24, 0x6F	; 111
    12fc:	a9 f0       	breq	.+42     	; 0x1328 <vfprintf+0x5c4>
    12fe:	80 37       	cpi	r24, 0x70	; 112
    1300:	20 f4       	brcc	.+8      	; 0x130a <vfprintf+0x5a6>
    1302:	88 35       	cpi	r24, 0x58	; 88
    1304:	09 f0       	breq	.+2      	; 0x1308 <vfprintf+0x5a4>
    1306:	b0 c0       	rjmp	.+352    	; 0x1468 <vfprintf+0x704>
    1308:	0b c0       	rjmp	.+22     	; 0x1320 <vfprintf+0x5bc>
    130a:	80 37       	cpi	r24, 0x70	; 112
    130c:	21 f0       	breq	.+8      	; 0x1316 <vfprintf+0x5b2>
    130e:	88 37       	cpi	r24, 0x78	; 120
    1310:	09 f0       	breq	.+2      	; 0x1314 <vfprintf+0x5b0>
    1312:	aa c0       	rjmp	.+340    	; 0x1468 <vfprintf+0x704>
    1314:	01 c0       	rjmp	.+2      	; 0x1318 <vfprintf+0x5b4>
    1316:	10 61       	ori	r17, 0x10	; 16
    1318:	14 ff       	sbrs	r17, 4
    131a:	09 c0       	rjmp	.+18     	; 0x132e <vfprintf+0x5ca>
    131c:	14 60       	ori	r17, 0x04	; 4
    131e:	07 c0       	rjmp	.+14     	; 0x132e <vfprintf+0x5ca>
    1320:	14 ff       	sbrs	r17, 4
    1322:	08 c0       	rjmp	.+16     	; 0x1334 <vfprintf+0x5d0>
    1324:	16 60       	ori	r17, 0x06	; 6
    1326:	06 c0       	rjmp	.+12     	; 0x1334 <vfprintf+0x5d0>
    1328:	28 e0       	ldi	r18, 0x08	; 8
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	05 c0       	rjmp	.+10     	; 0x1338 <vfprintf+0x5d4>
    132e:	20 e1       	ldi	r18, 0x10	; 16
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	02 c0       	rjmp	.+4      	; 0x1338 <vfprintf+0x5d4>
    1334:	20 e1       	ldi	r18, 0x10	; 16
    1336:	32 e0       	ldi	r19, 0x02	; 2
    1338:	ca 01       	movw	r24, r20
    133a:	17 ff       	sbrs	r17, 7
    133c:	09 c0       	rjmp	.+18     	; 0x1350 <vfprintf+0x5ec>
    133e:	04 96       	adiw	r24, 0x04	; 4
    1340:	9d 87       	std	Y+13, r25	; 0x0d
    1342:	8c 87       	std	Y+12, r24	; 0x0c
    1344:	fa 01       	movw	r30, r20
    1346:	60 81       	ld	r22, Z
    1348:	71 81       	ldd	r23, Z+1	; 0x01
    134a:	82 81       	ldd	r24, Z+2	; 0x02
    134c:	93 81       	ldd	r25, Z+3	; 0x03
    134e:	08 c0       	rjmp	.+16     	; 0x1360 <vfprintf+0x5fc>
    1350:	02 96       	adiw	r24, 0x02	; 2
    1352:	9d 87       	std	Y+13, r25	; 0x0d
    1354:	8c 87       	std	Y+12, r24	; 0x0c
    1356:	fa 01       	movw	r30, r20
    1358:	60 81       	ld	r22, Z
    135a:	71 81       	ldd	r23, Z+1	; 0x01
    135c:	80 e0       	ldi	r24, 0x00	; 0
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	a1 01       	movw	r20, r2
    1362:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__ultoa_invert>
    1366:	e8 2e       	mov	r14, r24
    1368:	e2 18       	sub	r14, r2
    136a:	01 2f       	mov	r16, r17
    136c:	0f 77       	andi	r16, 0x7F	; 127
    136e:	06 ff       	sbrs	r16, 6
    1370:	09 c0       	rjmp	.+18     	; 0x1384 <vfprintf+0x620>
    1372:	0e 7f       	andi	r16, 0xFE	; 254
    1374:	ef 14       	cp	r14, r15
    1376:	30 f4       	brcc	.+12     	; 0x1384 <vfprintf+0x620>
    1378:	04 ff       	sbrs	r16, 4
    137a:	06 c0       	rjmp	.+12     	; 0x1388 <vfprintf+0x624>
    137c:	02 fd       	sbrc	r16, 2
    137e:	04 c0       	rjmp	.+8      	; 0x1388 <vfprintf+0x624>
    1380:	0f 7e       	andi	r16, 0xEF	; 239
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <vfprintf+0x624>
    1384:	1e 2d       	mov	r17, r14
    1386:	01 c0       	rjmp	.+2      	; 0x138a <vfprintf+0x626>
    1388:	1f 2d       	mov	r17, r15
    138a:	80 2f       	mov	r24, r16
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	04 ff       	sbrs	r16, 4
    1390:	0c c0       	rjmp	.+24     	; 0x13aa <vfprintf+0x646>
    1392:	fe 01       	movw	r30, r28
    1394:	ee 0d       	add	r30, r14
    1396:	f1 1d       	adc	r31, r1
    1398:	20 81       	ld	r18, Z
    139a:	20 33       	cpi	r18, 0x30	; 48
    139c:	11 f4       	brne	.+4      	; 0x13a2 <vfprintf+0x63e>
    139e:	09 7e       	andi	r16, 0xE9	; 233
    13a0:	09 c0       	rjmp	.+18     	; 0x13b4 <vfprintf+0x650>
    13a2:	02 ff       	sbrs	r16, 2
    13a4:	06 c0       	rjmp	.+12     	; 0x13b2 <vfprintf+0x64e>
    13a6:	1e 5f       	subi	r17, 0xFE	; 254
    13a8:	05 c0       	rjmp	.+10     	; 0x13b4 <vfprintf+0x650>
    13aa:	86 78       	andi	r24, 0x86	; 134
    13ac:	90 70       	andi	r25, 0x00	; 0
    13ae:	00 97       	sbiw	r24, 0x00	; 0
    13b0:	09 f0       	breq	.+2      	; 0x13b4 <vfprintf+0x650>
    13b2:	1f 5f       	subi	r17, 0xFF	; 255
    13b4:	a0 2e       	mov	r10, r16
    13b6:	bb 24       	eor	r11, r11
    13b8:	03 fd       	sbrc	r16, 3
    13ba:	12 c0       	rjmp	.+36     	; 0x13e0 <vfprintf+0x67c>
    13bc:	00 ff       	sbrs	r16, 0
    13be:	0d c0       	rjmp	.+26     	; 0x13da <vfprintf+0x676>
    13c0:	fe 2c       	mov	r15, r14
    13c2:	1d 15       	cp	r17, r13
    13c4:	50 f4       	brcc	.+20     	; 0x13da <vfprintf+0x676>
    13c6:	fd 0c       	add	r15, r13
    13c8:	f1 1a       	sub	r15, r17
    13ca:	1d 2d       	mov	r17, r13
    13cc:	06 c0       	rjmp	.+12     	; 0x13da <vfprintf+0x676>
    13ce:	80 e2       	ldi	r24, 0x20	; 32
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	b4 01       	movw	r22, r8
    13d4:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    13d8:	1f 5f       	subi	r17, 0xFF	; 255
    13da:	1d 15       	cp	r17, r13
    13dc:	c0 f3       	brcs	.-16     	; 0x13ce <vfprintf+0x66a>
    13de:	04 c0       	rjmp	.+8      	; 0x13e8 <vfprintf+0x684>
    13e0:	1d 15       	cp	r17, r13
    13e2:	10 f4       	brcc	.+4      	; 0x13e8 <vfprintf+0x684>
    13e4:	d1 1a       	sub	r13, r17
    13e6:	01 c0       	rjmp	.+2      	; 0x13ea <vfprintf+0x686>
    13e8:	dd 24       	eor	r13, r13
    13ea:	a4 fe       	sbrs	r10, 4
    13ec:	0f c0       	rjmp	.+30     	; 0x140c <vfprintf+0x6a8>
    13ee:	80 e3       	ldi	r24, 0x30	; 48
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	b4 01       	movw	r22, r8
    13f4:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    13f8:	a2 fe       	sbrs	r10, 2
    13fa:	1f c0       	rjmp	.+62     	; 0x143a <vfprintf+0x6d6>
    13fc:	a1 fe       	sbrs	r10, 1
    13fe:	03 c0       	rjmp	.+6      	; 0x1406 <vfprintf+0x6a2>
    1400:	88 e5       	ldi	r24, 0x58	; 88
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	10 c0       	rjmp	.+32     	; 0x1426 <vfprintf+0x6c2>
    1406:	88 e7       	ldi	r24, 0x78	; 120
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	0d c0       	rjmp	.+26     	; 0x1426 <vfprintf+0x6c2>
    140c:	c5 01       	movw	r24, r10
    140e:	86 78       	andi	r24, 0x86	; 134
    1410:	90 70       	andi	r25, 0x00	; 0
    1412:	00 97       	sbiw	r24, 0x00	; 0
    1414:	91 f0       	breq	.+36     	; 0x143a <vfprintf+0x6d6>
    1416:	a1 fc       	sbrc	r10, 1
    1418:	02 c0       	rjmp	.+4      	; 0x141e <vfprintf+0x6ba>
    141a:	80 e2       	ldi	r24, 0x20	; 32
    141c:	01 c0       	rjmp	.+2      	; 0x1420 <vfprintf+0x6bc>
    141e:	8b e2       	ldi	r24, 0x2B	; 43
    1420:	07 fd       	sbrc	r16, 7
    1422:	8d e2       	ldi	r24, 0x2D	; 45
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	b4 01       	movw	r22, r8
    1428:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    142c:	06 c0       	rjmp	.+12     	; 0x143a <vfprintf+0x6d6>
    142e:	80 e3       	ldi	r24, 0x30	; 48
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	b4 01       	movw	r22, r8
    1434:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1438:	fa 94       	dec	r15
    143a:	ef 14       	cp	r14, r15
    143c:	c0 f3       	brcs	.-16     	; 0x142e <vfprintf+0x6ca>
    143e:	ea 94       	dec	r14
    1440:	f1 01       	movw	r30, r2
    1442:	ee 0d       	add	r30, r14
    1444:	f1 1d       	adc	r31, r1
    1446:	80 81       	ld	r24, Z
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	b4 01       	movw	r22, r8
    144c:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1450:	ee 20       	and	r14, r14
    1452:	a9 f7       	brne	.-22     	; 0x143e <vfprintf+0x6da>
    1454:	06 c0       	rjmp	.+12     	; 0x1462 <vfprintf+0x6fe>
    1456:	80 e2       	ldi	r24, 0x20	; 32
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	b4 01       	movw	r22, r8
    145c:	0e 94 98 0b 	call	0x1730	; 0x1730 <fputc>
    1460:	da 94       	dec	r13
    1462:	dd 20       	and	r13, r13
    1464:	c1 f7       	brne	.-16     	; 0x1456 <vfprintf+0x6f2>
    1466:	8e cc       	rjmp	.-1764   	; 0xd84 <vfprintf+0x20>
    1468:	f4 01       	movw	r30, r8
    146a:	86 81       	ldd	r24, Z+6	; 0x06
    146c:	97 81       	ldd	r25, Z+7	; 0x07
    146e:	02 c0       	rjmp	.+4      	; 0x1474 <vfprintf+0x710>
    1470:	8f ef       	ldi	r24, 0xFF	; 255
    1472:	9f ef       	ldi	r25, 0xFF	; 255
    1474:	65 96       	adiw	r28, 0x15	; 21
    1476:	e2 e1       	ldi	r30, 0x12	; 18
    1478:	0c 94 6d 0a 	jmp	0x14da	; 0x14da <__epilogue_restores__>

0000147c <__divmodhi4>:
    147c:	97 fb       	bst	r25, 7
    147e:	09 2e       	mov	r0, r25
    1480:	07 26       	eor	r0, r23
    1482:	0a d0       	rcall	.+20     	; 0x1498 <__divmodhi4_neg1>
    1484:	77 fd       	sbrc	r23, 7
    1486:	04 d0       	rcall	.+8      	; 0x1490 <__divmodhi4_neg2>
    1488:	43 d0       	rcall	.+134    	; 0x1510 <__udivmodhi4>
    148a:	06 d0       	rcall	.+12     	; 0x1498 <__divmodhi4_neg1>
    148c:	00 20       	and	r0, r0
    148e:	1a f4       	brpl	.+6      	; 0x1496 <__divmodhi4_exit>

00001490 <__divmodhi4_neg2>:
    1490:	70 95       	com	r23
    1492:	61 95       	neg	r22
    1494:	7f 4f       	sbci	r23, 0xFF	; 255

00001496 <__divmodhi4_exit>:
    1496:	08 95       	ret

00001498 <__divmodhi4_neg1>:
    1498:	f6 f7       	brtc	.-4      	; 0x1496 <__divmodhi4_exit>
    149a:	90 95       	com	r25
    149c:	81 95       	neg	r24
    149e:	9f 4f       	sbci	r25, 0xFF	; 255
    14a0:	08 95       	ret

000014a2 <__prologue_saves__>:
    14a2:	2f 92       	push	r2
    14a4:	3f 92       	push	r3
    14a6:	4f 92       	push	r4
    14a8:	5f 92       	push	r5
    14aa:	6f 92       	push	r6
    14ac:	7f 92       	push	r7
    14ae:	8f 92       	push	r8
    14b0:	9f 92       	push	r9
    14b2:	af 92       	push	r10
    14b4:	bf 92       	push	r11
    14b6:	cf 92       	push	r12
    14b8:	df 92       	push	r13
    14ba:	ef 92       	push	r14
    14bc:	ff 92       	push	r15
    14be:	0f 93       	push	r16
    14c0:	1f 93       	push	r17
    14c2:	cf 93       	push	r28
    14c4:	df 93       	push	r29
    14c6:	cd b7       	in	r28, 0x3d	; 61
    14c8:	de b7       	in	r29, 0x3e	; 62
    14ca:	ca 1b       	sub	r28, r26
    14cc:	db 0b       	sbc	r29, r27
    14ce:	0f b6       	in	r0, 0x3f	; 63
    14d0:	f8 94       	cli
    14d2:	de bf       	out	0x3e, r29	; 62
    14d4:	0f be       	out	0x3f, r0	; 63
    14d6:	cd bf       	out	0x3d, r28	; 61
    14d8:	09 94       	ijmp

000014da <__epilogue_restores__>:
    14da:	2a 88       	ldd	r2, Y+18	; 0x12
    14dc:	39 88       	ldd	r3, Y+17	; 0x11
    14de:	48 88       	ldd	r4, Y+16	; 0x10
    14e0:	5f 84       	ldd	r5, Y+15	; 0x0f
    14e2:	6e 84       	ldd	r6, Y+14	; 0x0e
    14e4:	7d 84       	ldd	r7, Y+13	; 0x0d
    14e6:	8c 84       	ldd	r8, Y+12	; 0x0c
    14e8:	9b 84       	ldd	r9, Y+11	; 0x0b
    14ea:	aa 84       	ldd	r10, Y+10	; 0x0a
    14ec:	b9 84       	ldd	r11, Y+9	; 0x09
    14ee:	c8 84       	ldd	r12, Y+8	; 0x08
    14f0:	df 80       	ldd	r13, Y+7	; 0x07
    14f2:	ee 80       	ldd	r14, Y+6	; 0x06
    14f4:	fd 80       	ldd	r15, Y+5	; 0x05
    14f6:	0c 81       	ldd	r16, Y+4	; 0x04
    14f8:	1b 81       	ldd	r17, Y+3	; 0x03
    14fa:	aa 81       	ldd	r26, Y+2	; 0x02
    14fc:	b9 81       	ldd	r27, Y+1	; 0x01
    14fe:	ce 0f       	add	r28, r30
    1500:	d1 1d       	adc	r29, r1
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	f8 94       	cli
    1506:	de bf       	out	0x3e, r29	; 62
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	cd bf       	out	0x3d, r28	; 61
    150c:	ed 01       	movw	r28, r26
    150e:	08 95       	ret

00001510 <__udivmodhi4>:
    1510:	aa 1b       	sub	r26, r26
    1512:	bb 1b       	sub	r27, r27
    1514:	51 e1       	ldi	r21, 0x11	; 17
    1516:	07 c0       	rjmp	.+14     	; 0x1526 <__udivmodhi4_ep>

00001518 <__udivmodhi4_loop>:
    1518:	aa 1f       	adc	r26, r26
    151a:	bb 1f       	adc	r27, r27
    151c:	a6 17       	cp	r26, r22
    151e:	b7 07       	cpc	r27, r23
    1520:	10 f0       	brcs	.+4      	; 0x1526 <__udivmodhi4_ep>
    1522:	a6 1b       	sub	r26, r22
    1524:	b7 0b       	sbc	r27, r23

00001526 <__udivmodhi4_ep>:
    1526:	88 1f       	adc	r24, r24
    1528:	99 1f       	adc	r25, r25
    152a:	5a 95       	dec	r21
    152c:	a9 f7       	brne	.-22     	; 0x1518 <__udivmodhi4_loop>
    152e:	80 95       	com	r24
    1530:	90 95       	com	r25
    1532:	bc 01       	movw	r22, r24
    1534:	cd 01       	movw	r24, r26
    1536:	08 95       	ret

00001538 <abort>:
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	f8 94       	cli
    153e:	0c 94 37 0c 	jmp	0x186e	; 0x186e <_exit>

00001542 <__ftoa_engine>:
    1542:	28 30       	cpi	r18, 0x08	; 8
    1544:	08 f0       	brcs	.+2      	; 0x1548 <__ftoa_engine+0x6>
    1546:	27 e0       	ldi	r18, 0x07	; 7
    1548:	33 27       	eor	r19, r19
    154a:	da 01       	movw	r26, r20
    154c:	99 0f       	add	r25, r25
    154e:	31 1d       	adc	r19, r1
    1550:	87 fd       	sbrc	r24, 7
    1552:	91 60       	ori	r25, 0x01	; 1
    1554:	00 96       	adiw	r24, 0x00	; 0
    1556:	61 05       	cpc	r22, r1
    1558:	71 05       	cpc	r23, r1
    155a:	39 f4       	brne	.+14     	; 0x156a <__ftoa_engine+0x28>
    155c:	32 60       	ori	r19, 0x02	; 2
    155e:	2e 5f       	subi	r18, 0xFE	; 254
    1560:	3d 93       	st	X+, r19
    1562:	30 e3       	ldi	r19, 0x30	; 48
    1564:	2a 95       	dec	r18
    1566:	e1 f7       	brne	.-8      	; 0x1560 <__ftoa_engine+0x1e>
    1568:	08 95       	ret
    156a:	9f 3f       	cpi	r25, 0xFF	; 255
    156c:	30 f0       	brcs	.+12     	; 0x157a <__ftoa_engine+0x38>
    156e:	80 38       	cpi	r24, 0x80	; 128
    1570:	71 05       	cpc	r23, r1
    1572:	61 05       	cpc	r22, r1
    1574:	09 f0       	breq	.+2      	; 0x1578 <__ftoa_engine+0x36>
    1576:	3c 5f       	subi	r19, 0xFC	; 252
    1578:	3c 5f       	subi	r19, 0xFC	; 252
    157a:	3d 93       	st	X+, r19
    157c:	91 30       	cpi	r25, 0x01	; 1
    157e:	08 f0       	brcs	.+2      	; 0x1582 <__ftoa_engine+0x40>
    1580:	80 68       	ori	r24, 0x80	; 128
    1582:	91 1d       	adc	r25, r1
    1584:	df 93       	push	r29
    1586:	cf 93       	push	r28
    1588:	1f 93       	push	r17
    158a:	0f 93       	push	r16
    158c:	ff 92       	push	r15
    158e:	ef 92       	push	r14
    1590:	19 2f       	mov	r17, r25
    1592:	98 7f       	andi	r25, 0xF8	; 248
    1594:	96 95       	lsr	r25
    1596:	e9 2f       	mov	r30, r25
    1598:	96 95       	lsr	r25
    159a:	96 95       	lsr	r25
    159c:	e9 0f       	add	r30, r25
    159e:	ff 27       	eor	r31, r31
    15a0:	e6 53       	subi	r30, 0x36	; 54
    15a2:	ff 4f       	sbci	r31, 0xFF	; 255
    15a4:	99 27       	eor	r25, r25
    15a6:	33 27       	eor	r19, r19
    15a8:	ee 24       	eor	r14, r14
    15aa:	ff 24       	eor	r15, r15
    15ac:	a7 01       	movw	r20, r14
    15ae:	e7 01       	movw	r28, r14
    15b0:	05 90       	lpm	r0, Z+
    15b2:	08 94       	sec
    15b4:	07 94       	ror	r0
    15b6:	28 f4       	brcc	.+10     	; 0x15c2 <__ftoa_engine+0x80>
    15b8:	36 0f       	add	r19, r22
    15ba:	e7 1e       	adc	r14, r23
    15bc:	f8 1e       	adc	r15, r24
    15be:	49 1f       	adc	r20, r25
    15c0:	51 1d       	adc	r21, r1
    15c2:	66 0f       	add	r22, r22
    15c4:	77 1f       	adc	r23, r23
    15c6:	88 1f       	adc	r24, r24
    15c8:	99 1f       	adc	r25, r25
    15ca:	06 94       	lsr	r0
    15cc:	a1 f7       	brne	.-24     	; 0x15b6 <__ftoa_engine+0x74>
    15ce:	05 90       	lpm	r0, Z+
    15d0:	07 94       	ror	r0
    15d2:	28 f4       	brcc	.+10     	; 0x15de <__ftoa_engine+0x9c>
    15d4:	e7 0e       	add	r14, r23
    15d6:	f8 1e       	adc	r15, r24
    15d8:	49 1f       	adc	r20, r25
    15da:	56 1f       	adc	r21, r22
    15dc:	c1 1d       	adc	r28, r1
    15de:	77 0f       	add	r23, r23
    15e0:	88 1f       	adc	r24, r24
    15e2:	99 1f       	adc	r25, r25
    15e4:	66 1f       	adc	r22, r22
    15e6:	06 94       	lsr	r0
    15e8:	a1 f7       	brne	.-24     	; 0x15d2 <__ftoa_engine+0x90>
    15ea:	05 90       	lpm	r0, Z+
    15ec:	07 94       	ror	r0
    15ee:	28 f4       	brcc	.+10     	; 0x15fa <__ftoa_engine+0xb8>
    15f0:	f8 0e       	add	r15, r24
    15f2:	49 1f       	adc	r20, r25
    15f4:	56 1f       	adc	r21, r22
    15f6:	c7 1f       	adc	r28, r23
    15f8:	d1 1d       	adc	r29, r1
    15fa:	88 0f       	add	r24, r24
    15fc:	99 1f       	adc	r25, r25
    15fe:	66 1f       	adc	r22, r22
    1600:	77 1f       	adc	r23, r23
    1602:	06 94       	lsr	r0
    1604:	a1 f7       	brne	.-24     	; 0x15ee <__ftoa_engine+0xac>
    1606:	05 90       	lpm	r0, Z+
    1608:	07 94       	ror	r0
    160a:	20 f4       	brcc	.+8      	; 0x1614 <__ftoa_engine+0xd2>
    160c:	49 0f       	add	r20, r25
    160e:	56 1f       	adc	r21, r22
    1610:	c7 1f       	adc	r28, r23
    1612:	d8 1f       	adc	r29, r24
    1614:	99 0f       	add	r25, r25
    1616:	66 1f       	adc	r22, r22
    1618:	77 1f       	adc	r23, r23
    161a:	88 1f       	adc	r24, r24
    161c:	06 94       	lsr	r0
    161e:	a9 f7       	brne	.-22     	; 0x160a <__ftoa_engine+0xc8>
    1620:	84 91       	lpm	r24, Z
    1622:	10 95       	com	r17
    1624:	17 70       	andi	r17, 0x07	; 7
    1626:	41 f0       	breq	.+16     	; 0x1638 <__ftoa_engine+0xf6>
    1628:	d6 95       	lsr	r29
    162a:	c7 95       	ror	r28
    162c:	57 95       	ror	r21
    162e:	47 95       	ror	r20
    1630:	f7 94       	ror	r15
    1632:	e7 94       	ror	r14
    1634:	1a 95       	dec	r17
    1636:	c1 f7       	brne	.-16     	; 0x1628 <__ftoa_engine+0xe6>
    1638:	e0 e7       	ldi	r30, 0x70	; 112
    163a:	f0 e0       	ldi	r31, 0x00	; 0
    163c:	68 94       	set
    163e:	15 90       	lpm	r1, Z+
    1640:	15 91       	lpm	r17, Z+
    1642:	35 91       	lpm	r19, Z+
    1644:	65 91       	lpm	r22, Z+
    1646:	95 91       	lpm	r25, Z+
    1648:	05 90       	lpm	r0, Z+
    164a:	7f e2       	ldi	r23, 0x2F	; 47
    164c:	73 95       	inc	r23
    164e:	e1 18       	sub	r14, r1
    1650:	f1 0a       	sbc	r15, r17
    1652:	43 0b       	sbc	r20, r19
    1654:	56 0b       	sbc	r21, r22
    1656:	c9 0b       	sbc	r28, r25
    1658:	d0 09       	sbc	r29, r0
    165a:	c0 f7       	brcc	.-16     	; 0x164c <__ftoa_engine+0x10a>
    165c:	e1 0c       	add	r14, r1
    165e:	f1 1e       	adc	r15, r17
    1660:	43 1f       	adc	r20, r19
    1662:	56 1f       	adc	r21, r22
    1664:	c9 1f       	adc	r28, r25
    1666:	d0 1d       	adc	r29, r0
    1668:	7e f4       	brtc	.+30     	; 0x1688 <__ftoa_engine+0x146>
    166a:	70 33       	cpi	r23, 0x30	; 48
    166c:	11 f4       	brne	.+4      	; 0x1672 <__ftoa_engine+0x130>
    166e:	8a 95       	dec	r24
    1670:	e6 cf       	rjmp	.-52     	; 0x163e <__ftoa_engine+0xfc>
    1672:	e8 94       	clt
    1674:	01 50       	subi	r16, 0x01	; 1
    1676:	30 f0       	brcs	.+12     	; 0x1684 <__ftoa_engine+0x142>
    1678:	08 0f       	add	r16, r24
    167a:	0a f4       	brpl	.+2      	; 0x167e <__ftoa_engine+0x13c>
    167c:	00 27       	eor	r16, r16
    167e:	02 17       	cp	r16, r18
    1680:	08 f4       	brcc	.+2      	; 0x1684 <__ftoa_engine+0x142>
    1682:	20 2f       	mov	r18, r16
    1684:	23 95       	inc	r18
    1686:	02 2f       	mov	r16, r18
    1688:	7a 33       	cpi	r23, 0x3A	; 58
    168a:	28 f0       	brcs	.+10     	; 0x1696 <__ftoa_engine+0x154>
    168c:	79 e3       	ldi	r23, 0x39	; 57
    168e:	7d 93       	st	X+, r23
    1690:	2a 95       	dec	r18
    1692:	e9 f7       	brne	.-6      	; 0x168e <__ftoa_engine+0x14c>
    1694:	10 c0       	rjmp	.+32     	; 0x16b6 <__ftoa_engine+0x174>
    1696:	7d 93       	st	X+, r23
    1698:	2a 95       	dec	r18
    169a:	89 f6       	brne	.-94     	; 0x163e <__ftoa_engine+0xfc>
    169c:	06 94       	lsr	r0
    169e:	97 95       	ror	r25
    16a0:	67 95       	ror	r22
    16a2:	37 95       	ror	r19
    16a4:	17 95       	ror	r17
    16a6:	17 94       	ror	r1
    16a8:	e1 18       	sub	r14, r1
    16aa:	f1 0a       	sbc	r15, r17
    16ac:	43 0b       	sbc	r20, r19
    16ae:	56 0b       	sbc	r21, r22
    16b0:	c9 0b       	sbc	r28, r25
    16b2:	d0 09       	sbc	r29, r0
    16b4:	98 f0       	brcs	.+38     	; 0x16dc <__ftoa_engine+0x19a>
    16b6:	23 95       	inc	r18
    16b8:	7e 91       	ld	r23, -X
    16ba:	73 95       	inc	r23
    16bc:	7a 33       	cpi	r23, 0x3A	; 58
    16be:	08 f0       	brcs	.+2      	; 0x16c2 <__ftoa_engine+0x180>
    16c0:	70 e3       	ldi	r23, 0x30	; 48
    16c2:	7c 93       	st	X, r23
    16c4:	20 13       	cpse	r18, r16
    16c6:	b8 f7       	brcc	.-18     	; 0x16b6 <__ftoa_engine+0x174>
    16c8:	7e 91       	ld	r23, -X
    16ca:	70 61       	ori	r23, 0x10	; 16
    16cc:	7d 93       	st	X+, r23
    16ce:	30 f0       	brcs	.+12     	; 0x16dc <__ftoa_engine+0x19a>
    16d0:	83 95       	inc	r24
    16d2:	71 e3       	ldi	r23, 0x31	; 49
    16d4:	7d 93       	st	X+, r23
    16d6:	70 e3       	ldi	r23, 0x30	; 48
    16d8:	2a 95       	dec	r18
    16da:	e1 f7       	brne	.-8      	; 0x16d4 <__ftoa_engine+0x192>
    16dc:	11 24       	eor	r1, r1
    16de:	ef 90       	pop	r14
    16e0:	ff 90       	pop	r15
    16e2:	0f 91       	pop	r16
    16e4:	1f 91       	pop	r17
    16e6:	cf 91       	pop	r28
    16e8:	df 91       	pop	r29
    16ea:	99 27       	eor	r25, r25
    16ec:	87 fd       	sbrc	r24, 7
    16ee:	90 95       	com	r25
    16f0:	08 95       	ret

000016f2 <strnlen_P>:
    16f2:	fc 01       	movw	r30, r24
    16f4:	05 90       	lpm	r0, Z+
    16f6:	61 50       	subi	r22, 0x01	; 1
    16f8:	70 40       	sbci	r23, 0x00	; 0
    16fa:	01 10       	cpse	r0, r1
    16fc:	d8 f7       	brcc	.-10     	; 0x16f4 <strnlen_P+0x2>
    16fe:	80 95       	com	r24
    1700:	90 95       	com	r25
    1702:	8e 0f       	add	r24, r30
    1704:	9f 1f       	adc	r25, r31
    1706:	08 95       	ret

00001708 <strcmp>:
    1708:	fb 01       	movw	r30, r22
    170a:	dc 01       	movw	r26, r24
    170c:	8d 91       	ld	r24, X+
    170e:	01 90       	ld	r0, Z+
    1710:	80 19       	sub	r24, r0
    1712:	01 10       	cpse	r0, r1
    1714:	d9 f3       	breq	.-10     	; 0x170c <strcmp+0x4>
    1716:	99 0b       	sbc	r25, r25
    1718:	08 95       	ret

0000171a <strnlen>:
    171a:	fc 01       	movw	r30, r24
    171c:	61 50       	subi	r22, 0x01	; 1
    171e:	70 40       	sbci	r23, 0x00	; 0
    1720:	01 90       	ld	r0, Z+
    1722:	01 10       	cpse	r0, r1
    1724:	d8 f7       	brcc	.-10     	; 0x171c <strnlen+0x2>
    1726:	80 95       	com	r24
    1728:	90 95       	com	r25
    172a:	8e 0f       	add	r24, r30
    172c:	9f 1f       	adc	r25, r31
    172e:	08 95       	ret

00001730 <fputc>:
    1730:	0f 93       	push	r16
    1732:	1f 93       	push	r17
    1734:	cf 93       	push	r28
    1736:	df 93       	push	r29
    1738:	8c 01       	movw	r16, r24
    173a:	eb 01       	movw	r28, r22
    173c:	8b 81       	ldd	r24, Y+3	; 0x03
    173e:	81 ff       	sbrs	r24, 1
    1740:	1b c0       	rjmp	.+54     	; 0x1778 <fputc+0x48>
    1742:	82 ff       	sbrs	r24, 2
    1744:	0d c0       	rjmp	.+26     	; 0x1760 <fputc+0x30>
    1746:	2e 81       	ldd	r18, Y+6	; 0x06
    1748:	3f 81       	ldd	r19, Y+7	; 0x07
    174a:	8c 81       	ldd	r24, Y+4	; 0x04
    174c:	9d 81       	ldd	r25, Y+5	; 0x05
    174e:	28 17       	cp	r18, r24
    1750:	39 07       	cpc	r19, r25
    1752:	64 f4       	brge	.+24     	; 0x176c <fputc+0x3c>
    1754:	e8 81       	ld	r30, Y
    1756:	f9 81       	ldd	r31, Y+1	; 0x01
    1758:	01 93       	st	Z+, r16
    175a:	f9 83       	std	Y+1, r31	; 0x01
    175c:	e8 83       	st	Y, r30
    175e:	06 c0       	rjmp	.+12     	; 0x176c <fputc+0x3c>
    1760:	e8 85       	ldd	r30, Y+8	; 0x08
    1762:	f9 85       	ldd	r31, Y+9	; 0x09
    1764:	80 2f       	mov	r24, r16
    1766:	09 95       	icall
    1768:	00 97       	sbiw	r24, 0x00	; 0
    176a:	31 f4       	brne	.+12     	; 0x1778 <fputc+0x48>
    176c:	8e 81       	ldd	r24, Y+6	; 0x06
    176e:	9f 81       	ldd	r25, Y+7	; 0x07
    1770:	01 96       	adiw	r24, 0x01	; 1
    1772:	9f 83       	std	Y+7, r25	; 0x07
    1774:	8e 83       	std	Y+6, r24	; 0x06
    1776:	02 c0       	rjmp	.+4      	; 0x177c <fputc+0x4c>
    1778:	0f ef       	ldi	r16, 0xFF	; 255
    177a:	1f ef       	ldi	r17, 0xFF	; 255
    177c:	c8 01       	movw	r24, r16
    177e:	df 91       	pop	r29
    1780:	cf 91       	pop	r28
    1782:	1f 91       	pop	r17
    1784:	0f 91       	pop	r16
    1786:	08 95       	ret

00001788 <printf>:
    1788:	a0 e0       	ldi	r26, 0x00	; 0
    178a:	b0 e0       	ldi	r27, 0x00	; 0
    178c:	ea ec       	ldi	r30, 0xCA	; 202
    178e:	fb e0       	ldi	r31, 0x0B	; 11
    1790:	0c 94 61 0a 	jmp	0x14c2	; 0x14c2 <__prologue_saves__+0x20>
    1794:	fe 01       	movw	r30, r28
    1796:	35 96       	adiw	r30, 0x05	; 5
    1798:	61 91       	ld	r22, Z+
    179a:	71 91       	ld	r23, Z+
    179c:	80 91 da 05 	lds	r24, 0x05DA
    17a0:	90 91 db 05 	lds	r25, 0x05DB
    17a4:	af 01       	movw	r20, r30
    17a6:	0e 94 b2 06 	call	0xd64	; 0xd64 <vfprintf>
    17aa:	20 96       	adiw	r28, 0x00	; 0
    17ac:	e2 e0       	ldi	r30, 0x02	; 2
    17ae:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__epilogue_restores__+0x20>

000017b2 <__ultoa_invert>:
    17b2:	fa 01       	movw	r30, r20
    17b4:	aa 27       	eor	r26, r26
    17b6:	28 30       	cpi	r18, 0x08	; 8
    17b8:	51 f1       	breq	.+84     	; 0x180e <__ultoa_invert+0x5c>
    17ba:	20 31       	cpi	r18, 0x10	; 16
    17bc:	81 f1       	breq	.+96     	; 0x181e <__ultoa_invert+0x6c>
    17be:	e8 94       	clt
    17c0:	6f 93       	push	r22
    17c2:	6e 7f       	andi	r22, 0xFE	; 254
    17c4:	6e 5f       	subi	r22, 0xFE	; 254
    17c6:	7f 4f       	sbci	r23, 0xFF	; 255
    17c8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ca:	9f 4f       	sbci	r25, 0xFF	; 255
    17cc:	af 4f       	sbci	r26, 0xFF	; 255
    17ce:	b1 e0       	ldi	r27, 0x01	; 1
    17d0:	3e d0       	rcall	.+124    	; 0x184e <__ultoa_invert+0x9c>
    17d2:	b4 e0       	ldi	r27, 0x04	; 4
    17d4:	3c d0       	rcall	.+120    	; 0x184e <__ultoa_invert+0x9c>
    17d6:	67 0f       	add	r22, r23
    17d8:	78 1f       	adc	r23, r24
    17da:	89 1f       	adc	r24, r25
    17dc:	9a 1f       	adc	r25, r26
    17de:	a1 1d       	adc	r26, r1
    17e0:	68 0f       	add	r22, r24
    17e2:	79 1f       	adc	r23, r25
    17e4:	8a 1f       	adc	r24, r26
    17e6:	91 1d       	adc	r25, r1
    17e8:	a1 1d       	adc	r26, r1
    17ea:	6a 0f       	add	r22, r26
    17ec:	71 1d       	adc	r23, r1
    17ee:	81 1d       	adc	r24, r1
    17f0:	91 1d       	adc	r25, r1
    17f2:	a1 1d       	adc	r26, r1
    17f4:	20 d0       	rcall	.+64     	; 0x1836 <__ultoa_invert+0x84>
    17f6:	09 f4       	brne	.+2      	; 0x17fa <__ultoa_invert+0x48>
    17f8:	68 94       	set
    17fa:	3f 91       	pop	r19
    17fc:	2a e0       	ldi	r18, 0x0A	; 10
    17fe:	26 9f       	mul	r18, r22
    1800:	11 24       	eor	r1, r1
    1802:	30 19       	sub	r19, r0
    1804:	30 5d       	subi	r19, 0xD0	; 208
    1806:	31 93       	st	Z+, r19
    1808:	de f6       	brtc	.-74     	; 0x17c0 <__ultoa_invert+0xe>
    180a:	cf 01       	movw	r24, r30
    180c:	08 95       	ret
    180e:	46 2f       	mov	r20, r22
    1810:	47 70       	andi	r20, 0x07	; 7
    1812:	40 5d       	subi	r20, 0xD0	; 208
    1814:	41 93       	st	Z+, r20
    1816:	b3 e0       	ldi	r27, 0x03	; 3
    1818:	0f d0       	rcall	.+30     	; 0x1838 <__ultoa_invert+0x86>
    181a:	c9 f7       	brne	.-14     	; 0x180e <__ultoa_invert+0x5c>
    181c:	f6 cf       	rjmp	.-20     	; 0x180a <__ultoa_invert+0x58>
    181e:	46 2f       	mov	r20, r22
    1820:	4f 70       	andi	r20, 0x0F	; 15
    1822:	40 5d       	subi	r20, 0xD0	; 208
    1824:	4a 33       	cpi	r20, 0x3A	; 58
    1826:	18 f0       	brcs	.+6      	; 0x182e <__ultoa_invert+0x7c>
    1828:	49 5d       	subi	r20, 0xD9	; 217
    182a:	31 fd       	sbrc	r19, 1
    182c:	40 52       	subi	r20, 0x20	; 32
    182e:	41 93       	st	Z+, r20
    1830:	02 d0       	rcall	.+4      	; 0x1836 <__ultoa_invert+0x84>
    1832:	a9 f7       	brne	.-22     	; 0x181e <__ultoa_invert+0x6c>
    1834:	ea cf       	rjmp	.-44     	; 0x180a <__ultoa_invert+0x58>
    1836:	b4 e0       	ldi	r27, 0x04	; 4
    1838:	a6 95       	lsr	r26
    183a:	97 95       	ror	r25
    183c:	87 95       	ror	r24
    183e:	77 95       	ror	r23
    1840:	67 95       	ror	r22
    1842:	ba 95       	dec	r27
    1844:	c9 f7       	brne	.-14     	; 0x1838 <__ultoa_invert+0x86>
    1846:	00 97       	sbiw	r24, 0x00	; 0
    1848:	61 05       	cpc	r22, r1
    184a:	71 05       	cpc	r23, r1
    184c:	08 95       	ret
    184e:	9b 01       	movw	r18, r22
    1850:	ac 01       	movw	r20, r24
    1852:	0a 2e       	mov	r0, r26
    1854:	06 94       	lsr	r0
    1856:	57 95       	ror	r21
    1858:	47 95       	ror	r20
    185a:	37 95       	ror	r19
    185c:	27 95       	ror	r18
    185e:	ba 95       	dec	r27
    1860:	c9 f7       	brne	.-14     	; 0x1854 <__ultoa_invert+0xa2>
    1862:	62 0f       	add	r22, r18
    1864:	73 1f       	adc	r23, r19
    1866:	84 1f       	adc	r24, r20
    1868:	95 1f       	adc	r25, r21
    186a:	a0 1d       	adc	r26, r0
    186c:	08 95       	ret

0000186e <_exit>:
    186e:	f8 94       	cli

00001870 <__stop_program>:
    1870:	ff cf       	rjmp	.-2      	; 0x1870 <__stop_program>
